// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "QinWong",
            "email": "qinwong@live.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/base/region": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "获取国内地区数据列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "0 省 其他为上级ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comm.Response"
                        }
                    }
                }
            }
        },
        "/base/regionLngLat": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "根据经纬度返回所在城市信息",
                "parameters": [
                    {
                        "description": "date",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserRegionLngLat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comm.Response"
                        }
                    }
                }
            }
        },
        "/captcha": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "生成验证码",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comm.Response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "用户登录接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "base"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "接口访问来源",
                        "name": "platform",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "date",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comm.Response"
                        }
                    }
                }
            }
        },
        "/user/out": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system_user"
                ],
                "summary": "用户退出"
            }
        }
    },
    "definitions": {
        "comm.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "request.Login": {
            "type": "object",
            "required": [
                "pass",
                "type",
                "user"
            ],
            "properties": {
                "code": {
                    "description": "验证码",
                    "type": "string"
                },
                "codeId": {
                    "description": "验证码id",
                    "type": "string"
                },
                "pass": {
                    "description": "账户密码或短信验证码",
                    "type": "string"
                },
                "type": {
                    "description": "登录类型  0系统ID 1用户名 2手机号 3微信 4支付宝 5字节跳动 只支持 1与2登录",
                    "type": "integer"
                },
                "user": {
                    "description": "用户账户",
                    "type": "string"
                }
            }
        },
        "request.UserRegionLngLat": {
            "type": "object",
            "required": [
                "lat",
                "lng"
            ],
            "properties": {
                "lat": {
                    "description": "经度",
                    "type": "number"
                },
                "lng": {
                    "description": "纬度",
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "192.168.3.110:9002",
	BasePath:    "/api/user",
	Schemes:     []string{"http", "https"},
	Title:       "Go 用户接口",
	Description: "提供用户登录、查询等所有用户相关操作",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
