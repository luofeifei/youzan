// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serverShop_sys.proto

package serverShop

import (
	context "context"
	fmt "fmt"
	tars "github.com/TarsCloud/TarsGo/tars"
	model "github.com/TarsCloud/TarsGo/tars/model"
	requestf "github.com/TarsCloud/TarsGo/tars/protocol/res/requestf"
	current "github.com/TarsCloud/TarsGo/tars/util/current"
	tools "github.com/TarsCloud/TarsGo/tars/util/tools"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResultEmpty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultEmpty) Reset()         { *m = ResultEmpty{} }
func (m *ResultEmpty) String() string { return proto.CompactTextString(m) }
func (*ResultEmpty) ProtoMessage()    {}
func (*ResultEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{0}
}

func (m *ResultEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultEmpty.Unmarshal(m, b)
}
func (m *ResultEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultEmpty.Marshal(b, m, deterministic)
}
func (m *ResultEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultEmpty.Merge(m, src)
}
func (m *ResultEmpty) XXX_Size() int {
	return xxx_messageInfo_ResultEmpty.Size(m)
}
func (m *ResultEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_ResultEmpty proto.InternalMessageInfo

// TODO: 公共部分  -----------------------------------------------------------
// 分页
type PageInfo struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey             string   `protobuf:"bytes,3,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageInfo) Reset()         { *m = PageInfo{} }
func (m *PageInfo) String() string { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()    {}
func (*PageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{1}
}

func (m *PageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInfo.Unmarshal(m, b)
}
func (m *PageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInfo.Marshal(b, m, deterministic)
}
func (m *PageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInfo.Merge(m, src)
}
func (m *PageInfo) XXX_Size() int {
	return xxx_messageInfo_PageInfo.Size(m)
}
func (m *PageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PageInfo proto.InternalMessageInfo

func (m *PageInfo) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PageInfo) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PageInfo) GetOrderKey() string {
	if m != nil {
		return m.OrderKey
	}
	return ""
}

// 默认输出
type Result struct {
	Code                 int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Header               map[string]string `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{2}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Result) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Result) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Result) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Uid struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Coid                 int64    `protobuf:"varint,2,opt,name=coid,proto3" json:"coid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Uid) Reset()         { *m = Uid{} }
func (m *Uid) String() string { return proto.CompactTextString(m) }
func (*Uid) ProtoMessage()    {}
func (*Uid) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{3}
}

func (m *Uid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Uid.Unmarshal(m, b)
}
func (m *Uid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Uid.Marshal(b, m, deterministic)
}
func (m *Uid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Uid.Merge(m, src)
}
func (m *Uid) XXX_Size() int {
	return xxx_messageInfo_Uid.Size(m)
}
func (m *Uid) XXX_DiscardUnknown() {
	xxx_messageInfo_Uid.DiscardUnknown(m)
}

var xxx_messageInfo_Uid proto.InternalMessageInfo

func (m *Uid) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Uid) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

type ReqId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqId) Reset()         { *m = ReqId{} }
func (m *ReqId) String() string { return proto.CompactTextString(m) }
func (*ReqId) ProtoMessage()    {}
func (*ReqId) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{4}
}

func (m *ReqId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqId.Unmarshal(m, b)
}
func (m *ReqId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqId.Marshal(b, m, deterministic)
}
func (m *ReqId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqId.Merge(m, src)
}
func (m *ReqId) XXX_Size() int {
	return xxx_messageInfo_ReqId.Size(m)
}
func (m *ReqId) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqId.DiscardUnknown(m)
}

var xxx_messageInfo_ReqId proto.InternalMessageInfo

func (m *ReqId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ResShopGoods struct {
	GoodsId              int64    `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	RuleId               int64    `protobuf:"varint,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	DataId               int64    `protobuf:"varint,3,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResShopGoods) Reset()         { *m = ResShopGoods{} }
func (m *ResShopGoods) String() string { return proto.CompactTextString(m) }
func (*ResShopGoods) ProtoMessage()    {}
func (*ResShopGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{5}
}

func (m *ResShopGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResShopGoods.Unmarshal(m, b)
}
func (m *ResShopGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResShopGoods.Marshal(b, m, deterministic)
}
func (m *ResShopGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResShopGoods.Merge(m, src)
}
func (m *ResShopGoods) XXX_Size() int {
	return xxx_messageInfo_ResShopGoods.Size(m)
}
func (m *ResShopGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_ResShopGoods.DiscardUnknown(m)
}

var xxx_messageInfo_ResShopGoods proto.InternalMessageInfo

func (m *ResShopGoods) GetGoodsId() int64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ResShopGoods) GetRuleId() int64 {
	if m != nil {
		return m.RuleId
	}
	return 0
}

func (m *ResShopGoods) GetDataId() int64 {
	if m != nil {
		return m.DataId
	}
	return 0
}

// TODO: 用户基础操作部分
type ReqShopGoods struct {
	Coid                 int64      `protobuf:"varint,1,opt,name=coid,proto3" json:"coid,omitempty"`
	GroupId              int64      `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Title                string     `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Type                 int32      `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	StockId              int64      `protobuf:"varint,6,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	StockType            int32      `protobuf:"varint,7,opt,name=stock_type,json=stockType,proto3" json:"stock_type,omitempty"`
	StartTime            int32      `protobuf:"varint,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int32      `protobuf:"varint,9,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	State                int32      `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`
	GoodsRule            *GoodsRule `protobuf:"bytes,11,opt,name=goods_rule,json=goodsRule,proto3" json:"goods_rule,omitempty"`
	GoodsData            *GoodsData `protobuf:"bytes,12,opt,name=goods_data,json=goodsData,proto3" json:"goods_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReqShopGoods) Reset()         { *m = ReqShopGoods{} }
func (m *ReqShopGoods) String() string { return proto.CompactTextString(m) }
func (*ReqShopGoods) ProtoMessage()    {}
func (*ReqShopGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{6}
}

func (m *ReqShopGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqShopGoods.Unmarshal(m, b)
}
func (m *ReqShopGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqShopGoods.Marshal(b, m, deterministic)
}
func (m *ReqShopGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqShopGoods.Merge(m, src)
}
func (m *ReqShopGoods) XXX_Size() int {
	return xxx_messageInfo_ReqShopGoods.Size(m)
}
func (m *ReqShopGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqShopGoods.DiscardUnknown(m)
}

var xxx_messageInfo_ReqShopGoods proto.InternalMessageInfo

func (m *ReqShopGoods) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ReqShopGoods) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ReqShopGoods) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqShopGoods) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReqShopGoods) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqShopGoods) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *ReqShopGoods) GetStockType() int32 {
	if m != nil {
		return m.StockType
	}
	return 0
}

func (m *ReqShopGoods) GetStartTime() int32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ReqShopGoods) GetEndTime() int32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ReqShopGoods) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ReqShopGoods) GetGoodsRule() *GoodsRule {
	if m != nil {
		return m.GoodsRule
	}
	return nil
}

func (m *ReqShopGoods) GetGoodsData() *GoodsData {
	if m != nil {
		return m.GoodsData
	}
	return nil
}

type BuyLimit struct {
	IsVip                int32    `protobuf:"varint,1,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
	IsPoints             int32    `protobuf:"varint,2,opt,name=is_points,json=isPoints,proto3" json:"is_points,omitempty"`
	MaxPoints            int32    `protobuf:"varint,3,opt,name=max_points,json=maxPoints,proto3" json:"max_points,omitempty"`
	SaleMin              int32    `protobuf:"varint,4,opt,name=sale_min,json=saleMin,proto3" json:"sale_min,omitempty"`
	SaleMax              int32    `protobuf:"varint,5,opt,name=sale_max,json=saleMax,proto3" json:"sale_max,omitempty"`
	Quota                int32    `protobuf:"varint,6,opt,name=quota,proto3" json:"quota,omitempty"`
	QuotaNum             int32    `protobuf:"varint,7,opt,name=quota_num,json=quotaNum,proto3" json:"quota_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyLimit) Reset()         { *m = BuyLimit{} }
func (m *BuyLimit) String() string { return proto.CompactTextString(m) }
func (*BuyLimit) ProtoMessage()    {}
func (*BuyLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{7}
}

func (m *BuyLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyLimit.Unmarshal(m, b)
}
func (m *BuyLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyLimit.Marshal(b, m, deterministic)
}
func (m *BuyLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyLimit.Merge(m, src)
}
func (m *BuyLimit) XXX_Size() int {
	return xxx_messageInfo_BuyLimit.Size(m)
}
func (m *BuyLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyLimit.DiscardUnknown(m)
}

var xxx_messageInfo_BuyLimit proto.InternalMessageInfo

func (m *BuyLimit) GetIsVip() int32 {
	if m != nil {
		return m.IsVip
	}
	return 0
}

func (m *BuyLimit) GetIsPoints() int32 {
	if m != nil {
		return m.IsPoints
	}
	return 0
}

func (m *BuyLimit) GetMaxPoints() int32 {
	if m != nil {
		return m.MaxPoints
	}
	return 0
}

func (m *BuyLimit) GetSaleMin() int32 {
	if m != nil {
		return m.SaleMin
	}
	return 0
}

func (m *BuyLimit) GetSaleMax() int32 {
	if m != nil {
		return m.SaleMax
	}
	return 0
}

func (m *BuyLimit) GetQuota() int32 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *BuyLimit) GetQuotaNum() int32 {
	if m != nil {
		return m.QuotaNum
	}
	return 0
}

type GoodsRule struct {
	Pics                 []string         `protobuf:"bytes,1,rep,name=pics,proto3" json:"pics,omitempty"`
	Rule                 []*GoodsSpecRule `protobuf:"bytes,2,rep,name=rule,proto3" json:"rule,omitempty"`
	Specs                string           `protobuf:"bytes,3,opt,name=specs,proto3" json:"specs,omitempty"`
	StockId              int64            `protobuf:"varint,4,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	StockNum             int64            `protobuf:"varint,5,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	Price                int32            `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	PriceDot             int32            `protobuf:"varint,7,opt,name=price_dot,json=priceDot,proto3" json:"price_dot,omitempty"`
	PriceCost            int32            `protobuf:"varint,8,opt,name=price_cost,json=priceCost,proto3" json:"price_cost,omitempty"`
	GoodsNo              string           `protobuf:"bytes,9,opt,name=goods_no,json=goodsNo,proto3" json:"goods_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GoodsRule) Reset()         { *m = GoodsRule{} }
func (m *GoodsRule) String() string { return proto.CompactTextString(m) }
func (*GoodsRule) ProtoMessage()    {}
func (*GoodsRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{8}
}

func (m *GoodsRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsRule.Unmarshal(m, b)
}
func (m *GoodsRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsRule.Marshal(b, m, deterministic)
}
func (m *GoodsRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsRule.Merge(m, src)
}
func (m *GoodsRule) XXX_Size() int {
	return xxx_messageInfo_GoodsRule.Size(m)
}
func (m *GoodsRule) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsRule.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsRule proto.InternalMessageInfo

func (m *GoodsRule) GetPics() []string {
	if m != nil {
		return m.Pics
	}
	return nil
}

func (m *GoodsRule) GetRule() []*GoodsSpecRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *GoodsRule) GetSpecs() string {
	if m != nil {
		return m.Specs
	}
	return ""
}

func (m *GoodsRule) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *GoodsRule) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *GoodsRule) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *GoodsRule) GetPriceDot() int32 {
	if m != nil {
		return m.PriceDot
	}
	return 0
}

func (m *GoodsRule) GetPriceCost() int32 {
	if m != nil {
		return m.PriceCost
	}
	return 0
}

func (m *GoodsRule) GetGoodsNo() string {
	if m != nil {
		return m.GoodsNo
	}
	return ""
}

// 存入数据库的商品详情
type GoodsData struct {
	Pic                  []string `protobuf:"bytes,1,rep,name=pic,proto3" json:"pic,omitempty"`
	Video                string   `protobuf:"bytes,2,opt,name=video,proto3" json:"video,omitempty"`
	Share                string   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	Word                 []byte   `protobuf:"bytes,4,opt,name=word,proto3" json:"word,omitempty"`
	SubName              string   `protobuf:"bytes,5,opt,name=sub_name,json=subName,proto3" json:"sub_name,omitempty"`
	Content              string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsData) Reset()         { *m = GoodsData{} }
func (m *GoodsData) String() string { return proto.CompactTextString(m) }
func (*GoodsData) ProtoMessage()    {}
func (*GoodsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{9}
}

func (m *GoodsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsData.Unmarshal(m, b)
}
func (m *GoodsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsData.Marshal(b, m, deterministic)
}
func (m *GoodsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsData.Merge(m, src)
}
func (m *GoodsData) XXX_Size() int {
	return xxx_messageInfo_GoodsData.Size(m)
}
func (m *GoodsData) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsData.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsData proto.InternalMessageInfo

func (m *GoodsData) GetPic() []string {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *GoodsData) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *GoodsData) GetShare() string {
	if m != nil {
		return m.Share
	}
	return ""
}

func (m *GoodsData) GetWord() []byte {
	if m != nil {
		return m.Word
	}
	return nil
}

func (m *GoodsData) GetSubName() string {
	if m != nil {
		return m.SubName
	}
	return ""
}

func (m *GoodsData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// 返回前端的商品详情
type ResGoodsData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pic                  string   `protobuf:"bytes,2,opt,name=pic,proto3" json:"pic,omitempty"`
	Video                string   `protobuf:"bytes,3,opt,name=video,proto3" json:"video,omitempty"`
	Share                string   `protobuf:"bytes,4,opt,name=share,proto3" json:"share,omitempty"`
	Word                 string   `protobuf:"bytes,5,opt,name=word,proto3" json:"word,omitempty"`
	SubName              string   `protobuf:"bytes,6,opt,name=sub_name,json=subName,proto3" json:"sub_name,omitempty"`
	Content              string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResGoodsData) Reset()         { *m = ResGoodsData{} }
func (m *ResGoodsData) String() string { return proto.CompactTextString(m) }
func (*ResGoodsData) ProtoMessage()    {}
func (*ResGoodsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{10}
}

func (m *ResGoodsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResGoodsData.Unmarshal(m, b)
}
func (m *ResGoodsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResGoodsData.Marshal(b, m, deterministic)
}
func (m *ResGoodsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResGoodsData.Merge(m, src)
}
func (m *ResGoodsData) XXX_Size() int {
	return xxx_messageInfo_ResGoodsData.Size(m)
}
func (m *ResGoodsData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResGoodsData.DiscardUnknown(m)
}

var xxx_messageInfo_ResGoodsData proto.InternalMessageInfo

func (m *ResGoodsData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResGoodsData) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

func (m *ResGoodsData) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *ResGoodsData) GetShare() string {
	if m != nil {
		return m.Share
	}
	return ""
}

func (m *ResGoodsData) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *ResGoodsData) GetSubName() string {
	if m != nil {
		return m.SubName
	}
	return ""
}

func (m *ResGoodsData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type Word struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	IsMultiRow           int32    `protobuf:"varint,3,opt,name=is_multi_row,json=isMultiRow,proto3" json:"is_multi_row,omitempty"`
	IsRequired           int32    `protobuf:"varint,4,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	IsSingle             int32    `protobuf:"varint,5,opt,name=is_single,json=isSingle,proto3" json:"is_single,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Word) Reset()         { *m = Word{} }
func (m *Word) String() string { return proto.CompactTextString(m) }
func (*Word) ProtoMessage()    {}
func (*Word) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{11}
}

func (m *Word) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Word.Unmarshal(m, b)
}
func (m *Word) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Word.Marshal(b, m, deterministic)
}
func (m *Word) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Word.Merge(m, src)
}
func (m *Word) XXX_Size() int {
	return xxx_messageInfo_Word.Size(m)
}
func (m *Word) XXX_DiscardUnknown() {
	xxx_messageInfo_Word.DiscardUnknown(m)
}

var xxx_messageInfo_Word proto.InternalMessageInfo

func (m *Word) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Word) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Word) GetIsMultiRow() int32 {
	if m != nil {
		return m.IsMultiRow
	}
	return 0
}

func (m *Word) GetIsRequired() int32 {
	if m != nil {
		return m.IsRequired
	}
	return 0
}

func (m *Word) GetIsSingle() int32 {
	if m != nil {
		return m.IsSingle
	}
	return 0
}

type GoodsSpecRule struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Values               []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsSpecRule) Reset()         { *m = GoodsSpecRule{} }
func (m *GoodsSpecRule) String() string { return proto.CompactTextString(m) }
func (*GoodsSpecRule) ProtoMessage()    {}
func (*GoodsSpecRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{12}
}

func (m *GoodsSpecRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsSpecRule.Unmarshal(m, b)
}
func (m *GoodsSpecRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsSpecRule.Marshal(b, m, deterministic)
}
func (m *GoodsSpecRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsSpecRule.Merge(m, src)
}
func (m *GoodsSpecRule) XXX_Size() int {
	return xxx_messageInfo_GoodsSpecRule.Size(m)
}
func (m *GoodsSpecRule) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsSpecRule.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsSpecRule proto.InternalMessageInfo

func (m *GoodsSpecRule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GoodsSpecRule) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// 商品实体
type ShopGoods struct {
	Id                   int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32            `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32            `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Coid                 int64            `protobuf:"varint,4,opt,name=coid,proto3" json:"coid,omitempty"`
	GroupId              int64            `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name                 string           `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Title                string           `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Type                 int32            `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Cover                string           `protobuf:"bytes,9,opt,name=cover,proto3" json:"cover,omitempty"`
	StockId              int64            `protobuf:"varint,10,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	StockType            int32            `protobuf:"varint,11,opt,name=stock_type,json=stockType,proto3" json:"stock_type,omitempty"`
	StockNum             int64            `protobuf:"varint,12,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	IsVip                int32            `protobuf:"varint,13,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
	IsPoints             int32            `protobuf:"varint,14,opt,name=is_points,json=isPoints,proto3" json:"is_points,omitempty"`
	MaxPoints            int64            `protobuf:"varint,15,opt,name=max_points,json=maxPoints,proto3" json:"max_points,omitempty"`
	Price                int32            `protobuf:"varint,16,opt,name=price,proto3" json:"price,omitempty"`
	PriceDot             int32            `protobuf:"varint,17,opt,name=price_dot,json=priceDot,proto3" json:"price_dot,omitempty"`
	PriceCost            int32            `protobuf:"varint,18,opt,name=price_cost,json=priceCost,proto3" json:"price_cost,omitempty"`
	GoodsNo              string           `protobuf:"bytes,19,opt,name=goods_no,json=goodsNo,proto3" json:"goods_no,omitempty"`
	SaleMin              int32            `protobuf:"varint,20,opt,name=sale_min,json=saleMin,proto3" json:"sale_min,omitempty"`
	SaleMax              int32            `protobuf:"varint,21,opt,name=sale_max,json=saleMax,proto3" json:"sale_max,omitempty"`
	Quota                int32            `protobuf:"varint,22,opt,name=quota,proto3" json:"quota,omitempty"`
	QuotaNum             int64            `protobuf:"varint,23,opt,name=quota_num,json=quotaNum,proto3" json:"quota_num,omitempty"`
	StartTime            int64            `protobuf:"varint,24,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64            `protobuf:"varint,25,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	State                int32            `protobuf:"varint,26,opt,name=state,proto3" json:"state,omitempty"`
	Rule                 []*ShopGoodsRule `protobuf:"bytes,27,rep,name=rule,proto3" json:"rule,omitempty"`
	Data                 *ShopGoodsData   `protobuf:"bytes,28,opt,name=data,proto3" json:"data,omitempty"`
	Group                *ShopGroup       `protobuf:"bytes,29,opt,name=group,proto3" json:"group,omitempty"`
	Stock                *ShopStock       `protobuf:"bytes,30,opt,name=stock,proto3" json:"stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ShopGoods) Reset()         { *m = ShopGoods{} }
func (m *ShopGoods) String() string { return proto.CompactTextString(m) }
func (*ShopGoods) ProtoMessage()    {}
func (*ShopGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{13}
}

func (m *ShopGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoods.Unmarshal(m, b)
}
func (m *ShopGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoods.Marshal(b, m, deterministic)
}
func (m *ShopGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoods.Merge(m, src)
}
func (m *ShopGoods) XXX_Size() int {
	return xxx_messageInfo_ShopGoods.Size(m)
}
func (m *ShopGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoods.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoods proto.InternalMessageInfo

func (m *ShopGoods) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopGoods) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ShopGoods) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ShopGoods) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ShopGoods) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ShopGoods) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShopGoods) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ShopGoods) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ShopGoods) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ShopGoods) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *ShopGoods) GetStockType() int32 {
	if m != nil {
		return m.StockType
	}
	return 0
}

func (m *ShopGoods) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *ShopGoods) GetIsVip() int32 {
	if m != nil {
		return m.IsVip
	}
	return 0
}

func (m *ShopGoods) GetIsPoints() int32 {
	if m != nil {
		return m.IsPoints
	}
	return 0
}

func (m *ShopGoods) GetMaxPoints() int64 {
	if m != nil {
		return m.MaxPoints
	}
	return 0
}

func (m *ShopGoods) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ShopGoods) GetPriceDot() int32 {
	if m != nil {
		return m.PriceDot
	}
	return 0
}

func (m *ShopGoods) GetPriceCost() int32 {
	if m != nil {
		return m.PriceCost
	}
	return 0
}

func (m *ShopGoods) GetGoodsNo() string {
	if m != nil {
		return m.GoodsNo
	}
	return ""
}

func (m *ShopGoods) GetSaleMin() int32 {
	if m != nil {
		return m.SaleMin
	}
	return 0
}

func (m *ShopGoods) GetSaleMax() int32 {
	if m != nil {
		return m.SaleMax
	}
	return 0
}

func (m *ShopGoods) GetQuota() int32 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *ShopGoods) GetQuotaNum() int64 {
	if m != nil {
		return m.QuotaNum
	}
	return 0
}

func (m *ShopGoods) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ShopGoods) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ShopGoods) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ShopGoods) GetRule() []*ShopGoodsRule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *ShopGoods) GetData() *ShopGoodsData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ShopGoods) GetGroup() *ShopGroup {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *ShopGoods) GetStock() *ShopStock {
	if m != nil {
		return m.Stock
	}
	return nil
}

// 商品详情
type ShopGoodsData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pic                  string   `protobuf:"bytes,2,opt,name=pic,proto3" json:"pic,omitempty"`
	Video                string   `protobuf:"bytes,3,opt,name=video,proto3" json:"video,omitempty"`
	Share                string   `protobuf:"bytes,4,opt,name=share,proto3" json:"share,omitempty"`
	Word                 string   `protobuf:"bytes,5,opt,name=word,proto3" json:"word,omitempty"`
	SubName              string   `protobuf:"bytes,6,opt,name=sub_name,json=subName,proto3" json:"sub_name,omitempty"`
	Content              string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGoodsData) Reset()         { *m = ShopGoodsData{} }
func (m *ShopGoodsData) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsData) ProtoMessage()    {}
func (*ShopGoodsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{14}
}

func (m *ShopGoodsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsData.Unmarshal(m, b)
}
func (m *ShopGoodsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsData.Marshal(b, m, deterministic)
}
func (m *ShopGoodsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsData.Merge(m, src)
}
func (m *ShopGoodsData) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsData.Size(m)
}
func (m *ShopGoodsData) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsData.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsData proto.InternalMessageInfo

func (m *ShopGoodsData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopGoodsData) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

func (m *ShopGoodsData) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *ShopGoodsData) GetShare() string {
	if m != nil {
		return m.Share
	}
	return ""
}

func (m *ShopGoodsData) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *ShopGoodsData) GetSubName() string {
	if m != nil {
		return m.SubName
	}
	return ""
}

func (m *ShopGoodsData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// 商品规则
type ShopGoodsRule struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	GoodsId              int64    `protobuf:"varint,4,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	StockId              int64    `protobuf:"varint,5,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	StockNum             int64    `protobuf:"varint,6,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	ActStart             int64    `protobuf:"varint,7,opt,name=act_start,json=actStart,proto3" json:"act_start,omitempty"`
	ActEnd               int64    `protobuf:"varint,8,opt,name=act_end,json=actEnd,proto3" json:"act_end,omitempty"`
	Price                int32    `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	PriceCost            int32    `protobuf:"varint,10,opt,name=price_cost,json=priceCost,proto3" json:"price_cost,omitempty"`
	GoodsNo              string   `protobuf:"bytes,11,opt,name=goods_no,json=goodsNo,proto3" json:"goods_no,omitempty"`
	Specs                string   `protobuf:"bytes,12,opt,name=specs,proto3" json:"specs,omitempty"`
	Sort                 int64    `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGoodsRule) Reset()         { *m = ShopGoodsRule{} }
func (m *ShopGoodsRule) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsRule) ProtoMessage()    {}
func (*ShopGoodsRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{15}
}

func (m *ShopGoodsRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsRule.Unmarshal(m, b)
}
func (m *ShopGoodsRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsRule.Marshal(b, m, deterministic)
}
func (m *ShopGoodsRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsRule.Merge(m, src)
}
func (m *ShopGoodsRule) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsRule.Size(m)
}
func (m *ShopGoodsRule) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsRule.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsRule proto.InternalMessageInfo

func (m *ShopGoodsRule) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopGoodsRule) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ShopGoodsRule) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ShopGoodsRule) GetGoodsId() int64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ShopGoodsRule) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *ShopGoodsRule) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *ShopGoodsRule) GetActStart() int64 {
	if m != nil {
		return m.ActStart
	}
	return 0
}

func (m *ShopGoodsRule) GetActEnd() int64 {
	if m != nil {
		return m.ActEnd
	}
	return 0
}

func (m *ShopGoodsRule) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ShopGoodsRule) GetPriceCost() int32 {
	if m != nil {
		return m.PriceCost
	}
	return 0
}

func (m *ShopGoodsRule) GetGoodsNo() string {
	if m != nil {
		return m.GoodsNo
	}
	return ""
}

func (m *ShopGoodsRule) GetSpecs() string {
	if m != nil {
		return m.Specs
	}
	return ""
}

func (m *ShopGoodsRule) GetSort() int64 {
	if m != nil {
		return m.Sort
	}
	return 0
}

// 商品库存
type ShopStock struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Coid                 int64    `protobuf:"varint,4,opt,name=coid,proto3" json:"coid,omitempty"`
	Type                 int32    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Aid                  int64    `protobuf:"varint,6,opt,name=aid,proto3" json:"aid,omitempty"`
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Notes                string   `protobuf:"bytes,8,opt,name=notes,proto3" json:"notes,omitempty"`
	AutoNum              int64    `protobuf:"varint,9,opt,name=auto_num,json=autoNum,proto3" json:"auto_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopStock) Reset()         { *m = ShopStock{} }
func (m *ShopStock) String() string { return proto.CompactTextString(m) }
func (*ShopStock) ProtoMessage()    {}
func (*ShopStock) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{16}
}

func (m *ShopStock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopStock.Unmarshal(m, b)
}
func (m *ShopStock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopStock.Marshal(b, m, deterministic)
}
func (m *ShopStock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopStock.Merge(m, src)
}
func (m *ShopStock) XXX_Size() int {
	return xxx_messageInfo_ShopStock.Size(m)
}
func (m *ShopStock) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopStock.DiscardUnknown(m)
}

var xxx_messageInfo_ShopStock proto.InternalMessageInfo

func (m *ShopStock) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopStock) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ShopStock) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ShopStock) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ShopStock) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ShopStock) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *ShopStock) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShopStock) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *ShopStock) GetAutoNum() int64 {
	if m != nil {
		return m.AutoNum
	}
	return 0
}

// 库存卡
type ShopStockCard struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StockId              int64    `protobuf:"varint,2,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	Card                 string   `protobuf:"bytes,3,opt,name=card,proto3" json:"card,omitempty"`
	Pass                 string   `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	State                int32    `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopStockCard) Reset()         { *m = ShopStockCard{} }
func (m *ShopStockCard) String() string { return proto.CompactTextString(m) }
func (*ShopStockCard) ProtoMessage()    {}
func (*ShopStockCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{17}
}

func (m *ShopStockCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopStockCard.Unmarshal(m, b)
}
func (m *ShopStockCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopStockCard.Marshal(b, m, deterministic)
}
func (m *ShopStockCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopStockCard.Merge(m, src)
}
func (m *ShopStockCard) XXX_Size() int {
	return xxx_messageInfo_ShopStockCard.Size(m)
}
func (m *ShopStockCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopStockCard.DiscardUnknown(m)
}

var xxx_messageInfo_ShopStockCard proto.InternalMessageInfo

func (m *ShopStockCard) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopStockCard) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *ShopStockCard) GetCard() string {
	if m != nil {
		return m.Card
	}
	return ""
}

func (m *ShopStockCard) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

func (m *ShopStockCard) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

// 商品分组企业
type ShopGroup struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Coid                 int64    `protobuf:"varint,4,opt,name=coid,proto3" json:"coid,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGroup) Reset()         { *m = ShopGroup{} }
func (m *ShopGroup) String() string { return proto.CompactTextString(m) }
func (*ShopGroup) ProtoMessage()    {}
func (*ShopGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{18}
}

func (m *ShopGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGroup.Unmarshal(m, b)
}
func (m *ShopGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGroup.Marshal(b, m, deterministic)
}
func (m *ShopGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGroup.Merge(m, src)
}
func (m *ShopGroup) XXX_Size() int {
	return xxx_messageInfo_ShopGroup.Size(m)
}
func (m *ShopGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGroup proto.InternalMessageInfo

func (m *ShopGroup) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopGroup) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ShopGroup) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ShopGroup) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ShopGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 商品分组企业
type ReqShopGroup struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Coid                 int64    `protobuf:"varint,4,opt,name=coid,proto3" json:"coid,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	GoodsCount           int32    `protobuf:"varint,6,opt,name=goods_count,json=goodsCount,proto3" json:"goods_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqShopGroup) Reset()         { *m = ReqShopGroup{} }
func (m *ReqShopGroup) String() string { return proto.CompactTextString(m) }
func (*ReqShopGroup) ProtoMessage()    {}
func (*ReqShopGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{19}
}

func (m *ReqShopGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqShopGroup.Unmarshal(m, b)
}
func (m *ReqShopGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqShopGroup.Marshal(b, m, deterministic)
}
func (m *ReqShopGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqShopGroup.Merge(m, src)
}
func (m *ReqShopGroup) XXX_Size() int {
	return xxx_messageInfo_ReqShopGroup.Size(m)
}
func (m *ReqShopGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqShopGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ReqShopGroup proto.InternalMessageInfo

func (m *ReqShopGroup) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReqShopGroup) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ReqShopGroup) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ReqShopGroup) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ReqShopGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqShopGroup) GetGoodsCount() int32 {
	if m != nil {
		return m.GoodsCount
	}
	return 0
}

// 优惠券
type ShopCoupon struct {
	Id                   int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32           `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32           `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Coid                 int64           `protobuf:"varint,4,opt,name=coid,proto3" json:"coid,omitempty"`
	Type                 int32           `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string          `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string          `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	UseStockQty          int64           `protobuf:"varint,8,opt,name=use_stock_qty,json=useStockQty,proto3" json:"use_stock_qty,omitempty"`
	UsedQty              int64           `protobuf:"varint,9,opt,name=used_qty,json=usedQty,proto3" json:"used_qty,omitempty"`
	UseType              int32           `protobuf:"varint,10,opt,name=use_type,json=useType,proto3" json:"use_type,omitempty"`
	UsingAmount          float64         `protobuf:"fixed64,11,opt,name=using_amount,json=usingAmount,proto3" json:"using_amount,omitempty"`
	UseMode              int32           `protobuf:"varint,12,opt,name=use_mode,json=useMode,proto3" json:"use_mode,omitempty"`
	UseDay               int32           `protobuf:"varint,13,opt,name=use_day,json=useDay,proto3" json:"use_day,omitempty"`
	IsOverlay            int32           `protobuf:"varint,14,opt,name=is_overlay,json=isOverlay,proto3" json:"is_overlay,omitempty"`
	IsPublic             int32           `protobuf:"varint,15,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsSharable           int32           `protobuf:"varint,16,opt,name=is_sharable,json=isSharable,proto3" json:"is_sharable,omitempty"`
	IsHandSel            int32           `protobuf:"varint,17,opt,name=is_hand_sel,json=isHandSel,proto3" json:"is_hand_sel,omitempty"`
	IsExpireNotice       int32           `protobuf:"varint,18,opt,name=is_expire_notice,json=isExpireNotice,proto3" json:"is_expire_notice,omitempty"`
	ExpireNoticeDays     int32           `protobuf:"varint,19,opt,name=expire_notice_days,json=expireNoticeDays,proto3" json:"expire_notice_days,omitempty"`
	LimitType            int32           `protobuf:"varint,20,opt,name=limit_type,json=limitType,proto3" json:"limit_type,omitempty"`
	LimitNum             int32           `protobuf:"varint,21,opt,name=limit_num,json=limitNum,proto3" json:"limit_num,omitempty"`
	StartTime            int64           `protobuf:"varint,22,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64           `protobuf:"varint,23,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	State                int32           `protobuf:"varint,24,opt,name=state,proto3" json:"state,omitempty"`
	CouponData           *ShopCouponData `protobuf:"bytes,25,opt,name=coupon_data,json=couponData,proto3" json:"coupon_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ShopCoupon) Reset()         { *m = ShopCoupon{} }
func (m *ShopCoupon) String() string { return proto.CompactTextString(m) }
func (*ShopCoupon) ProtoMessage()    {}
func (*ShopCoupon) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{20}
}

func (m *ShopCoupon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopCoupon.Unmarshal(m, b)
}
func (m *ShopCoupon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopCoupon.Marshal(b, m, deterministic)
}
func (m *ShopCoupon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopCoupon.Merge(m, src)
}
func (m *ShopCoupon) XXX_Size() int {
	return xxx_messageInfo_ShopCoupon.Size(m)
}
func (m *ShopCoupon) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopCoupon.DiscardUnknown(m)
}

var xxx_messageInfo_ShopCoupon proto.InternalMessageInfo

func (m *ShopCoupon) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopCoupon) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ShopCoupon) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ShopCoupon) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ShopCoupon) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ShopCoupon) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShopCoupon) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ShopCoupon) GetUseStockQty() int64 {
	if m != nil {
		return m.UseStockQty
	}
	return 0
}

func (m *ShopCoupon) GetUsedQty() int64 {
	if m != nil {
		return m.UsedQty
	}
	return 0
}

func (m *ShopCoupon) GetUseType() int32 {
	if m != nil {
		return m.UseType
	}
	return 0
}

func (m *ShopCoupon) GetUsingAmount() float64 {
	if m != nil {
		return m.UsingAmount
	}
	return 0
}

func (m *ShopCoupon) GetUseMode() int32 {
	if m != nil {
		return m.UseMode
	}
	return 0
}

func (m *ShopCoupon) GetUseDay() int32 {
	if m != nil {
		return m.UseDay
	}
	return 0
}

func (m *ShopCoupon) GetIsOverlay() int32 {
	if m != nil {
		return m.IsOverlay
	}
	return 0
}

func (m *ShopCoupon) GetIsPublic() int32 {
	if m != nil {
		return m.IsPublic
	}
	return 0
}

func (m *ShopCoupon) GetIsSharable() int32 {
	if m != nil {
		return m.IsSharable
	}
	return 0
}

func (m *ShopCoupon) GetIsHandSel() int32 {
	if m != nil {
		return m.IsHandSel
	}
	return 0
}

func (m *ShopCoupon) GetIsExpireNotice() int32 {
	if m != nil {
		return m.IsExpireNotice
	}
	return 0
}

func (m *ShopCoupon) GetExpireNoticeDays() int32 {
	if m != nil {
		return m.ExpireNoticeDays
	}
	return 0
}

func (m *ShopCoupon) GetLimitType() int32 {
	if m != nil {
		return m.LimitType
	}
	return 0
}

func (m *ShopCoupon) GetLimitNum() int32 {
	if m != nil {
		return m.LimitNum
	}
	return 0
}

func (m *ShopCoupon) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ShopCoupon) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ShopCoupon) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ShopCoupon) GetCouponData() *ShopCouponData {
	if m != nil {
		return m.CouponData
	}
	return nil
}

type ResShopCouponList struct {
	List                 []*ResShopCoupon `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count                int32            `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResShopCouponList) Reset()         { *m = ResShopCouponList{} }
func (m *ResShopCouponList) String() string { return proto.CompactTextString(m) }
func (*ResShopCouponList) ProtoMessage()    {}
func (*ResShopCouponList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{21}
}

func (m *ResShopCouponList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResShopCouponList.Unmarshal(m, b)
}
func (m *ResShopCouponList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResShopCouponList.Marshal(b, m, deterministic)
}
func (m *ResShopCouponList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResShopCouponList.Merge(m, src)
}
func (m *ResShopCouponList) XXX_Size() int {
	return xxx_messageInfo_ResShopCouponList.Size(m)
}
func (m *ResShopCouponList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResShopCouponList.DiscardUnknown(m)
}

var xxx_messageInfo_ResShopCouponList proto.InternalMessageInfo

func (m *ResShopCouponList) GetList() []*ResShopCoupon {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ResShopCouponList) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// message ResShopCouponJoin {
//   ShopCoupon coupon=1;
//   ShopCouponData coupon_data =2;
// }
type ResShopCoupon struct {
	Id                   int64                            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32                            `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32                            `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Coid                 int64                            `protobuf:"varint,4,opt,name=coid,proto3" json:"coid,omitempty"`
	Type                 int32                            `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string                           `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string                           `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	UseStockQty          int64                            `protobuf:"varint,8,opt,name=use_stock_qty,json=useStockQty,proto3" json:"use_stock_qty,omitempty"`
	UsedQty              int64                            `protobuf:"varint,9,opt,name=used_qty,json=usedQty,proto3" json:"used_qty,omitempty"`
	UseType              int32                            `protobuf:"varint,10,opt,name=use_type,json=useType,proto3" json:"use_type,omitempty"`
	UsingAmount          float64                          `protobuf:"fixed64,11,opt,name=using_amount,json=usingAmount,proto3" json:"using_amount,omitempty"`
	UseMode              int32                            `protobuf:"varint,12,opt,name=use_mode,json=useMode,proto3" json:"use_mode,omitempty"`
	UseDay               int32                            `protobuf:"varint,13,opt,name=use_day,json=useDay,proto3" json:"use_day,omitempty"`
	IsOverlay            int32                            `protobuf:"varint,14,opt,name=is_overlay,json=isOverlay,proto3" json:"is_overlay,omitempty"`
	IsPublic             int32                            `protobuf:"varint,15,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsSharable           int32                            `protobuf:"varint,16,opt,name=is_sharable,json=isSharable,proto3" json:"is_sharable,omitempty"`
	IsHandSel            int32                            `protobuf:"varint,17,opt,name=is_hand_sel,json=isHandSel,proto3" json:"is_hand_sel,omitempty"`
	IsExpireNotice       int32                            `protobuf:"varint,18,opt,name=is_expire_notice,json=isExpireNotice,proto3" json:"is_expire_notice,omitempty"`
	ExpireNoticeDays     int32                            `protobuf:"varint,19,opt,name=expire_notice_days,json=expireNoticeDays,proto3" json:"expire_notice_days,omitempty"`
	LimitType            int32                            `protobuf:"varint,20,opt,name=limit_type,json=limitType,proto3" json:"limit_type,omitempty"`
	LimitNum             int32                            `protobuf:"varint,21,opt,name=limit_num,json=limitNum,proto3" json:"limit_num,omitempty"`
	StartTime            int64                            `protobuf:"varint,22,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64                            `protobuf:"varint,23,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	State                int32                            `protobuf:"varint,24,opt,name=state,proto3" json:"state,omitempty"`
	CouponData           *ResShopCoupon_ResShopCouponData `protobuf:"bytes,25,opt,name=coupon_data,json=couponData,proto3" json:"coupon_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ResShopCoupon) Reset()         { *m = ResShopCoupon{} }
func (m *ResShopCoupon) String() string { return proto.CompactTextString(m) }
func (*ResShopCoupon) ProtoMessage()    {}
func (*ResShopCoupon) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{22}
}

func (m *ResShopCoupon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResShopCoupon.Unmarshal(m, b)
}
func (m *ResShopCoupon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResShopCoupon.Marshal(b, m, deterministic)
}
func (m *ResShopCoupon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResShopCoupon.Merge(m, src)
}
func (m *ResShopCoupon) XXX_Size() int {
	return xxx_messageInfo_ResShopCoupon.Size(m)
}
func (m *ResShopCoupon) XXX_DiscardUnknown() {
	xxx_messageInfo_ResShopCoupon.DiscardUnknown(m)
}

var xxx_messageInfo_ResShopCoupon proto.InternalMessageInfo

func (m *ResShopCoupon) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResShopCoupon) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ResShopCoupon) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ResShopCoupon) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ResShopCoupon) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ResShopCoupon) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResShopCoupon) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ResShopCoupon) GetUseStockQty() int64 {
	if m != nil {
		return m.UseStockQty
	}
	return 0
}

func (m *ResShopCoupon) GetUsedQty() int64 {
	if m != nil {
		return m.UsedQty
	}
	return 0
}

func (m *ResShopCoupon) GetUseType() int32 {
	if m != nil {
		return m.UseType
	}
	return 0
}

func (m *ResShopCoupon) GetUsingAmount() float64 {
	if m != nil {
		return m.UsingAmount
	}
	return 0
}

func (m *ResShopCoupon) GetUseMode() int32 {
	if m != nil {
		return m.UseMode
	}
	return 0
}

func (m *ResShopCoupon) GetUseDay() int32 {
	if m != nil {
		return m.UseDay
	}
	return 0
}

func (m *ResShopCoupon) GetIsOverlay() int32 {
	if m != nil {
		return m.IsOverlay
	}
	return 0
}

func (m *ResShopCoupon) GetIsPublic() int32 {
	if m != nil {
		return m.IsPublic
	}
	return 0
}

func (m *ResShopCoupon) GetIsSharable() int32 {
	if m != nil {
		return m.IsSharable
	}
	return 0
}

func (m *ResShopCoupon) GetIsHandSel() int32 {
	if m != nil {
		return m.IsHandSel
	}
	return 0
}

func (m *ResShopCoupon) GetIsExpireNotice() int32 {
	if m != nil {
		return m.IsExpireNotice
	}
	return 0
}

func (m *ResShopCoupon) GetExpireNoticeDays() int32 {
	if m != nil {
		return m.ExpireNoticeDays
	}
	return 0
}

func (m *ResShopCoupon) GetLimitType() int32 {
	if m != nil {
		return m.LimitType
	}
	return 0
}

func (m *ResShopCoupon) GetLimitNum() int32 {
	if m != nil {
		return m.LimitNum
	}
	return 0
}

func (m *ResShopCoupon) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ResShopCoupon) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ResShopCoupon) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ResShopCoupon) GetCouponData() *ResShopCoupon_ResShopCouponData {
	if m != nil {
		return m.CouponData
	}
	return nil
}

type ResShopCoupon_ResShopCouponData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UseGoods             string   `protobuf:"bytes,2,opt,name=use_goods,json=useGoods,proto3" json:"use_goods,omitempty"`
	UseRule              string   `protobuf:"bytes,3,opt,name=use_rule,json=useRule,proto3" json:"use_rule,omitempty"`
	LimitBenefitMember   string   `protobuf:"bytes,4,opt,name=limit_benefit_member,json=limitBenefitMember,proto3" json:"limit_benefit_member,omitempty"`
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	LimitLevelMember     string   `protobuf:"bytes,6,opt,name=limit_level_member,json=limitLevelMember,proto3" json:"limit_level_member,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResShopCoupon_ResShopCouponData) Reset()         { *m = ResShopCoupon_ResShopCouponData{} }
func (m *ResShopCoupon_ResShopCouponData) String() string { return proto.CompactTextString(m) }
func (*ResShopCoupon_ResShopCouponData) ProtoMessage()    {}
func (*ResShopCoupon_ResShopCouponData) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{22, 0}
}

func (m *ResShopCoupon_ResShopCouponData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResShopCoupon_ResShopCouponData.Unmarshal(m, b)
}
func (m *ResShopCoupon_ResShopCouponData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResShopCoupon_ResShopCouponData.Marshal(b, m, deterministic)
}
func (m *ResShopCoupon_ResShopCouponData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResShopCoupon_ResShopCouponData.Merge(m, src)
}
func (m *ResShopCoupon_ResShopCouponData) XXX_Size() int {
	return xxx_messageInfo_ResShopCoupon_ResShopCouponData.Size(m)
}
func (m *ResShopCoupon_ResShopCouponData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResShopCoupon_ResShopCouponData.DiscardUnknown(m)
}

var xxx_messageInfo_ResShopCoupon_ResShopCouponData proto.InternalMessageInfo

func (m *ResShopCoupon_ResShopCouponData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResShopCoupon_ResShopCouponData) GetUseGoods() string {
	if m != nil {
		return m.UseGoods
	}
	return ""
}

func (m *ResShopCoupon_ResShopCouponData) GetUseRule() string {
	if m != nil {
		return m.UseRule
	}
	return ""
}

func (m *ResShopCoupon_ResShopCouponData) GetLimitBenefitMember() string {
	if m != nil {
		return m.LimitBenefitMember
	}
	return ""
}

func (m *ResShopCoupon_ResShopCouponData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ResShopCoupon_ResShopCouponData) GetLimitLevelMember() string {
	if m != nil {
		return m.LimitLevelMember
	}
	return ""
}

type ReqCouponPage struct {
	Page                 *PageInfo                    `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Req                  *ReqCouponPage_ReqShopCoupon `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReqCouponPage) Reset()         { *m = ReqCouponPage{} }
func (m *ReqCouponPage) String() string { return proto.CompactTextString(m) }
func (*ReqCouponPage) ProtoMessage()    {}
func (*ReqCouponPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{23}
}

func (m *ReqCouponPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCouponPage.Unmarshal(m, b)
}
func (m *ReqCouponPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCouponPage.Marshal(b, m, deterministic)
}
func (m *ReqCouponPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCouponPage.Merge(m, src)
}
func (m *ReqCouponPage) XXX_Size() int {
	return xxx_messageInfo_ReqCouponPage.Size(m)
}
func (m *ReqCouponPage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCouponPage.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCouponPage proto.InternalMessageInfo

func (m *ReqCouponPage) GetPage() *PageInfo {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *ReqCouponPage) GetReq() *ReqCouponPage_ReqShopCoupon {
	if m != nil {
		return m.Req
	}
	return nil
}

type ReqCouponPage_ReqShopCoupon struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State                int32    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Coid                 int64    `protobuf:"varint,4,opt,name=coid,proto3" json:"coid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCouponPage_ReqShopCoupon) Reset()         { *m = ReqCouponPage_ReqShopCoupon{} }
func (m *ReqCouponPage_ReqShopCoupon) String() string { return proto.CompactTextString(m) }
func (*ReqCouponPage_ReqShopCoupon) ProtoMessage()    {}
func (*ReqCouponPage_ReqShopCoupon) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{23, 0}
}

func (m *ReqCouponPage_ReqShopCoupon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCouponPage_ReqShopCoupon.Unmarshal(m, b)
}
func (m *ReqCouponPage_ReqShopCoupon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCouponPage_ReqShopCoupon.Marshal(b, m, deterministic)
}
func (m *ReqCouponPage_ReqShopCoupon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCouponPage_ReqShopCoupon.Merge(m, src)
}
func (m *ReqCouponPage_ReqShopCoupon) XXX_Size() int {
	return xxx_messageInfo_ReqCouponPage_ReqShopCoupon.Size(m)
}
func (m *ReqCouponPage_ReqShopCoupon) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCouponPage_ReqShopCoupon.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCouponPage_ReqShopCoupon proto.InternalMessageInfo

func (m *ReqCouponPage_ReqShopCoupon) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqCouponPage_ReqShopCoupon) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ReqCouponPage_ReqShopCoupon) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqCouponPage_ReqShopCoupon) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

// 优惠券使用规则
type ShopCouponData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UseGoods             []int64  `protobuf:"varint,2,rep,packed,name=use_goods,json=useGoods,proto3" json:"use_goods,omitempty"`
	UseRule              string   `protobuf:"bytes,3,opt,name=use_rule,json=useRule,proto3" json:"use_rule,omitempty"`
	LimitBenefitMember   []int64  `protobuf:"varint,4,rep,packed,name=limit_benefit_member,json=limitBenefitMember,proto3" json:"limit_benefit_member,omitempty"`
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	LimitLevelMember     []int64  `protobuf:"varint,6,rep,packed,name=limit_level_member,json=limitLevelMember,proto3" json:"limit_level_member,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopCouponData) Reset()         { *m = ShopCouponData{} }
func (m *ShopCouponData) String() string { return proto.CompactTextString(m) }
func (*ShopCouponData) ProtoMessage()    {}
func (*ShopCouponData) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{24}
}

func (m *ShopCouponData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopCouponData.Unmarshal(m, b)
}
func (m *ShopCouponData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopCouponData.Marshal(b, m, deterministic)
}
func (m *ShopCouponData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopCouponData.Merge(m, src)
}
func (m *ShopCouponData) XXX_Size() int {
	return xxx_messageInfo_ShopCouponData.Size(m)
}
func (m *ShopCouponData) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopCouponData.DiscardUnknown(m)
}

var xxx_messageInfo_ShopCouponData proto.InternalMessageInfo

func (m *ShopCouponData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopCouponData) GetUseGoods() []int64 {
	if m != nil {
		return m.UseGoods
	}
	return nil
}

func (m *ShopCouponData) GetUseRule() string {
	if m != nil {
		return m.UseRule
	}
	return ""
}

func (m *ShopCouponData) GetLimitBenefitMember() []int64 {
	if m != nil {
		return m.LimitBenefitMember
	}
	return nil
}

func (m *ShopCouponData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ShopCouponData) GetLimitLevelMember() []int64 {
	if m != nil {
		return m.LimitLevelMember
	}
	return nil
}

// 优惠券兑换码状态
type ShopCouponCard struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Coid                 int64    `protobuf:"varint,2,opt,name=coid,proto3" json:"coid,omitempty"`
	Uid                  int64    `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	StartTime            int64    `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64    `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	State                int32    `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopCouponCard) Reset()         { *m = ShopCouponCard{} }
func (m *ShopCouponCard) String() string { return proto.CompactTextString(m) }
func (*ShopCouponCard) ProtoMessage()    {}
func (*ShopCouponCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{25}
}

func (m *ShopCouponCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopCouponCard.Unmarshal(m, b)
}
func (m *ShopCouponCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopCouponCard.Marshal(b, m, deterministic)
}
func (m *ShopCouponCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopCouponCard.Merge(m, src)
}
func (m *ShopCouponCard) XXX_Size() int {
	return xxx_messageInfo_ShopCouponCard.Size(m)
}
func (m *ShopCouponCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopCouponCard.DiscardUnknown(m)
}

var xxx_messageInfo_ShopCouponCard proto.InternalMessageInfo

func (m *ShopCouponCard) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopCouponCard) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ShopCouponCard) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ShopCouponCard) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ShopCouponCard) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ShopCouponCard) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

//  商品资产
type ShopGoodsAsset struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	GoodsId              int64    `protobuf:"varint,4,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	GoodsRuleId          int64    `protobuf:"varint,5,opt,name=goods_rule_id,json=goodsRuleId,proto3" json:"goods_rule_id,omitempty"`
	StockNum             int64    `protobuf:"varint,6,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	Sales                int64    `protobuf:"varint,7,opt,name=sales,proto3" json:"sales,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGoodsAsset) Reset()         { *m = ShopGoodsAsset{} }
func (m *ShopGoodsAsset) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsAsset) ProtoMessage()    {}
func (*ShopGoodsAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{26}
}

func (m *ShopGoodsAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsAsset.Unmarshal(m, b)
}
func (m *ShopGoodsAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsAsset.Marshal(b, m, deterministic)
}
func (m *ShopGoodsAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsAsset.Merge(m, src)
}
func (m *ShopGoodsAsset) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsAsset.Size(m)
}
func (m *ShopGoodsAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsAsset.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsAsset proto.InternalMessageInfo

func (m *ShopGoodsAsset) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopGoodsAsset) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ShopGoodsAsset) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ShopGoodsAsset) GetGoodsId() int64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *ShopGoodsAsset) GetGoodsRuleId() int64 {
	if m != nil {
		return m.GoodsRuleId
	}
	return 0
}

func (m *ShopGoodsAsset) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *ShopGoodsAsset) GetSales() int64 {
	if m != nil {
		return m.Sales
	}
	return 0
}

type ReqGoodsGroupCoid struct {
	Page                 *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Coid                 int64     `protobuf:"varint,2,opt,name=coid,proto3" json:"coid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReqGoodsGroupCoid) Reset()         { *m = ReqGoodsGroupCoid{} }
func (m *ReqGoodsGroupCoid) String() string { return proto.CompactTextString(m) }
func (*ReqGoodsGroupCoid) ProtoMessage()    {}
func (*ReqGoodsGroupCoid) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{27}
}

func (m *ReqGoodsGroupCoid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGoodsGroupCoid.Unmarshal(m, b)
}
func (m *ReqGoodsGroupCoid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGoodsGroupCoid.Marshal(b, m, deterministic)
}
func (m *ReqGoodsGroupCoid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGoodsGroupCoid.Merge(m, src)
}
func (m *ReqGoodsGroupCoid) XXX_Size() int {
	return xxx_messageInfo_ReqGoodsGroupCoid.Size(m)
}
func (m *ReqGoodsGroupCoid) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGoodsGroupCoid.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGoodsGroupCoid proto.InternalMessageInfo

func (m *ReqGoodsGroupCoid) GetPage() *PageInfo {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *ReqGoodsGroupCoid) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

type ReqGoodsGroupId struct {
	Page                 *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Id                   int64     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReqGoodsGroupId) Reset()         { *m = ReqGoodsGroupId{} }
func (m *ReqGoodsGroupId) String() string { return proto.CompactTextString(m) }
func (*ReqGoodsGroupId) ProtoMessage()    {}
func (*ReqGoodsGroupId) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{28}
}

func (m *ReqGoodsGroupId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGoodsGroupId.Unmarshal(m, b)
}
func (m *ReqGoodsGroupId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGoodsGroupId.Marshal(b, m, deterministic)
}
func (m *ReqGoodsGroupId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGoodsGroupId.Merge(m, src)
}
func (m *ReqGoodsGroupId) XXX_Size() int {
	return xxx_messageInfo_ReqGoodsGroupId.Size(m)
}
func (m *ReqGoodsGroupId) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGoodsGroupId.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGoodsGroupId proto.InternalMessageInfo

func (m *ReqGoodsGroupId) GetPage() *PageInfo {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *ReqGoodsGroupId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ResGoodsGroup struct {
	List                 []*ShopGroup `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count                int32        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResGoodsGroup) Reset()         { *m = ResGoodsGroup{} }
func (m *ResGoodsGroup) String() string { return proto.CompactTextString(m) }
func (*ResGoodsGroup) ProtoMessage()    {}
func (*ResGoodsGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{29}
}

func (m *ResGoodsGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResGoodsGroup.Unmarshal(m, b)
}
func (m *ResGoodsGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResGoodsGroup.Marshal(b, m, deterministic)
}
func (m *ResGoodsGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResGoodsGroup.Merge(m, src)
}
func (m *ResGoodsGroup) XXX_Size() int {
	return xxx_messageInfo_ResGoodsGroup.Size(m)
}
func (m *ResGoodsGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ResGoodsGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ResGoodsGroup proto.InternalMessageInfo

func (m *ResGoodsGroup) GetList() []*ShopGroup {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ResGoodsGroup) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqGoodsGroupObj struct {
	Page                 *PageInfo  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Req                  *ShopGroup `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReqGoodsGroupObj) Reset()         { *m = ReqGoodsGroupObj{} }
func (m *ReqGoodsGroupObj) String() string { return proto.CompactTextString(m) }
func (*ReqGoodsGroupObj) ProtoMessage()    {}
func (*ReqGoodsGroupObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{30}
}

func (m *ReqGoodsGroupObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGoodsGroupObj.Unmarshal(m, b)
}
func (m *ReqGoodsGroupObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGoodsGroupObj.Marshal(b, m, deterministic)
}
func (m *ReqGoodsGroupObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGoodsGroupObj.Merge(m, src)
}
func (m *ReqGoodsGroupObj) XXX_Size() int {
	return xxx_messageInfo_ReqGoodsGroupObj.Size(m)
}
func (m *ReqGoodsGroupObj) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGoodsGroupObj.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGoodsGroupObj proto.InternalMessageInfo

func (m *ReqGoodsGroupObj) GetPage() *PageInfo {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *ReqGoodsGroupObj) GetReq() *ShopGroup {
	if m != nil {
		return m.Req
	}
	return nil
}

type ResGoodsGroupList struct {
	List                 []*ReqShopGroup `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count                int32           `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResGoodsGroupList) Reset()         { *m = ResGoodsGroupList{} }
func (m *ResGoodsGroupList) String() string { return proto.CompactTextString(m) }
func (*ResGoodsGroupList) ProtoMessage()    {}
func (*ResGoodsGroupList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{31}
}

func (m *ResGoodsGroupList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResGoodsGroupList.Unmarshal(m, b)
}
func (m *ResGoodsGroupList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResGoodsGroupList.Marshal(b, m, deterministic)
}
func (m *ResGoodsGroupList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResGoodsGroupList.Merge(m, src)
}
func (m *ResGoodsGroupList) XXX_Size() int {
	return xxx_messageInfo_ResGoodsGroupList.Size(m)
}
func (m *ResGoodsGroupList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResGoodsGroupList.DiscardUnknown(m)
}

var xxx_messageInfo_ResGoodsGroupList proto.InternalMessageInfo

func (m *ResGoodsGroupList) GetList() []*ReqShopGroup {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ResGoodsGroupList) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqShopGoodsPage struct {
	Page                 *PageInfo  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Req                  *ShopGoods `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReqShopGoodsPage) Reset()         { *m = ReqShopGoodsPage{} }
func (m *ReqShopGoodsPage) String() string { return proto.CompactTextString(m) }
func (*ReqShopGoodsPage) ProtoMessage()    {}
func (*ReqShopGoodsPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{32}
}

func (m *ReqShopGoodsPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqShopGoodsPage.Unmarshal(m, b)
}
func (m *ReqShopGoodsPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqShopGoodsPage.Marshal(b, m, deterministic)
}
func (m *ReqShopGoodsPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqShopGoodsPage.Merge(m, src)
}
func (m *ReqShopGoodsPage) XXX_Size() int {
	return xxx_messageInfo_ReqShopGoodsPage.Size(m)
}
func (m *ReqShopGoodsPage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqShopGoodsPage.DiscardUnknown(m)
}

var xxx_messageInfo_ReqShopGoodsPage proto.InternalMessageInfo

func (m *ReqShopGoodsPage) GetPage() *PageInfo {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *ReqShopGoodsPage) GetReq() *ShopGoods {
	if m != nil {
		return m.Req
	}
	return nil
}

type ResShopGoodsList struct {
	List                 []*ShopGoods `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count                int32        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResShopGoodsList) Reset()         { *m = ResShopGoodsList{} }
func (m *ResShopGoodsList) String() string { return proto.CompactTextString(m) }
func (*ResShopGoodsList) ProtoMessage()    {}
func (*ResShopGoodsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{33}
}

func (m *ResShopGoodsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResShopGoodsList.Unmarshal(m, b)
}
func (m *ResShopGoodsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResShopGoodsList.Marshal(b, m, deterministic)
}
func (m *ResShopGoodsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResShopGoodsList.Merge(m, src)
}
func (m *ResShopGoodsList) XXX_Size() int {
	return xxx_messageInfo_ResShopGoodsList.Size(m)
}
func (m *ResShopGoodsList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResShopGoodsList.DiscardUnknown(m)
}

var xxx_messageInfo_ResShopGoodsList proto.InternalMessageInfo

func (m *ResShopGoodsList) GetList() []*ShopGoods {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ResShopGoodsList) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ResShopGoodsJoinOther struct {
	Goods                *ShopGoods       `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods,omitempty"`
	List                 []*ShopGoodsJoin `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResShopGoodsJoinOther) Reset()         { *m = ResShopGoodsJoinOther{} }
func (m *ResShopGoodsJoinOther) String() string { return proto.CompactTextString(m) }
func (*ResShopGoodsJoinOther) ProtoMessage()    {}
func (*ResShopGoodsJoinOther) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{34}
}

func (m *ResShopGoodsJoinOther) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResShopGoodsJoinOther.Unmarshal(m, b)
}
func (m *ResShopGoodsJoinOther) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResShopGoodsJoinOther.Marshal(b, m, deterministic)
}
func (m *ResShopGoodsJoinOther) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResShopGoodsJoinOther.Merge(m, src)
}
func (m *ResShopGoodsJoinOther) XXX_Size() int {
	return xxx_messageInfo_ResShopGoodsJoinOther.Size(m)
}
func (m *ResShopGoodsJoinOther) XXX_DiscardUnknown() {
	xxx_messageInfo_ResShopGoodsJoinOther.DiscardUnknown(m)
}

var xxx_messageInfo_ResShopGoodsJoinOther proto.InternalMessageInfo

func (m *ResShopGoodsJoinOther) GetGoods() *ShopGoods {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *ResShopGoodsJoinOther) GetList() []*ShopGoodsJoin {
	if m != nil {
		return m.List
	}
	return nil
}

type ShopGoodsJoin struct {
	Goods                *ShopGoods `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ShopGoodsJoin) Reset()         { *m = ShopGoodsJoin{} }
func (m *ShopGoodsJoin) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsJoin) ProtoMessage()    {}
func (*ShopGoodsJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{35}
}

func (m *ShopGoodsJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsJoin.Unmarshal(m, b)
}
func (m *ShopGoodsJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsJoin.Marshal(b, m, deterministic)
}
func (m *ShopGoodsJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsJoin.Merge(m, src)
}
func (m *ShopGoodsJoin) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsJoin.Size(m)
}
func (m *ShopGoodsJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsJoin.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsJoin proto.InternalMessageInfo

func (m *ShopGoodsJoin) GetGoods() *ShopGoods {
	if m != nil {
		return m.Goods
	}
	return nil
}

type ResultCount struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultCount) Reset()         { *m = ResultCount{} }
func (m *ResultCount) String() string { return proto.CompactTextString(m) }
func (*ResultCount) ProtoMessage()    {}
func (*ResultCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{36}
}

func (m *ResultCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultCount.Unmarshal(m, b)
}
func (m *ResultCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultCount.Marshal(b, m, deterministic)
}
func (m *ResultCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultCount.Merge(m, src)
}
func (m *ResultCount) XXX_Size() int {
	return xxx_messageInfo_ResultCount.Size(m)
}
func (m *ResultCount) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultCount.DiscardUnknown(m)
}

var xxx_messageInfo_ResultCount proto.InternalMessageInfo

func (m *ResultCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReqSearchGoods struct {
	Page                 *PageInfo    `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	SearchInfo           *SearchGoods `protobuf:"bytes,2,opt,name=search_info,json=searchInfo,proto3" json:"search_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReqSearchGoods) Reset()         { *m = ReqSearchGoods{} }
func (m *ReqSearchGoods) String() string { return proto.CompactTextString(m) }
func (*ReqSearchGoods) ProtoMessage()    {}
func (*ReqSearchGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{37}
}

func (m *ReqSearchGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSearchGoods.Unmarshal(m, b)
}
func (m *ReqSearchGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSearchGoods.Marshal(b, m, deterministic)
}
func (m *ReqSearchGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSearchGoods.Merge(m, src)
}
func (m *ReqSearchGoods) XXX_Size() int {
	return xxx_messageInfo_ReqSearchGoods.Size(m)
}
func (m *ReqSearchGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSearchGoods.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSearchGoods proto.InternalMessageInfo

func (m *ReqSearchGoods) GetPage() *PageInfo {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *ReqSearchGoods) GetSearchInfo() *SearchGoods {
	if m != nil {
		return m.SearchInfo
	}
	return nil
}

type SearchGoods struct {
	GroupId              int64    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	StockType            int32    `protobuf:"varint,4,opt,name=stock_type,json=stockType,proto3" json:"stock_type,omitempty"`
	PriceStart           int32    `protobuf:"varint,5,opt,name=price_start,json=priceStart,proto3" json:"price_start,omitempty"`
	PriceEnd             int32    `protobuf:"varint,6,opt,name=price_end,json=priceEnd,proto3" json:"price_end,omitempty"`
	StartTime            int64    `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64    `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	State                int32    `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	Coid                 int64    `protobuf:"varint,10,opt,name=coid,proto3" json:"coid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchGoods) Reset()         { *m = SearchGoods{} }
func (m *SearchGoods) String() string { return proto.CompactTextString(m) }
func (*SearchGoods) ProtoMessage()    {}
func (*SearchGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{38}
}

func (m *SearchGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchGoods.Unmarshal(m, b)
}
func (m *SearchGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchGoods.Marshal(b, m, deterministic)
}
func (m *SearchGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchGoods.Merge(m, src)
}
func (m *SearchGoods) XXX_Size() int {
	return xxx_messageInfo_SearchGoods.Size(m)
}
func (m *SearchGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchGoods.DiscardUnknown(m)
}

var xxx_messageInfo_SearchGoods proto.InternalMessageInfo

func (m *SearchGoods) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *SearchGoods) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchGoods) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *SearchGoods) GetStockType() int32 {
	if m != nil {
		return m.StockType
	}
	return 0
}

func (m *SearchGoods) GetPriceStart() int32 {
	if m != nil {
		return m.PriceStart
	}
	return 0
}

func (m *SearchGoods) GetPriceEnd() int32 {
	if m != nil {
		return m.PriceEnd
	}
	return 0
}

func (m *SearchGoods) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *SearchGoods) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *SearchGoods) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *SearchGoods) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

type SaveCoShopGoods struct {
	Info                 *ShopGoodsPure `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	GoodsRule            *GoodsRule     `protobuf:"bytes,2,opt,name=goods_rule,json=goodsRule,proto3" json:"goods_rule,omitempty"`
	GoodsData            *GoodsData     `protobuf:"bytes,3,opt,name=goods_data,json=goodsData,proto3" json:"goods_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SaveCoShopGoods) Reset()         { *m = SaveCoShopGoods{} }
func (m *SaveCoShopGoods) String() string { return proto.CompactTextString(m) }
func (*SaveCoShopGoods) ProtoMessage()    {}
func (*SaveCoShopGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{39}
}

func (m *SaveCoShopGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveCoShopGoods.Unmarshal(m, b)
}
func (m *SaveCoShopGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveCoShopGoods.Marshal(b, m, deterministic)
}
func (m *SaveCoShopGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveCoShopGoods.Merge(m, src)
}
func (m *SaveCoShopGoods) XXX_Size() int {
	return xxx_messageInfo_SaveCoShopGoods.Size(m)
}
func (m *SaveCoShopGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveCoShopGoods.DiscardUnknown(m)
}

var xxx_messageInfo_SaveCoShopGoods proto.InternalMessageInfo

func (m *SaveCoShopGoods) GetInfo() *ShopGoodsPure {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *SaveCoShopGoods) GetGoodsRule() *GoodsRule {
	if m != nil {
		return m.GoodsRule
	}
	return nil
}

func (m *SaveCoShopGoods) GetGoodsData() *GoodsData {
	if m != nil {
		return m.GoodsData
	}
	return nil
}

type ShopGoodsPure struct {
	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int32  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int32  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Coid      int64  `protobuf:"varint,4,opt,name=coid,proto3" json:"coid,omitempty"`
	GroupId   int64  `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name      string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Title     string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Type      int32  `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Cover     string `protobuf:"bytes,9,opt,name=cover,proto3" json:"cover,omitempty"`
	StockId   int64  `protobuf:"varint,10,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	StockType int32  `protobuf:"varint,11,opt,name=stock_type,json=stockType,proto3" json:"stock_type,omitempty"`
	StockNum  int64  `protobuf:"varint,12,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	IsVip     int32  `protobuf:"varint,13,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
	IsPoints  int32  `protobuf:"varint,14,opt,name=is_points,json=isPoints,proto3" json:"is_points,omitempty"`
	MaxPoints int64  `protobuf:"varint,15,opt,name=max_points,json=maxPoints,proto3" json:"max_points,omitempty"`
	Price     int32  `protobuf:"varint,16,opt,name=price,proto3" json:"price,omitempty"`
	PriceDot  int32  `protobuf:"varint,17,opt,name=price_dot,json=priceDot,proto3" json:"price_dot,omitempty"`
	PriceCost int32  `protobuf:"varint,18,opt,name=price_cost,json=priceCost,proto3" json:"price_cost,omitempty"`
	GoodsNo   string `protobuf:"bytes,19,opt,name=goods_no,json=goodsNo,proto3" json:"goods_no,omitempty"`
	SaleMin   int32  `protobuf:"varint,20,opt,name=sale_min,json=saleMin,proto3" json:"sale_min,omitempty"`
	SaleMax   int32  `protobuf:"varint,21,opt,name=sale_max,json=saleMax,proto3" json:"sale_max,omitempty"`
	Quota     int32  `protobuf:"varint,22,opt,name=quota,proto3" json:"quota,omitempty"`
	QuotaNum  int64  `protobuf:"varint,23,opt,name=quota_num,json=quotaNum,proto3" json:"quota_num,omitempty"`
	// int64 start_time = 24; // 上架时间
	// int64 end_time = 25;   // 下架时间
	State                int32    `protobuf:"varint,26,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGoodsPure) Reset()         { *m = ShopGoodsPure{} }
func (m *ShopGoodsPure) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsPure) ProtoMessage()    {}
func (*ShopGoodsPure) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{40}
}

func (m *ShopGoodsPure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsPure.Unmarshal(m, b)
}
func (m *ShopGoodsPure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsPure.Marshal(b, m, deterministic)
}
func (m *ShopGoodsPure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsPure.Merge(m, src)
}
func (m *ShopGoodsPure) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsPure.Size(m)
}
func (m *ShopGoodsPure) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsPure.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsPure proto.InternalMessageInfo

func (m *ShopGoodsPure) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopGoodsPure) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ShopGoodsPure) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ShopGoodsPure) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ShopGoodsPure) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ShopGoodsPure) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShopGoodsPure) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ShopGoodsPure) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ShopGoodsPure) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ShopGoodsPure) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *ShopGoodsPure) GetStockType() int32 {
	if m != nil {
		return m.StockType
	}
	return 0
}

func (m *ShopGoodsPure) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *ShopGoodsPure) GetIsVip() int32 {
	if m != nil {
		return m.IsVip
	}
	return 0
}

func (m *ShopGoodsPure) GetIsPoints() int32 {
	if m != nil {
		return m.IsPoints
	}
	return 0
}

func (m *ShopGoodsPure) GetMaxPoints() int64 {
	if m != nil {
		return m.MaxPoints
	}
	return 0
}

func (m *ShopGoodsPure) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ShopGoodsPure) GetPriceDot() int32 {
	if m != nil {
		return m.PriceDot
	}
	return 0
}

func (m *ShopGoodsPure) GetPriceCost() int32 {
	if m != nil {
		return m.PriceCost
	}
	return 0
}

func (m *ShopGoodsPure) GetGoodsNo() string {
	if m != nil {
		return m.GoodsNo
	}
	return ""
}

func (m *ShopGoodsPure) GetSaleMin() int32 {
	if m != nil {
		return m.SaleMin
	}
	return 0
}

func (m *ShopGoodsPure) GetSaleMax() int32 {
	if m != nil {
		return m.SaleMax
	}
	return 0
}

func (m *ShopGoodsPure) GetQuota() int32 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *ShopGoodsPure) GetQuotaNum() int64 {
	if m != nil {
		return m.QuotaNum
	}
	return 0
}

func (m *ShopGoodsPure) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

// 电子卡券特有的属性 有效期和退款
type ElectronicCoupon struct {
	ValidityStartTime    int64    `protobuf:"varint,1,opt,name=validity_start_time,json=validityStartTime,proto3" json:"validity_start_time,omitempty"`
	ValidityEndTime      int64    `protobuf:"varint,2,opt,name=validity_end_time,json=validityEndTime,proto3" json:"validity_end_time,omitempty"`
	IsHolidaysAvailable  int32    `protobuf:"varint,3,opt,name=is_holidays_available,json=isHolidaysAvailable,proto3" json:"is_holidays_available,omitempty"`
	IsSupport_Refund     int32    `protobuf:"varint,4,opt,name=is_support_Refund,json=isSupportRefund,proto3" json:"is_support_Refund,omitempty"`
	IsLongTimeSupport    int32    `protobuf:"varint,5,opt,name=is_long_time_support,json=isLongTimeSupport,proto3" json:"is_long_time_support,omitempty"`
	RefundOverdueTime    int64    `protobuf:"varint,6,opt,name=refund_overdue_time,json=refundOverdueTime,proto3" json:"refund_overdue_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElectronicCoupon) Reset()         { *m = ElectronicCoupon{} }
func (m *ElectronicCoupon) String() string { return proto.CompactTextString(m) }
func (*ElectronicCoupon) ProtoMessage()    {}
func (*ElectronicCoupon) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{41}
}

func (m *ElectronicCoupon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectronicCoupon.Unmarshal(m, b)
}
func (m *ElectronicCoupon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectronicCoupon.Marshal(b, m, deterministic)
}
func (m *ElectronicCoupon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectronicCoupon.Merge(m, src)
}
func (m *ElectronicCoupon) XXX_Size() int {
	return xxx_messageInfo_ElectronicCoupon.Size(m)
}
func (m *ElectronicCoupon) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectronicCoupon.DiscardUnknown(m)
}

var xxx_messageInfo_ElectronicCoupon proto.InternalMessageInfo

func (m *ElectronicCoupon) GetValidityStartTime() int64 {
	if m != nil {
		return m.ValidityStartTime
	}
	return 0
}

func (m *ElectronicCoupon) GetValidityEndTime() int64 {
	if m != nil {
		return m.ValidityEndTime
	}
	return 0
}

func (m *ElectronicCoupon) GetIsHolidaysAvailable() int32 {
	if m != nil {
		return m.IsHolidaysAvailable
	}
	return 0
}

func (m *ElectronicCoupon) GetIsSupport_Refund() int32 {
	if m != nil {
		return m.IsSupport_Refund
	}
	return 0
}

func (m *ElectronicCoupon) GetIsLongTimeSupport() int32 {
	if m != nil {
		return m.IsLongTimeSupport
	}
	return 0
}

func (m *ElectronicCoupon) GetRefundOverdueTime() int64 {
	if m != nil {
		return m.RefundOverdueTime
	}
	return 0
}

// START sku新的存储方式
type GoodsDistributionStock struct {
	Id                   int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Coid                 int64       `protobuf:"varint,2,opt,name=coid,proto3" json:"coid,omitempty"`
	StockNum             int64       `protobuf:"varint,3,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	SoldNum              int64       `protobuf:"varint,4,opt,name=sold_num,json=soldNum,proto3" json:"sold_num,omitempty"`
	SkuStock             []*SkuStock `protobuf:"bytes,5,rep,name=sku_stock,json=skuStock,proto3" json:"sku_stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GoodsDistributionStock) Reset()         { *m = GoodsDistributionStock{} }
func (m *GoodsDistributionStock) String() string { return proto.CompactTextString(m) }
func (*GoodsDistributionStock) ProtoMessage()    {}
func (*GoodsDistributionStock) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{42}
}

func (m *GoodsDistributionStock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsDistributionStock.Unmarshal(m, b)
}
func (m *GoodsDistributionStock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsDistributionStock.Marshal(b, m, deterministic)
}
func (m *GoodsDistributionStock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsDistributionStock.Merge(m, src)
}
func (m *GoodsDistributionStock) XXX_Size() int {
	return xxx_messageInfo_GoodsDistributionStock.Size(m)
}
func (m *GoodsDistributionStock) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsDistributionStock.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsDistributionStock proto.InternalMessageInfo

func (m *GoodsDistributionStock) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsDistributionStock) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *GoodsDistributionStock) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *GoodsDistributionStock) GetSoldNum() int64 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

func (m *GoodsDistributionStock) GetSkuStock() []*SkuStock {
	if m != nil {
		return m.SkuStock
	}
	return nil
}

type SkuStock struct {
	SkuId                int64    `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	StockNum             int64    `protobuf:"varint,2,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	SoldNum              int64    `protobuf:"varint,3,opt,name=sold_num,json=soldNum,proto3" json:"sold_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkuStock) Reset()         { *m = SkuStock{} }
func (m *SkuStock) String() string { return proto.CompactTextString(m) }
func (*SkuStock) ProtoMessage()    {}
func (*SkuStock) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{43}
}

func (m *SkuStock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkuStock.Unmarshal(m, b)
}
func (m *SkuStock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkuStock.Marshal(b, m, deterministic)
}
func (m *SkuStock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkuStock.Merge(m, src)
}
func (m *SkuStock) XXX_Size() int {
	return xxx_messageInfo_SkuStock.Size(m)
}
func (m *SkuStock) XXX_DiscardUnknown() {
	xxx_messageInfo_SkuStock.DiscardUnknown(m)
}

var xxx_messageInfo_SkuStock proto.InternalMessageInfo

func (m *SkuStock) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *SkuStock) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *SkuStock) GetSoldNum() int64 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

type ResShopGoodsSave struct {
	Info                 *ShopGoodsPure                  `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	GoodsRule            *GoodsStockDisCount             `protobuf:"bytes,2,opt,name=goods_rule,json=goodsRule,proto3" json:"goods_rule,omitempty"`
	GoodsData            *ResShopGoodsSave_GoodsDataInfo `protobuf:"bytes,3,opt,name=goods_data,json=goodsData,proto3" json:"goods_data,omitempty"`
	GoodsDisStock        *GoodsDistributionStock         `protobuf:"bytes,4,opt,name=goods_dis_stock,json=goodsDisStock,proto3" json:"goods_dis_stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ResShopGoodsSave) Reset()         { *m = ResShopGoodsSave{} }
func (m *ResShopGoodsSave) String() string { return proto.CompactTextString(m) }
func (*ResShopGoodsSave) ProtoMessage()    {}
func (*ResShopGoodsSave) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{44}
}

func (m *ResShopGoodsSave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResShopGoodsSave.Unmarshal(m, b)
}
func (m *ResShopGoodsSave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResShopGoodsSave.Marshal(b, m, deterministic)
}
func (m *ResShopGoodsSave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResShopGoodsSave.Merge(m, src)
}
func (m *ResShopGoodsSave) XXX_Size() int {
	return xxx_messageInfo_ResShopGoodsSave.Size(m)
}
func (m *ResShopGoodsSave) XXX_DiscardUnknown() {
	xxx_messageInfo_ResShopGoodsSave.DiscardUnknown(m)
}

var xxx_messageInfo_ResShopGoodsSave proto.InternalMessageInfo

func (m *ResShopGoodsSave) GetInfo() *ShopGoodsPure {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ResShopGoodsSave) GetGoodsRule() *GoodsStockDisCount {
	if m != nil {
		return m.GoodsRule
	}
	return nil
}

func (m *ResShopGoodsSave) GetGoodsData() *ResShopGoodsSave_GoodsDataInfo {
	if m != nil {
		return m.GoodsData
	}
	return nil
}

func (m *ResShopGoodsSave) GetGoodsDisStock() *GoodsDistributionStock {
	if m != nil {
		return m.GoodsDisStock
	}
	return nil
}

type ResShopGoodsSave_GoodsDataInfo struct {
	Pic                  string   `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	Video                string   `protobuf:"bytes,2,opt,name=video,proto3" json:"video,omitempty"`
	Share                string   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	Word                 string   `protobuf:"bytes,4,opt,name=word,proto3" json:"word,omitempty"`
	SubName              string   `protobuf:"bytes,5,opt,name=sub_name,json=subName,proto3" json:"sub_name,omitempty"`
	Content              string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	SaleTime             int64    `protobuf:"varint,7,opt,name=sale_time,json=saleTime,proto3" json:"sale_time,omitempty"`
	IsShowRest           int32    `protobuf:"varint,8,opt,name=is_show_rest,json=isShowRest,proto3" json:"is_show_rest,omitempty"`
	ElectronicCoupon     string   `protobuf:"bytes,9,opt,name=electronic_coupon,json=electronicCoupon,proto3" json:"electronic_coupon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResShopGoodsSave_GoodsDataInfo) Reset()         { *m = ResShopGoodsSave_GoodsDataInfo{} }
func (m *ResShopGoodsSave_GoodsDataInfo) String() string { return proto.CompactTextString(m) }
func (*ResShopGoodsSave_GoodsDataInfo) ProtoMessage()    {}
func (*ResShopGoodsSave_GoodsDataInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{44, 0}
}

func (m *ResShopGoodsSave_GoodsDataInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResShopGoodsSave_GoodsDataInfo.Unmarshal(m, b)
}
func (m *ResShopGoodsSave_GoodsDataInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResShopGoodsSave_GoodsDataInfo.Marshal(b, m, deterministic)
}
func (m *ResShopGoodsSave_GoodsDataInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResShopGoodsSave_GoodsDataInfo.Merge(m, src)
}
func (m *ResShopGoodsSave_GoodsDataInfo) XXX_Size() int {
	return xxx_messageInfo_ResShopGoodsSave_GoodsDataInfo.Size(m)
}
func (m *ResShopGoodsSave_GoodsDataInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResShopGoodsSave_GoodsDataInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResShopGoodsSave_GoodsDataInfo proto.InternalMessageInfo

func (m *ResShopGoodsSave_GoodsDataInfo) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

func (m *ResShopGoodsSave_GoodsDataInfo) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *ResShopGoodsSave_GoodsDataInfo) GetShare() string {
	if m != nil {
		return m.Share
	}
	return ""
}

func (m *ResShopGoodsSave_GoodsDataInfo) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *ResShopGoodsSave_GoodsDataInfo) GetSubName() string {
	if m != nil {
		return m.SubName
	}
	return ""
}

func (m *ResShopGoodsSave_GoodsDataInfo) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ResShopGoodsSave_GoodsDataInfo) GetSaleTime() int64 {
	if m != nil {
		return m.SaleTime
	}
	return 0
}

func (m *ResShopGoodsSave_GoodsDataInfo) GetIsShowRest() int32 {
	if m != nil {
		return m.IsShowRest
	}
	return 0
}

func (m *ResShopGoodsSave_GoodsDataInfo) GetElectronicCoupon() string {
	if m != nil {
		return m.ElectronicCoupon
	}
	return ""
}

type ShopGoodsSave struct {
	Info                 *ShopGoodsPure               `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	GoodsRule            *GoodsStockDisCount          `protobuf:"bytes,2,opt,name=goods_rule,json=goodsRule,proto3" json:"goods_rule,omitempty"`
	GoodsData            *ShopGoodsSave_GoodsDataInfo `protobuf:"bytes,3,opt,name=goods_data,json=goodsData,proto3" json:"goods_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ShopGoodsSave) Reset()         { *m = ShopGoodsSave{} }
func (m *ShopGoodsSave) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsSave) ProtoMessage()    {}
func (*ShopGoodsSave) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{45}
}

func (m *ShopGoodsSave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsSave.Unmarshal(m, b)
}
func (m *ShopGoodsSave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsSave.Marshal(b, m, deterministic)
}
func (m *ShopGoodsSave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsSave.Merge(m, src)
}
func (m *ShopGoodsSave) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsSave.Size(m)
}
func (m *ShopGoodsSave) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsSave.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsSave proto.InternalMessageInfo

func (m *ShopGoodsSave) GetInfo() *ShopGoodsPure {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ShopGoodsSave) GetGoodsRule() *GoodsStockDisCount {
	if m != nil {
		return m.GoodsRule
	}
	return nil
}

func (m *ShopGoodsSave) GetGoodsData() *ShopGoodsSave_GoodsDataInfo {
	if m != nil {
		return m.GoodsData
	}
	return nil
}

type ShopGoodsSave_GoodsDataInfo struct {
	Pic                  []string          `protobuf:"bytes,1,rep,name=pic,proto3" json:"pic,omitempty"`
	Video                string            `protobuf:"bytes,2,opt,name=video,proto3" json:"video,omitempty"`
	Share                string            `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	Word                 []*Word           `protobuf:"bytes,4,rep,name=word,proto3" json:"word,omitempty"`
	SubName              string            `protobuf:"bytes,5,opt,name=sub_name,json=subName,proto3" json:"sub_name,omitempty"`
	Content              string            `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	SaleTime             int64             `protobuf:"varint,7,opt,name=sale_time,json=saleTime,proto3" json:"sale_time,omitempty"`
	IsShowRest           int32             `protobuf:"varint,8,opt,name=is_show_rest,json=isShowRest,proto3" json:"is_show_rest,omitempty"`
	ElectronicCoupon     *ElectronicCoupon `protobuf:"bytes,9,opt,name=electronic_coupon,json=electronicCoupon,proto3" json:"electronic_coupon,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShopGoodsSave_GoodsDataInfo) Reset()         { *m = ShopGoodsSave_GoodsDataInfo{} }
func (m *ShopGoodsSave_GoodsDataInfo) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsSave_GoodsDataInfo) ProtoMessage()    {}
func (*ShopGoodsSave_GoodsDataInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{45, 0}
}

func (m *ShopGoodsSave_GoodsDataInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsSave_GoodsDataInfo.Unmarshal(m, b)
}
func (m *ShopGoodsSave_GoodsDataInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsSave_GoodsDataInfo.Marshal(b, m, deterministic)
}
func (m *ShopGoodsSave_GoodsDataInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsSave_GoodsDataInfo.Merge(m, src)
}
func (m *ShopGoodsSave_GoodsDataInfo) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsSave_GoodsDataInfo.Size(m)
}
func (m *ShopGoodsSave_GoodsDataInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsSave_GoodsDataInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsSave_GoodsDataInfo proto.InternalMessageInfo

func (m *ShopGoodsSave_GoodsDataInfo) GetPic() []string {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *ShopGoodsSave_GoodsDataInfo) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *ShopGoodsSave_GoodsDataInfo) GetShare() string {
	if m != nil {
		return m.Share
	}
	return ""
}

func (m *ShopGoodsSave_GoodsDataInfo) GetWord() []*Word {
	if m != nil {
		return m.Word
	}
	return nil
}

func (m *ShopGoodsSave_GoodsDataInfo) GetSubName() string {
	if m != nil {
		return m.SubName
	}
	return ""
}

func (m *ShopGoodsSave_GoodsDataInfo) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ShopGoodsSave_GoodsDataInfo) GetSaleTime() int64 {
	if m != nil {
		return m.SaleTime
	}
	return 0
}

func (m *ShopGoodsSave_GoodsDataInfo) GetIsShowRest() int32 {
	if m != nil {
		return m.IsShowRest
	}
	return 0
}

func (m *ShopGoodsSave_GoodsDataInfo) GetElectronicCoupon() *ElectronicCoupon {
	if m != nil {
		return m.ElectronicCoupon
	}
	return nil
}

type GoodsStockDisCount struct {
	Id                   int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Coid                 int64           `protobuf:"varint,2,opt,name=coid,proto3" json:"coid,omitempty"`
	GoodsRuleList        []*ReqGoodsRule `protobuf:"bytes,3,rep,name=goods_rule_list,json=goodsRuleList,proto3" json:"goods_rule_list,omitempty"`
	GoodsAsset           *GoodsAsset     `protobuf:"bytes,4,opt,name=goods_asset,json=goodsAsset,proto3" json:"goods_asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GoodsStockDisCount) Reset()         { *m = GoodsStockDisCount{} }
func (m *GoodsStockDisCount) String() string { return proto.CompactTextString(m) }
func (*GoodsStockDisCount) ProtoMessage()    {}
func (*GoodsStockDisCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{46}
}

func (m *GoodsStockDisCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsStockDisCount.Unmarshal(m, b)
}
func (m *GoodsStockDisCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsStockDisCount.Marshal(b, m, deterministic)
}
func (m *GoodsStockDisCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsStockDisCount.Merge(m, src)
}
func (m *GoodsStockDisCount) XXX_Size() int {
	return xxx_messageInfo_GoodsStockDisCount.Size(m)
}
func (m *GoodsStockDisCount) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsStockDisCount.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsStockDisCount proto.InternalMessageInfo

func (m *GoodsStockDisCount) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsStockDisCount) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *GoodsStockDisCount) GetGoodsRuleList() []*ReqGoodsRule {
	if m != nil {
		return m.GoodsRuleList
	}
	return nil
}

func (m *GoodsStockDisCount) GetGoodsAsset() *GoodsAsset {
	if m != nil {
		return m.GoodsAsset
	}
	return nil
}

type ReqGoodsRule struct {
	Id                   int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SkuId                int64            `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	GoodsStock           *GoodsStock      `protobuf:"bytes,3,opt,name=goods_stock,json=goodsStock,proto3" json:"goods_stock,omitempty"`
	GoodsDiscountList    []*GoodsDiscount `protobuf:"bytes,4,rep,name=goods_discount_list,json=goodsDiscountList,proto3" json:"goods_discount_list,omitempty"`
	GoodsRuleInfo        []*GoodsRuleInfo `protobuf:"bytes,5,rep,name=goods_rule_info,json=goodsRuleInfo,proto3" json:"goods_rule_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReqGoodsRule) Reset()         { *m = ReqGoodsRule{} }
func (m *ReqGoodsRule) String() string { return proto.CompactTextString(m) }
func (*ReqGoodsRule) ProtoMessage()    {}
func (*ReqGoodsRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{47}
}

func (m *ReqGoodsRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGoodsRule.Unmarshal(m, b)
}
func (m *ReqGoodsRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGoodsRule.Marshal(b, m, deterministic)
}
func (m *ReqGoodsRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGoodsRule.Merge(m, src)
}
func (m *ReqGoodsRule) XXX_Size() int {
	return xxx_messageInfo_ReqGoodsRule.Size(m)
}
func (m *ReqGoodsRule) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGoodsRule.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGoodsRule proto.InternalMessageInfo

func (m *ReqGoodsRule) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReqGoodsRule) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *ReqGoodsRule) GetGoodsStock() *GoodsStock {
	if m != nil {
		return m.GoodsStock
	}
	return nil
}

func (m *ReqGoodsRule) GetGoodsDiscountList() []*GoodsDiscount {
	if m != nil {
		return m.GoodsDiscountList
	}
	return nil
}

func (m *ReqGoodsRule) GetGoodsRuleInfo() []*GoodsRuleInfo {
	if m != nil {
		return m.GoodsRuleInfo
	}
	return nil
}

type GoodsAsset struct {
	GoodsId              int64    `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	StockNum             int64    `protobuf:"varint,2,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	SoldNum              int64    `protobuf:"varint,3,opt,name=sold_num,json=soldNum,proto3" json:"sold_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsAsset) Reset()         { *m = GoodsAsset{} }
func (m *GoodsAsset) String() string { return proto.CompactTextString(m) }
func (*GoodsAsset) ProtoMessage()    {}
func (*GoodsAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{48}
}

func (m *GoodsAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsAsset.Unmarshal(m, b)
}
func (m *GoodsAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsAsset.Marshal(b, m, deterministic)
}
func (m *GoodsAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsAsset.Merge(m, src)
}
func (m *GoodsAsset) XXX_Size() int {
	return xxx_messageInfo_GoodsAsset.Size(m)
}
func (m *GoodsAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsAsset.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsAsset proto.InternalMessageInfo

func (m *GoodsAsset) GetGoodsId() int64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *GoodsAsset) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *GoodsAsset) GetSoldNum() int64 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

type GoodsStock struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StockId              int64    `protobuf:"varint,2,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	Price                int32    `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	PriceDot             int32    `protobuf:"varint,4,opt,name=price_dot,json=priceDot,proto3" json:"price_dot,omitempty"`
	PriceCost            int32    `protobuf:"varint,5,opt,name=price_cost,json=priceCost,proto3" json:"price_cost,omitempty"`
	GoodsNo              string   `protobuf:"bytes,6,opt,name=goods_no,json=goodsNo,proto3" json:"goods_no,omitempty"`
	StockNum             int64    `protobuf:"varint,7,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	SoldNum              int64    `protobuf:"varint,8,opt,name=sold_num,json=soldNum,proto3" json:"sold_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsStock) Reset()         { *m = GoodsStock{} }
func (m *GoodsStock) String() string { return proto.CompactTextString(m) }
func (*GoodsStock) ProtoMessage()    {}
func (*GoodsStock) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{49}
}

func (m *GoodsStock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsStock.Unmarshal(m, b)
}
func (m *GoodsStock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsStock.Marshal(b, m, deterministic)
}
func (m *GoodsStock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsStock.Merge(m, src)
}
func (m *GoodsStock) XXX_Size() int {
	return xxx_messageInfo_GoodsStock.Size(m)
}
func (m *GoodsStock) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsStock.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsStock proto.InternalMessageInfo

func (m *GoodsStock) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsStock) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *GoodsStock) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *GoodsStock) GetPriceDot() int32 {
	if m != nil {
		return m.PriceDot
	}
	return 0
}

func (m *GoodsStock) GetPriceCost() int32 {
	if m != nil {
		return m.PriceCost
	}
	return 0
}

func (m *GoodsStock) GetGoodsNo() string {
	if m != nil {
		return m.GoodsNo
	}
	return ""
}

func (m *GoodsStock) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *GoodsStock) GetSoldNum() int64 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

type GoodsDiscount struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BindType             int64    `protobuf:"varint,2,opt,name=bind_type,json=bindType,proto3" json:"bind_type,omitempty"`
	DiscountType         int64    `protobuf:"varint,3,opt,name=discount_type,json=discountType,proto3" json:"discount_type,omitempty"`
	DiscountValue        int64    `protobuf:"varint,4,opt,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsDiscount) Reset()         { *m = GoodsDiscount{} }
func (m *GoodsDiscount) String() string { return proto.CompactTextString(m) }
func (*GoodsDiscount) ProtoMessage()    {}
func (*GoodsDiscount) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{50}
}

func (m *GoodsDiscount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsDiscount.Unmarshal(m, b)
}
func (m *GoodsDiscount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsDiscount.Marshal(b, m, deterministic)
}
func (m *GoodsDiscount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsDiscount.Merge(m, src)
}
func (m *GoodsDiscount) XXX_Size() int {
	return xxx_messageInfo_GoodsDiscount.Size(m)
}
func (m *GoodsDiscount) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsDiscount.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsDiscount proto.InternalMessageInfo

func (m *GoodsDiscount) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsDiscount) GetBindType() int64 {
	if m != nil {
		return m.BindType
	}
	return 0
}

func (m *GoodsDiscount) GetDiscountType() int64 {
	if m != nil {
		return m.DiscountType
	}
	return 0
}

func (m *GoodsDiscount) GetDiscountValue() int64 {
	if m != nil {
		return m.DiscountValue
	}
	return 0
}

type GoodsRuleInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 int64    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Value                string   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsRuleInfo) Reset()         { *m = GoodsRuleInfo{} }
func (m *GoodsRuleInfo) String() string { return proto.CompactTextString(m) }
func (*GoodsRuleInfo) ProtoMessage()    {}
func (*GoodsRuleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{51}
}

func (m *GoodsRuleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsRuleInfo.Unmarshal(m, b)
}
func (m *GoodsRuleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsRuleInfo.Marshal(b, m, deterministic)
}
func (m *GoodsRuleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsRuleInfo.Merge(m, src)
}
func (m *GoodsRuleInfo) XXX_Size() int {
	return xxx_messageInfo_GoodsRuleInfo.Size(m)
}
func (m *GoodsRuleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsRuleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsRuleInfo proto.InternalMessageInfo

func (m *GoodsRuleInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GoodsRuleInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GoodsRuleInfo) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GoodsRuleInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// END
type IdArray struct {
	IdS                  []int64  `protobuf:"varint,1,rep,packed,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdArray) Reset()         { *m = IdArray{} }
func (m *IdArray) String() string { return proto.CompactTextString(m) }
func (*IdArray) ProtoMessage()    {}
func (*IdArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{52}
}

func (m *IdArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdArray.Unmarshal(m, b)
}
func (m *IdArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdArray.Marshal(b, m, deterministic)
}
func (m *IdArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdArray.Merge(m, src)
}
func (m *IdArray) XXX_Size() int {
	return xxx_messageInfo_IdArray.Size(m)
}
func (m *IdArray) XXX_DiscardUnknown() {
	xxx_messageInfo_IdArray.DiscardUnknown(m)
}

var xxx_messageInfo_IdArray proto.InternalMessageInfo

func (m *IdArray) GetIdS() []int64 {
	if m != nil {
		return m.IdS
	}
	return nil
}

type ReqCoShopGoodsOperate struct {
	Coid                 int64        `protobuf:"varint,1,opt,name=coid,proto3" json:"coid,omitempty"`
	Type                 int32        `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	GoodsList            []int64      `protobuf:"varint,3,rep,packed,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	FeatureList          *FeatureList `protobuf:"bytes,4,opt,name=feature_list,json=featureList,proto3" json:"feature_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReqCoShopGoodsOperate) Reset()         { *m = ReqCoShopGoodsOperate{} }
func (m *ReqCoShopGoodsOperate) String() string { return proto.CompactTextString(m) }
func (*ReqCoShopGoodsOperate) ProtoMessage()    {}
func (*ReqCoShopGoodsOperate) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{53}
}

func (m *ReqCoShopGoodsOperate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCoShopGoodsOperate.Unmarshal(m, b)
}
func (m *ReqCoShopGoodsOperate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCoShopGoodsOperate.Marshal(b, m, deterministic)
}
func (m *ReqCoShopGoodsOperate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCoShopGoodsOperate.Merge(m, src)
}
func (m *ReqCoShopGoodsOperate) XXX_Size() int {
	return xxx_messageInfo_ReqCoShopGoodsOperate.Size(m)
}
func (m *ReqCoShopGoodsOperate) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCoShopGoodsOperate.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCoShopGoodsOperate proto.InternalMessageInfo

func (m *ReqCoShopGoodsOperate) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ReqCoShopGoodsOperate) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqCoShopGoodsOperate) GetGoodsList() []int64 {
	if m != nil {
		return m.GoodsList
	}
	return nil
}

func (m *ReqCoShopGoodsOperate) GetFeatureList() *FeatureList {
	if m != nil {
		return m.FeatureList
	}
	return nil
}

type MemberPrice struct {
	GoodsId              int64           `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	SkuId                int64           `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	DiscountType         []*DiscountType `protobuf:"bytes,3,rep,name=discount_type,json=discountType,proto3" json:"discount_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MemberPrice) Reset()         { *m = MemberPrice{} }
func (m *MemberPrice) String() string { return proto.CompactTextString(m) }
func (*MemberPrice) ProtoMessage()    {}
func (*MemberPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{54}
}

func (m *MemberPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberPrice.Unmarshal(m, b)
}
func (m *MemberPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberPrice.Marshal(b, m, deterministic)
}
func (m *MemberPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberPrice.Merge(m, src)
}
func (m *MemberPrice) XXX_Size() int {
	return xxx_messageInfo_MemberPrice.Size(m)
}
func (m *MemberPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberPrice.DiscardUnknown(m)
}

var xxx_messageInfo_MemberPrice proto.InternalMessageInfo

func (m *MemberPrice) GetGoodsId() int64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *MemberPrice) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *MemberPrice) GetDiscountType() []*DiscountType {
	if m != nil {
		return m.DiscountType
	}
	return nil
}

type DiscountType struct {
	LevelOrBenefit       int32    `protobuf:"varint,1,opt,name=level_or_benefit,json=levelOrBenefit,proto3" json:"level_or_benefit,omitempty"`
	DiscountMethod       int32    `protobuf:"varint,2,opt,name=discount_method,json=discountMethod,proto3" json:"discount_method,omitempty"`
	DiscountValue        []int32  `protobuf:"varint,3,rep,packed,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscountType) Reset()         { *m = DiscountType{} }
func (m *DiscountType) String() string { return proto.CompactTextString(m) }
func (*DiscountType) ProtoMessage()    {}
func (*DiscountType) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{55}
}

func (m *DiscountType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscountType.Unmarshal(m, b)
}
func (m *DiscountType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscountType.Marshal(b, m, deterministic)
}
func (m *DiscountType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscountType.Merge(m, src)
}
func (m *DiscountType) XXX_Size() int {
	return xxx_messageInfo_DiscountType.Size(m)
}
func (m *DiscountType) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscountType.DiscardUnknown(m)
}

var xxx_messageInfo_DiscountType proto.InternalMessageInfo

func (m *DiscountType) GetLevelOrBenefit() int32 {
	if m != nil {
		return m.LevelOrBenefit
	}
	return 0
}

func (m *DiscountType) GetDiscountMethod() int32 {
	if m != nil {
		return m.DiscountMethod
	}
	return 0
}

func (m *DiscountType) GetDiscountValue() []int32 {
	if m != nil {
		return m.DiscountValue
	}
	return nil
}

type GoodsCount struct {
	GoodsId              int64     `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	DiscountValue        []float64 `protobuf:"fixed64,2,rep,packed,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GoodsCount) Reset()         { *m = GoodsCount{} }
func (m *GoodsCount) String() string { return proto.CompactTextString(m) }
func (*GoodsCount) ProtoMessage()    {}
func (*GoodsCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{56}
}

func (m *GoodsCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsCount.Unmarshal(m, b)
}
func (m *GoodsCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsCount.Marshal(b, m, deterministic)
}
func (m *GoodsCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsCount.Merge(m, src)
}
func (m *GoodsCount) XXX_Size() int {
	return xxx_messageInfo_GoodsCount.Size(m)
}
func (m *GoodsCount) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsCount.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsCount proto.InternalMessageInfo

func (m *GoodsCount) GetGoodsId() int64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *GoodsCount) GetDiscountValue() []float64 {
	if m != nil {
		return m.DiscountValue
	}
	return nil
}

type FeatureList struct {
	GroupId              int64            `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	OldName              string           `protobuf:"bytes,2,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	NewName              string           `protobuf:"bytes,3,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	StartTime            int64            `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Quota                int32            `protobuf:"varint,5,opt,name=quota,proto3" json:"quota,omitempty"`
	QuotaNum             int32            `protobuf:"varint,6,opt,name=quota_num,json=quotaNum,proto3" json:"quota_num,omitempty"`
	IsVip                int32            `protobuf:"varint,7,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
	Member               []*MemberPrice   `protobuf:"bytes,8,rep,name=member,proto3" json:"member,omitempty"`
	GoodsName            *GoodsNameChange `protobuf:"bytes,9,opt,name=goods_name,json=goodsName,proto3" json:"goods_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FeatureList) Reset()         { *m = FeatureList{} }
func (m *FeatureList) String() string { return proto.CompactTextString(m) }
func (*FeatureList) ProtoMessage()    {}
func (*FeatureList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{57}
}

func (m *FeatureList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureList.Unmarshal(m, b)
}
func (m *FeatureList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureList.Marshal(b, m, deterministic)
}
func (m *FeatureList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureList.Merge(m, src)
}
func (m *FeatureList) XXX_Size() int {
	return xxx_messageInfo_FeatureList.Size(m)
}
func (m *FeatureList) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureList.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureList proto.InternalMessageInfo

func (m *FeatureList) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *FeatureList) GetOldName() string {
	if m != nil {
		return m.OldName
	}
	return ""
}

func (m *FeatureList) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *FeatureList) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *FeatureList) GetQuota() int32 {
	if m != nil {
		return m.Quota
	}
	return 0
}

func (m *FeatureList) GetQuotaNum() int32 {
	if m != nil {
		return m.QuotaNum
	}
	return 0
}

func (m *FeatureList) GetIsVip() int32 {
	if m != nil {
		return m.IsVip
	}
	return 0
}

func (m *FeatureList) GetMember() []*MemberPrice {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *FeatureList) GetGoodsName() *GoodsNameChange {
	if m != nil {
		return m.GoodsName
	}
	return nil
}

type GoodsNameChange struct {
	NameList             []string `protobuf:"bytes,1,rep,name=name_list,json=nameList,proto3" json:"name_list,omitempty"`
	OldName              string   `protobuf:"bytes,2,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	NewName              string   `protobuf:"bytes,3,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsNameChange) Reset()         { *m = GoodsNameChange{} }
func (m *GoodsNameChange) String() string { return proto.CompactTextString(m) }
func (*GoodsNameChange) ProtoMessage()    {}
func (*GoodsNameChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{58}
}

func (m *GoodsNameChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsNameChange.Unmarshal(m, b)
}
func (m *GoodsNameChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsNameChange.Marshal(b, m, deterministic)
}
func (m *GoodsNameChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsNameChange.Merge(m, src)
}
func (m *GoodsNameChange) XXX_Size() int {
	return xxx_messageInfo_GoodsNameChange.Size(m)
}
func (m *GoodsNameChange) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsNameChange.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsNameChange proto.InternalMessageInfo

func (m *GoodsNameChange) GetNameList() []string {
	if m != nil {
		return m.NameList
	}
	return nil
}

func (m *GoodsNameChange) GetOldName() string {
	if m != nil {
		return m.OldName
	}
	return ""
}

func (m *GoodsNameChange) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

type ReqFrontSearchInfo struct {
	PageInfo             *PageInfo    `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	SearchInfo           *SearchGoods `protobuf:"bytes,2,opt,name=search_info,json=searchInfo,proto3" json:"search_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReqFrontSearchInfo) Reset()         { *m = ReqFrontSearchInfo{} }
func (m *ReqFrontSearchInfo) String() string { return proto.CompactTextString(m) }
func (*ReqFrontSearchInfo) ProtoMessage()    {}
func (*ReqFrontSearchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{59}
}

func (m *ReqFrontSearchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqFrontSearchInfo.Unmarshal(m, b)
}
func (m *ReqFrontSearchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqFrontSearchInfo.Marshal(b, m, deterministic)
}
func (m *ReqFrontSearchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqFrontSearchInfo.Merge(m, src)
}
func (m *ReqFrontSearchInfo) XXX_Size() int {
	return xxx_messageInfo_ReqFrontSearchInfo.Size(m)
}
func (m *ReqFrontSearchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqFrontSearchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqFrontSearchInfo proto.InternalMessageInfo

func (m *ReqFrontSearchInfo) GetPageInfo() *PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

func (m *ReqFrontSearchInfo) GetSearchInfo() *SearchGoods {
	if m != nil {
		return m.SearchInfo
	}
	return nil
}

type ResFrontSearchInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId              int64    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Coid                 int64    `protobuf:"varint,3,opt,name=coid,proto3" json:"coid,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Title                string   `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Price                int32    `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	Video                string   `protobuf:"bytes,7,opt,name=video,proto3" json:"video,omitempty"`
	Pic                  string   `protobuf:"bytes,8,opt,name=pic,proto3" json:"pic,omitempty"`
	StockNum             int64    `protobuf:"varint,9,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	Cover                string   `protobuf:"bytes,10,opt,name=cover,proto3" json:"cover,omitempty"`
	PriceDot             int32    `protobuf:"varint,11,opt,name=price_dot,json=priceDot,proto3" json:"price_dot,omitempty"`
	SoldNum              int64    `protobuf:"varint,12,opt,name=sold_num,json=soldNum,proto3" json:"sold_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResFrontSearchInfo) Reset()         { *m = ResFrontSearchInfo{} }
func (m *ResFrontSearchInfo) String() string { return proto.CompactTextString(m) }
func (*ResFrontSearchInfo) ProtoMessage()    {}
func (*ResFrontSearchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{60}
}

func (m *ResFrontSearchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResFrontSearchInfo.Unmarshal(m, b)
}
func (m *ResFrontSearchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResFrontSearchInfo.Marshal(b, m, deterministic)
}
func (m *ResFrontSearchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResFrontSearchInfo.Merge(m, src)
}
func (m *ResFrontSearchInfo) XXX_Size() int {
	return xxx_messageInfo_ResFrontSearchInfo.Size(m)
}
func (m *ResFrontSearchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResFrontSearchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResFrontSearchInfo proto.InternalMessageInfo

func (m *ResFrontSearchInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResFrontSearchInfo) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ResFrontSearchInfo) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *ResFrontSearchInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResFrontSearchInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResFrontSearchInfo) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ResFrontSearchInfo) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *ResFrontSearchInfo) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

func (m *ResFrontSearchInfo) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *ResFrontSearchInfo) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *ResFrontSearchInfo) GetPriceDot() int32 {
	if m != nil {
		return m.PriceDot
	}
	return 0
}

func (m *ResFrontSearchInfo) GetSoldNum() int64 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

type ResFrontGoodsList struct {
	List                 []*ResFrontSearchInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count                int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResFrontGoodsList) Reset()         { *m = ResFrontGoodsList{} }
func (m *ResFrontGoodsList) String() string { return proto.CompactTextString(m) }
func (*ResFrontGoodsList) ProtoMessage()    {}
func (*ResFrontGoodsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{61}
}

func (m *ResFrontGoodsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResFrontGoodsList.Unmarshal(m, b)
}
func (m *ResFrontGoodsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResFrontGoodsList.Marshal(b, m, deterministic)
}
func (m *ResFrontGoodsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResFrontGoodsList.Merge(m, src)
}
func (m *ResFrontGoodsList) XXX_Size() int {
	return xxx_messageInfo_ResFrontGoodsList.Size(m)
}
func (m *ResFrontGoodsList) XXX_DiscardUnknown() {
	xxx_messageInfo_ResFrontGoodsList.DiscardUnknown(m)
}

var xxx_messageInfo_ResFrontGoodsList proto.InternalMessageInfo

func (m *ResFrontGoodsList) GetList() []*ResFrontSearchInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ResFrontGoodsList) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Faker struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Faker) Reset()         { *m = Faker{} }
func (m *Faker) String() string { return proto.CompactTextString(m) }
func (*Faker) ProtoMessage()    {}
func (*Faker) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{62}
}

func (m *Faker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Faker.Unmarshal(m, b)
}
func (m *Faker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Faker.Marshal(b, m, deterministic)
}
func (m *Faker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Faker.Merge(m, src)
}
func (m *Faker) XXX_Size() int {
	return xxx_messageInfo_Faker.Size(m)
}
func (m *Faker) XXX_DiscardUnknown() {
	xxx_messageInfo_Faker.DiscardUnknown(m)
}

var xxx_messageInfo_Faker proto.InternalMessageInfo

func (m *Faker) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// start--------新的前端页面提交规则
type CoShopGoods struct {
	Id                   int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 int32                    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Title                string                   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	GroupId              int64                    `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	SnapshotId           int64                    `protobuf:"varint,6,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	RetailId             int64                    `protobuf:"varint,7,opt,name=retail_id,json=retailId,proto3" json:"retail_id,omitempty"`
	Cover                string                   `protobuf:"bytes,8,opt,name=cover,proto3" json:"cover,omitempty"`
	StockId              int64                    `protobuf:"varint,9,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	StockType            int32                    `protobuf:"varint,10,opt,name=stock_type,json=stockType,proto3" json:"stock_type,omitempty"`
	IsVip                int32                    `protobuf:"varint,11,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
	IsPoints             int32                    `protobuf:"varint,12,opt,name=is_points,json=isPoints,proto3" json:"is_points,omitempty"`
	MaxPoints            int64                    `protobuf:"varint,13,opt,name=max_points,json=maxPoints,proto3" json:"max_points,omitempty"`
	PriceDot             int32                    `protobuf:"varint,14,opt,name=price_dot,json=priceDot,proto3" json:"price_dot,omitempty"`
	IsShowRest           int32                    `protobuf:"varint,15,opt,name=is_show_rest,json=isShowRest,proto3" json:"is_show_rest,omitempty"`
	SaleTime             int64                    `protobuf:"varint,16,opt,name=sale_time,json=saleTime,proto3" json:"sale_time,omitempty"`
	AfterSale            *CoShopGoodsAfterSale    `protobuf:"bytes,17,opt,name=after_sale,json=afterSale,proto3" json:"after_sale,omitempty"`
	PayLimit             *CoShopGoodsPayLimit     `protobuf:"bytes,18,opt,name=pay_limit,json=payLimit,proto3" json:"pay_limit,omitempty"`
	GoodsData            *CoShopGoodsData         `protobuf:"bytes,19,opt,name=goods_data,json=goodsData,proto3" json:"goods_data,omitempty"`
	GoodsRule            map[int32]*GoodsRuleList `protobuf:"bytes,20,rep,name=goods_rule,json=goodsRule,proto3" json:"goods_rule,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	State                int32                    `protobuf:"varint,21,opt,name=state,proto3" json:"state,omitempty"`
	Coid                 int64                    `protobuf:"varint,25,opt,name=coid,proto3" json:"coid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CoShopGoods) Reset()         { *m = CoShopGoods{} }
func (m *CoShopGoods) String() string { return proto.CompactTextString(m) }
func (*CoShopGoods) ProtoMessage()    {}
func (*CoShopGoods) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{63}
}

func (m *CoShopGoods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoShopGoods.Unmarshal(m, b)
}
func (m *CoShopGoods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoShopGoods.Marshal(b, m, deterministic)
}
func (m *CoShopGoods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoShopGoods.Merge(m, src)
}
func (m *CoShopGoods) XXX_Size() int {
	return xxx_messageInfo_CoShopGoods.Size(m)
}
func (m *CoShopGoods) XXX_DiscardUnknown() {
	xxx_messageInfo_CoShopGoods.DiscardUnknown(m)
}

var xxx_messageInfo_CoShopGoods proto.InternalMessageInfo

func (m *CoShopGoods) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CoShopGoods) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CoShopGoods) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CoShopGoods) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CoShopGoods) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *CoShopGoods) GetSnapshotId() int64 {
	if m != nil {
		return m.SnapshotId
	}
	return 0
}

func (m *CoShopGoods) GetRetailId() int64 {
	if m != nil {
		return m.RetailId
	}
	return 0
}

func (m *CoShopGoods) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *CoShopGoods) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *CoShopGoods) GetStockType() int32 {
	if m != nil {
		return m.StockType
	}
	return 0
}

func (m *CoShopGoods) GetIsVip() int32 {
	if m != nil {
		return m.IsVip
	}
	return 0
}

func (m *CoShopGoods) GetIsPoints() int32 {
	if m != nil {
		return m.IsPoints
	}
	return 0
}

func (m *CoShopGoods) GetMaxPoints() int64 {
	if m != nil {
		return m.MaxPoints
	}
	return 0
}

func (m *CoShopGoods) GetPriceDot() int32 {
	if m != nil {
		return m.PriceDot
	}
	return 0
}

func (m *CoShopGoods) GetIsShowRest() int32 {
	if m != nil {
		return m.IsShowRest
	}
	return 0
}

func (m *CoShopGoods) GetSaleTime() int64 {
	if m != nil {
		return m.SaleTime
	}
	return 0
}

func (m *CoShopGoods) GetAfterSale() *CoShopGoodsAfterSale {
	if m != nil {
		return m.AfterSale
	}
	return nil
}

func (m *CoShopGoods) GetPayLimit() *CoShopGoodsPayLimit {
	if m != nil {
		return m.PayLimit
	}
	return nil
}

func (m *CoShopGoods) GetGoodsData() *CoShopGoodsData {
	if m != nil {
		return m.GoodsData
	}
	return nil
}

func (m *CoShopGoods) GetGoodsRule() map[int32]*GoodsRuleList {
	if m != nil {
		return m.GoodsRule
	}
	return nil
}

func (m *CoShopGoods) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *CoShopGoods) GetCoid() int64 {
	if m != nil {
		return m.Coid
	}
	return 0
}

// 售后服务规则 mysql
type CoShopGoodsAfterSale struct {
	// 实物
	BuyerExchange        bool     `protobuf:"varint,1,opt,name=buyer_exchange,json=buyerExchange,proto3" json:"buyer_exchange,omitempty"`
	BuyerSevenDays       bool     `protobuf:"varint,2,opt,name=buyer_seven_days,json=buyerSevenDays,proto3" json:"buyer_seven_days,omitempty"`
	BuyerSpeedExchange   bool     `protobuf:"varint,3,opt,name=buyer_speed_exchange,json=buyerSpeedExchange,proto3" json:"buyer_speed_exchange,omitempty"`
	BuyerRefund          bool     `protobuf:"varint,4,opt,name=buyer_refund,json=buyerRefund,proto3" json:"buyer_refund,omitempty"`
	BuyerRefundExpire    int32    `protobuf:"varint,5,opt,name=buyer_refund_expire,json=buyerRefundExpire,proto3" json:"buyer_refund_expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoShopGoodsAfterSale) Reset()         { *m = CoShopGoodsAfterSale{} }
func (m *CoShopGoodsAfterSale) String() string { return proto.CompactTextString(m) }
func (*CoShopGoodsAfterSale) ProtoMessage()    {}
func (*CoShopGoodsAfterSale) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{64}
}

func (m *CoShopGoodsAfterSale) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoShopGoodsAfterSale.Unmarshal(m, b)
}
func (m *CoShopGoodsAfterSale) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoShopGoodsAfterSale.Marshal(b, m, deterministic)
}
func (m *CoShopGoodsAfterSale) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoShopGoodsAfterSale.Merge(m, src)
}
func (m *CoShopGoodsAfterSale) XXX_Size() int {
	return xxx_messageInfo_CoShopGoodsAfterSale.Size(m)
}
func (m *CoShopGoodsAfterSale) XXX_DiscardUnknown() {
	xxx_messageInfo_CoShopGoodsAfterSale.DiscardUnknown(m)
}

var xxx_messageInfo_CoShopGoodsAfterSale proto.InternalMessageInfo

func (m *CoShopGoodsAfterSale) GetBuyerExchange() bool {
	if m != nil {
		return m.BuyerExchange
	}
	return false
}

func (m *CoShopGoodsAfterSale) GetBuyerSevenDays() bool {
	if m != nil {
		return m.BuyerSevenDays
	}
	return false
}

func (m *CoShopGoodsAfterSale) GetBuyerSpeedExchange() bool {
	if m != nil {
		return m.BuyerSpeedExchange
	}
	return false
}

func (m *CoShopGoodsAfterSale) GetBuyerRefund() bool {
	if m != nil {
		return m.BuyerRefund
	}
	return false
}

func (m *CoShopGoodsAfterSale) GetBuyerRefundExpire() int32 {
	if m != nil {
		return m.BuyerRefundExpire
	}
	return 0
}

// 商品购买限制规则 mysql
type CoShopGoodsPayLimit struct {
	LimitPayMin          int32                          `protobuf:"varint,1,opt,name=limit_pay_min,json=limitPayMin,proto3" json:"limit_pay_min,omitempty"`
	LimitPayQuota        int32                          `protobuf:"varint,2,opt,name=limit_pay_quota,json=limitPayQuota,proto3" json:"limit_pay_quota,omitempty"`
	LimitPayQuotaNum     int32                          `protobuf:"varint,3,opt,name=limit_pay_quota_num,json=limitPayQuotaNum,proto3" json:"limit_pay_quota_num,omitempty"`
	LimitSpecific        []*CoShopGoodsPayLimitSpecific `protobuf:"bytes,4,rep,name=limit_specific,json=limitSpecific,proto3" json:"limit_specific,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CoShopGoodsPayLimit) Reset()         { *m = CoShopGoodsPayLimit{} }
func (m *CoShopGoodsPayLimit) String() string { return proto.CompactTextString(m) }
func (*CoShopGoodsPayLimit) ProtoMessage()    {}
func (*CoShopGoodsPayLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{65}
}

func (m *CoShopGoodsPayLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoShopGoodsPayLimit.Unmarshal(m, b)
}
func (m *CoShopGoodsPayLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoShopGoodsPayLimit.Marshal(b, m, deterministic)
}
func (m *CoShopGoodsPayLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoShopGoodsPayLimit.Merge(m, src)
}
func (m *CoShopGoodsPayLimit) XXX_Size() int {
	return xxx_messageInfo_CoShopGoodsPayLimit.Size(m)
}
func (m *CoShopGoodsPayLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_CoShopGoodsPayLimit.DiscardUnknown(m)
}

var xxx_messageInfo_CoShopGoodsPayLimit proto.InternalMessageInfo

func (m *CoShopGoodsPayLimit) GetLimitPayMin() int32 {
	if m != nil {
		return m.LimitPayMin
	}
	return 0
}

func (m *CoShopGoodsPayLimit) GetLimitPayQuota() int32 {
	if m != nil {
		return m.LimitPayQuota
	}
	return 0
}

func (m *CoShopGoodsPayLimit) GetLimitPayQuotaNum() int32 {
	if m != nil {
		return m.LimitPayQuotaNum
	}
	return 0
}

func (m *CoShopGoodsPayLimit) GetLimitSpecific() []*CoShopGoodsPayLimitSpecific {
	if m != nil {
		return m.LimitSpecific
	}
	return nil
}

// 指定限制规则
type CoShopGoodsPayLimitSpecific struct {
	BindType             int32    `protobuf:"varint,1,opt,name=bind_type,json=bindType,proto3" json:"bind_type,omitempty"`
	BindId               []int64  `protobuf:"varint,2,rep,packed,name=bind_id,json=bindId,proto3" json:"bind_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoShopGoodsPayLimitSpecific) Reset()         { *m = CoShopGoodsPayLimitSpecific{} }
func (m *CoShopGoodsPayLimitSpecific) String() string { return proto.CompactTextString(m) }
func (*CoShopGoodsPayLimitSpecific) ProtoMessage()    {}
func (*CoShopGoodsPayLimitSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{66}
}

func (m *CoShopGoodsPayLimitSpecific) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoShopGoodsPayLimitSpecific.Unmarshal(m, b)
}
func (m *CoShopGoodsPayLimitSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoShopGoodsPayLimitSpecific.Marshal(b, m, deterministic)
}
func (m *CoShopGoodsPayLimitSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoShopGoodsPayLimitSpecific.Merge(m, src)
}
func (m *CoShopGoodsPayLimitSpecific) XXX_Size() int {
	return xxx_messageInfo_CoShopGoodsPayLimitSpecific.Size(m)
}
func (m *CoShopGoodsPayLimitSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_CoShopGoodsPayLimitSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_CoShopGoodsPayLimitSpecific proto.InternalMessageInfo

func (m *CoShopGoodsPayLimitSpecific) GetBindType() int32 {
	if m != nil {
		return m.BindType
	}
	return 0
}

func (m *CoShopGoodsPayLimitSpecific) GetBindId() []int64 {
	if m != nil {
		return m.BindId
	}
	return nil
}

// 商品详情规则储存到 mysql
type CoShopGoodsData struct {
	Video                string                     `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	Pic                  []string                   `protobuf:"bytes,2,rep,name=pic,proto3" json:"pic,omitempty"`
	Share                string                     `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	SubName              string                     `protobuf:"bytes,4,opt,name=sub_name,json=subName,proto3" json:"sub_name,omitempty"`
	SpecialRules         *ShopGoodsDataSpecialRules `protobuf:"bytes,5,opt,name=special_rules,json=specialRules,proto3" json:"special_rules,omitempty"`
	Word                 []*ShopGoodsDataWords      `protobuf:"bytes,6,rep,name=word,proto3" json:"word,omitempty"`
	Content              string                     `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CoShopGoodsData) Reset()         { *m = CoShopGoodsData{} }
func (m *CoShopGoodsData) String() string { return proto.CompactTextString(m) }
func (*CoShopGoodsData) ProtoMessage()    {}
func (*CoShopGoodsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{67}
}

func (m *CoShopGoodsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoShopGoodsData.Unmarshal(m, b)
}
func (m *CoShopGoodsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoShopGoodsData.Marshal(b, m, deterministic)
}
func (m *CoShopGoodsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoShopGoodsData.Merge(m, src)
}
func (m *CoShopGoodsData) XXX_Size() int {
	return xxx_messageInfo_CoShopGoodsData.Size(m)
}
func (m *CoShopGoodsData) XXX_DiscardUnknown() {
	xxx_messageInfo_CoShopGoodsData.DiscardUnknown(m)
}

var xxx_messageInfo_CoShopGoodsData proto.InternalMessageInfo

func (m *CoShopGoodsData) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *CoShopGoodsData) GetPic() []string {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *CoShopGoodsData) GetShare() string {
	if m != nil {
		return m.Share
	}
	return ""
}

func (m *CoShopGoodsData) GetSubName() string {
	if m != nil {
		return m.SubName
	}
	return ""
}

func (m *CoShopGoodsData) GetSpecialRules() *ShopGoodsDataSpecialRules {
	if m != nil {
		return m.SpecialRules
	}
	return nil
}

func (m *CoShopGoodsData) GetWord() []*ShopGoodsDataWords {
	if m != nil {
		return m.Word
	}
	return nil
}

func (m *CoShopGoodsData) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// 商品留言信息规则 mysql
type ShopGoodsDataWords struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	IsMultiRow           int32    `protobuf:"varint,3,opt,name=is_multi_row,json=isMultiRow,proto3" json:"is_multi_row,omitempty"`
	IsRequired           int32    `protobuf:"varint,4,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	IsSingle             int32    `protobuf:"varint,5,opt,name=is_single,json=isSingle,proto3" json:"is_single,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGoodsDataWords) Reset()         { *m = ShopGoodsDataWords{} }
func (m *ShopGoodsDataWords) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsDataWords) ProtoMessage()    {}
func (*ShopGoodsDataWords) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{68}
}

func (m *ShopGoodsDataWords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsDataWords.Unmarshal(m, b)
}
func (m *ShopGoodsDataWords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsDataWords.Marshal(b, m, deterministic)
}
func (m *ShopGoodsDataWords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsDataWords.Merge(m, src)
}
func (m *ShopGoodsDataWords) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsDataWords.Size(m)
}
func (m *ShopGoodsDataWords) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsDataWords.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsDataWords proto.InternalMessageInfo

func (m *ShopGoodsDataWords) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShopGoodsDataWords) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ShopGoodsDataWords) GetIsMultiRow() int32 {
	if m != nil {
		return m.IsMultiRow
	}
	return 0
}

func (m *ShopGoodsDataWords) GetIsRequired() int32 {
	if m != nil {
		return m.IsRequired
	}
	return 0
}

func (m *ShopGoodsDataWords) GetIsSingle() int32 {
	if m != nil {
		return m.IsSingle
	}
	return 0
}

// 自定义规则
type ShopGoodsDataSpecialRules struct {
	GoodsReal            *ShopGoodsDataSpecialRulesGoodsReal `protobuf:"bytes,1,opt,name=goods_real,json=goodsReal,proto3" json:"goods_real,omitempty"`
	GoodsCake            *ShopGoodsDataSpecialRulesGoodsCake `protobuf:"bytes,2,opt,name=goods_cake,json=goodsCake,proto3" json:"goods_cake,omitempty"`
	GoodsCard            *ShopGoodsDataSpecialRulesGoodsCard `protobuf:"bytes,3,opt,name=goods_card,json=goodsCard,proto3" json:"goods_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ShopGoodsDataSpecialRules) Reset()         { *m = ShopGoodsDataSpecialRules{} }
func (m *ShopGoodsDataSpecialRules) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsDataSpecialRules) ProtoMessage()    {}
func (*ShopGoodsDataSpecialRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{69}
}

func (m *ShopGoodsDataSpecialRules) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsDataSpecialRules.Unmarshal(m, b)
}
func (m *ShopGoodsDataSpecialRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsDataSpecialRules.Marshal(b, m, deterministic)
}
func (m *ShopGoodsDataSpecialRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsDataSpecialRules.Merge(m, src)
}
func (m *ShopGoodsDataSpecialRules) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsDataSpecialRules.Size(m)
}
func (m *ShopGoodsDataSpecialRules) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsDataSpecialRules.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsDataSpecialRules proto.InternalMessageInfo

func (m *ShopGoodsDataSpecialRules) GetGoodsReal() *ShopGoodsDataSpecialRulesGoodsReal {
	if m != nil {
		return m.GoodsReal
	}
	return nil
}

func (m *ShopGoodsDataSpecialRules) GetGoodsCake() *ShopGoodsDataSpecialRulesGoodsCake {
	if m != nil {
		return m.GoodsCake
	}
	return nil
}

func (m *ShopGoodsDataSpecialRules) GetGoodsCard() *ShopGoodsDataSpecialRulesGoodsCard {
	if m != nil {
		return m.GoodsCard
	}
	return nil
}

// 自定义规则 实物商品
type ShopGoodsDataSpecialRulesGoodsReal struct {
	DeliveryType         []int32  `protobuf:"varint,1,rep,packed,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	FreightPrice         int32    `protobuf:"varint,2,opt,name=freight_price,json=freightPrice,proto3" json:"freight_price,omitempty"`
	FreightTpl           int32    `protobuf:"varint,3,opt,name=freight_tpl,json=freightTpl,proto3" json:"freight_tpl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGoodsDataSpecialRulesGoodsReal) Reset()         { *m = ShopGoodsDataSpecialRulesGoodsReal{} }
func (m *ShopGoodsDataSpecialRulesGoodsReal) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsDataSpecialRulesGoodsReal) ProtoMessage()    {}
func (*ShopGoodsDataSpecialRulesGoodsReal) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{70}
}

func (m *ShopGoodsDataSpecialRulesGoodsReal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsReal.Unmarshal(m, b)
}
func (m *ShopGoodsDataSpecialRulesGoodsReal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsReal.Marshal(b, m, deterministic)
}
func (m *ShopGoodsDataSpecialRulesGoodsReal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsReal.Merge(m, src)
}
func (m *ShopGoodsDataSpecialRulesGoodsReal) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsReal.Size(m)
}
func (m *ShopGoodsDataSpecialRulesGoodsReal) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsReal.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsReal proto.InternalMessageInfo

func (m *ShopGoodsDataSpecialRulesGoodsReal) GetDeliveryType() []int32 {
	if m != nil {
		return m.DeliveryType
	}
	return nil
}

func (m *ShopGoodsDataSpecialRulesGoodsReal) GetFreightPrice() int32 {
	if m != nil {
		return m.FreightPrice
	}
	return 0
}

func (m *ShopGoodsDataSpecialRulesGoodsReal) GetFreightTpl() int32 {
	if m != nil {
		return m.FreightTpl
	}
	return 0
}

// 自定义规则 电子卡券规则
type ShopGoodsDataSpecialRulesGoodsCard struct {
	ValidityMode         int32    `protobuf:"varint,1,opt,name=validity_mode,json=validityMode,proto3" json:"validity_mode,omitempty"`
	ValidityType         int32    `protobuf:"varint,2,opt,name=validity_type,json=validityType,proto3" json:"validity_type,omitempty"`
	ValidityDay          int32    `protobuf:"varint,3,opt,name=validity_day,json=validityDay,proto3" json:"validity_day,omitempty"`
	ValidityStartTime    int32    `protobuf:"varint,4,opt,name=validity_start_time,json=validityStartTime,proto3" json:"validity_start_time,omitempty"`
	ValidityEndTime      int32    `protobuf:"varint,5,opt,name=validity_end_time,json=validityEndTime,proto3" json:"validity_end_time,omitempty"`
	IsHolidaysAvailable  int32    `protobuf:"varint,6,opt,name=is_holidays_available,json=isHolidaysAvailable,proto3" json:"is_holidays_available,omitempty"`
	UseNotes             string   `protobuf:"bytes,7,opt,name=use_notes,json=useNotes,proto3" json:"use_notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGoodsDataSpecialRulesGoodsCard) Reset()         { *m = ShopGoodsDataSpecialRulesGoodsCard{} }
func (m *ShopGoodsDataSpecialRulesGoodsCard) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsDataSpecialRulesGoodsCard) ProtoMessage()    {}
func (*ShopGoodsDataSpecialRulesGoodsCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{71}
}

func (m *ShopGoodsDataSpecialRulesGoodsCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCard.Unmarshal(m, b)
}
func (m *ShopGoodsDataSpecialRulesGoodsCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCard.Marshal(b, m, deterministic)
}
func (m *ShopGoodsDataSpecialRulesGoodsCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCard.Merge(m, src)
}
func (m *ShopGoodsDataSpecialRulesGoodsCard) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCard.Size(m)
}
func (m *ShopGoodsDataSpecialRulesGoodsCard) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCard.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCard proto.InternalMessageInfo

func (m *ShopGoodsDataSpecialRulesGoodsCard) GetValidityMode() int32 {
	if m != nil {
		return m.ValidityMode
	}
	return 0
}

func (m *ShopGoodsDataSpecialRulesGoodsCard) GetValidityType() int32 {
	if m != nil {
		return m.ValidityType
	}
	return 0
}

func (m *ShopGoodsDataSpecialRulesGoodsCard) GetValidityDay() int32 {
	if m != nil {
		return m.ValidityDay
	}
	return 0
}

func (m *ShopGoodsDataSpecialRulesGoodsCard) GetValidityStartTime() int32 {
	if m != nil {
		return m.ValidityStartTime
	}
	return 0
}

func (m *ShopGoodsDataSpecialRulesGoodsCard) GetValidityEndTime() int32 {
	if m != nil {
		return m.ValidityEndTime
	}
	return 0
}

func (m *ShopGoodsDataSpecialRulesGoodsCard) GetIsHolidaysAvailable() int32 {
	if m != nil {
		return m.IsHolidaysAvailable
	}
	return 0
}

func (m *ShopGoodsDataSpecialRulesGoodsCard) GetUseNotes() string {
	if m != nil {
		return m.UseNotes
	}
	return ""
}

// 自定义规则 蛋糕烘焙
type ShopGoodsDataSpecialRulesGoodsCake struct {
	AttributeIds         []int64  `protobuf:"varint,1,rep,packed,name=attribute_ids,json=attributeIds,proto3" json:"attribute_ids,omitempty"`
	StockUpTime          int64    `protobuf:"varint,2,opt,name=stock_up_time,json=stockUpTime,proto3" json:"stock_up_time,omitempty"`
	Attribute            []byte   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	DeliveryType         []int32  `protobuf:"varint,4,rep,packed,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopGoodsDataSpecialRulesGoodsCake) Reset()         { *m = ShopGoodsDataSpecialRulesGoodsCake{} }
func (m *ShopGoodsDataSpecialRulesGoodsCake) String() string { return proto.CompactTextString(m) }
func (*ShopGoodsDataSpecialRulesGoodsCake) ProtoMessage()    {}
func (*ShopGoodsDataSpecialRulesGoodsCake) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{72}
}

func (m *ShopGoodsDataSpecialRulesGoodsCake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCake.Unmarshal(m, b)
}
func (m *ShopGoodsDataSpecialRulesGoodsCake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCake.Marshal(b, m, deterministic)
}
func (m *ShopGoodsDataSpecialRulesGoodsCake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCake.Merge(m, src)
}
func (m *ShopGoodsDataSpecialRulesGoodsCake) XXX_Size() int {
	return xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCake.Size(m)
}
func (m *ShopGoodsDataSpecialRulesGoodsCake) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCake.DiscardUnknown(m)
}

var xxx_messageInfo_ShopGoodsDataSpecialRulesGoodsCake proto.InternalMessageInfo

func (m *ShopGoodsDataSpecialRulesGoodsCake) GetAttributeIds() []int64 {
	if m != nil {
		return m.AttributeIds
	}
	return nil
}

func (m *ShopGoodsDataSpecialRulesGoodsCake) GetStockUpTime() int64 {
	if m != nil {
		return m.StockUpTime
	}
	return 0
}

func (m *ShopGoodsDataSpecialRulesGoodsCake) GetAttribute() []byte {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *ShopGoodsDataSpecialRulesGoodsCake) GetDeliveryType() []int32 {
	if m != nil {
		return m.DeliveryType
	}
	return nil
}

//商品或子商品价格库存规则  map=>bytes
type GoodsRuleList struct {
	GoodsPriceName       *GoodsPriceName      `protobuf:"bytes,1,opt,name=goods_price_name,json=goodsPriceName,proto3" json:"goods_price_name,omitempty"`
	GoodsPriceStock      *GoodsPriceStock     `protobuf:"bytes,2,opt,name=goods_price_stock,json=goodsPriceStock,proto3" json:"goods_price_stock,omitempty"`
	GoodsDiscount        []*GoodsDiscountInfo `protobuf:"bytes,3,rep,name=goods_discount,json=goodsDiscount,proto3" json:"goods_discount,omitempty"`
	GoodsInfo            []*GoodsRuleListInfo `protobuf:"bytes,4,rep,name=goods_info,json=goodsInfo,proto3" json:"goods_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GoodsRuleList) Reset()         { *m = GoodsRuleList{} }
func (m *GoodsRuleList) String() string { return proto.CompactTextString(m) }
func (*GoodsRuleList) ProtoMessage()    {}
func (*GoodsRuleList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{73}
}

func (m *GoodsRuleList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsRuleList.Unmarshal(m, b)
}
func (m *GoodsRuleList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsRuleList.Marshal(b, m, deterministic)
}
func (m *GoodsRuleList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsRuleList.Merge(m, src)
}
func (m *GoodsRuleList) XXX_Size() int {
	return xxx_messageInfo_GoodsRuleList.Size(m)
}
func (m *GoodsRuleList) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsRuleList.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsRuleList proto.InternalMessageInfo

func (m *GoodsRuleList) GetGoodsPriceName() *GoodsPriceName {
	if m != nil {
		return m.GoodsPriceName
	}
	return nil
}

func (m *GoodsRuleList) GetGoodsPriceStock() *GoodsPriceStock {
	if m != nil {
		return m.GoodsPriceStock
	}
	return nil
}

func (m *GoodsRuleList) GetGoodsDiscount() []*GoodsDiscountInfo {
	if m != nil {
		return m.GoodsDiscount
	}
	return nil
}

func (m *GoodsRuleList) GetGoodsInfo() []*GoodsRuleListInfo {
	if m != nil {
		return m.GoodsInfo
	}
	return nil
}

// 商品价格规则 名称
type GoodsPriceName struct {
	Price                int32    `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	PriceDot             int32    `protobuf:"varint,2,opt,name=price_dot,json=priceDot,proto3" json:"price_dot,omitempty"`
	PriceCost            int32    `protobuf:"varint,3,opt,name=price_cost,json=priceCost,proto3" json:"price_cost,omitempty"`
	GoodsNo              string   `protobuf:"bytes,4,opt,name=goods_no,json=goodsNo,proto3" json:"goods_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsPriceName) Reset()         { *m = GoodsPriceName{} }
func (m *GoodsPriceName) String() string { return proto.CompactTextString(m) }
func (*GoodsPriceName) ProtoMessage()    {}
func (*GoodsPriceName) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{74}
}

func (m *GoodsPriceName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsPriceName.Unmarshal(m, b)
}
func (m *GoodsPriceName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsPriceName.Marshal(b, m, deterministic)
}
func (m *GoodsPriceName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsPriceName.Merge(m, src)
}
func (m *GoodsPriceName) XXX_Size() int {
	return xxx_messageInfo_GoodsPriceName.Size(m)
}
func (m *GoodsPriceName) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsPriceName.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsPriceName proto.InternalMessageInfo

func (m *GoodsPriceName) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *GoodsPriceName) GetPriceDot() int32 {
	if m != nil {
		return m.PriceDot
	}
	return 0
}

func (m *GoodsPriceName) GetPriceCost() int32 {
	if m != nil {
		return m.PriceCost
	}
	return 0
}

func (m *GoodsPriceName) GetGoodsNo() string {
	if m != nil {
		return m.GoodsNo
	}
	return ""
}

// 商品库存规则 储存至 mongodb
type GoodsPriceStock struct {
	StockId              int64    `protobuf:"varint,1,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	StockNum             int64    `protobuf:"varint,2,opt,name=stock_num,json=stockNum,proto3" json:"stock_num,omitempty"`
	SoldNum              int64    `protobuf:"varint,3,opt,name=sold_num,json=soldNum,proto3" json:"sold_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsPriceStock) Reset()         { *m = GoodsPriceStock{} }
func (m *GoodsPriceStock) String() string { return proto.CompactTextString(m) }
func (*GoodsPriceStock) ProtoMessage()    {}
func (*GoodsPriceStock) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{75}
}

func (m *GoodsPriceStock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsPriceStock.Unmarshal(m, b)
}
func (m *GoodsPriceStock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsPriceStock.Marshal(b, m, deterministic)
}
func (m *GoodsPriceStock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsPriceStock.Merge(m, src)
}
func (m *GoodsPriceStock) XXX_Size() int {
	return xxx_messageInfo_GoodsPriceStock.Size(m)
}
func (m *GoodsPriceStock) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsPriceStock.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsPriceStock proto.InternalMessageInfo

func (m *GoodsPriceStock) GetStockId() int64 {
	if m != nil {
		return m.StockId
	}
	return 0
}

func (m *GoodsPriceStock) GetStockNum() int64 {
	if m != nil {
		return m.StockNum
	}
	return 0
}

func (m *GoodsPriceStock) GetSoldNum() int64 {
	if m != nil {
		return m.SoldNum
	}
	return 0
}

// 会员价设置
type GoodsDiscountInfo struct {
	BindType             int64    `protobuf:"varint,1,opt,name=bind_type,json=bindType,proto3" json:"bind_type,omitempty"`
	DiscountType         int64    `protobuf:"varint,2,opt,name=discount_type,json=discountType,proto3" json:"discount_type,omitempty"`
	DiscountValue        int64    `protobuf:"varint,3,opt,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsDiscountInfo) Reset()         { *m = GoodsDiscountInfo{} }
func (m *GoodsDiscountInfo) String() string { return proto.CompactTextString(m) }
func (*GoodsDiscountInfo) ProtoMessage()    {}
func (*GoodsDiscountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{76}
}

func (m *GoodsDiscountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsDiscountInfo.Unmarshal(m, b)
}
func (m *GoodsDiscountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsDiscountInfo.Marshal(b, m, deterministic)
}
func (m *GoodsDiscountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsDiscountInfo.Merge(m, src)
}
func (m *GoodsDiscountInfo) XXX_Size() int {
	return xxx_messageInfo_GoodsDiscountInfo.Size(m)
}
func (m *GoodsDiscountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsDiscountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsDiscountInfo proto.InternalMessageInfo

func (m *GoodsDiscountInfo) GetBindType() int64 {
	if m != nil {
		return m.BindType
	}
	return 0
}

func (m *GoodsDiscountInfo) GetDiscountType() int64 {
	if m != nil {
		return m.DiscountType
	}
	return 0
}

func (m *GoodsDiscountInfo) GetDiscountValue() int64 {
	if m != nil {
		return m.DiscountValue
	}
	return 0
}

// API 接口 实现
type GoodsRuleListInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 int64    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoodsRuleListInfo) Reset()         { *m = GoodsRuleListInfo{} }
func (m *GoodsRuleListInfo) String() string { return proto.CompactTextString(m) }
func (*GoodsRuleListInfo) ProtoMessage()    {}
func (*GoodsRuleListInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85cf8f0646c68213, []int{77}
}

func (m *GoodsRuleListInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsRuleListInfo.Unmarshal(m, b)
}
func (m *GoodsRuleListInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsRuleListInfo.Marshal(b, m, deterministic)
}
func (m *GoodsRuleListInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsRuleListInfo.Merge(m, src)
}
func (m *GoodsRuleListInfo) XXX_Size() int {
	return xxx_messageInfo_GoodsRuleListInfo.Size(m)
}
func (m *GoodsRuleListInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsRuleListInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsRuleListInfo proto.InternalMessageInfo

func (m *GoodsRuleListInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GoodsRuleListInfo) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GoodsRuleListInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*ResultEmpty)(nil), "serverShop.ResultEmpty")
	proto.RegisterType((*PageInfo)(nil), "serverShop.PageInfo")
	proto.RegisterType((*Result)(nil), "serverShop.Result")
	proto.RegisterMapType((map[string]string)(nil), "serverShop.Result.HeaderEntry")
	proto.RegisterType((*Uid)(nil), "serverShop.Uid")
	proto.RegisterType((*ReqId)(nil), "serverShop.ReqId")
	proto.RegisterType((*ResShopGoods)(nil), "serverShop.ResShopGoods")
	proto.RegisterType((*ReqShopGoods)(nil), "serverShop.ReqShopGoods")
	proto.RegisterType((*BuyLimit)(nil), "serverShop.BuyLimit")
	proto.RegisterType((*GoodsRule)(nil), "serverShop.GoodsRule")
	proto.RegisterType((*GoodsData)(nil), "serverShop.GoodsData")
	proto.RegisterType((*ResGoodsData)(nil), "serverShop.ResGoodsData")
	proto.RegisterType((*Word)(nil), "serverShop.Word")
	proto.RegisterType((*GoodsSpecRule)(nil), "serverShop.GoodsSpecRule")
	proto.RegisterType((*ShopGoods)(nil), "serverShop.ShopGoods")
	proto.RegisterType((*ShopGoodsData)(nil), "serverShop.ShopGoodsData")
	proto.RegisterType((*ShopGoodsRule)(nil), "serverShop.ShopGoodsRule")
	proto.RegisterType((*ShopStock)(nil), "serverShop.ShopStock")
	proto.RegisterType((*ShopStockCard)(nil), "serverShop.ShopStockCard")
	proto.RegisterType((*ShopGroup)(nil), "serverShop.ShopGroup")
	proto.RegisterType((*ReqShopGroup)(nil), "serverShop.ReqShopGroup")
	proto.RegisterType((*ShopCoupon)(nil), "serverShop.ShopCoupon")
	proto.RegisterType((*ResShopCouponList)(nil), "serverShop.ResShopCouponList")
	proto.RegisterType((*ResShopCoupon)(nil), "serverShop.ResShopCoupon")
	proto.RegisterType((*ResShopCoupon_ResShopCouponData)(nil), "serverShop.ResShopCoupon.ResShopCouponData")
	proto.RegisterType((*ReqCouponPage)(nil), "serverShop.ReqCouponPage")
	proto.RegisterType((*ReqCouponPage_ReqShopCoupon)(nil), "serverShop.ReqCouponPage.ReqShopCoupon")
	proto.RegisterType((*ShopCouponData)(nil), "serverShop.ShopCouponData")
	proto.RegisterType((*ShopCouponCard)(nil), "serverShop.ShopCouponCard")
	proto.RegisterType((*ShopGoodsAsset)(nil), "serverShop.ShopGoodsAsset")
	proto.RegisterType((*ReqGoodsGroupCoid)(nil), "serverShop.ReqGoodsGroupCoid")
	proto.RegisterType((*ReqGoodsGroupId)(nil), "serverShop.ReqGoodsGroupId")
	proto.RegisterType((*ResGoodsGroup)(nil), "serverShop.ResGoodsGroup")
	proto.RegisterType((*ReqGoodsGroupObj)(nil), "serverShop.ReqGoodsGroupObj")
	proto.RegisterType((*ResGoodsGroupList)(nil), "serverShop.ResGoodsGroupList")
	proto.RegisterType((*ReqShopGoodsPage)(nil), "serverShop.ReqShopGoodsPage")
	proto.RegisterType((*ResShopGoodsList)(nil), "serverShop.ResShopGoodsList")
	proto.RegisterType((*ResShopGoodsJoinOther)(nil), "serverShop.ResShopGoodsJoinOther")
	proto.RegisterType((*ShopGoodsJoin)(nil), "serverShop.ShopGoodsJoin")
	proto.RegisterType((*ResultCount)(nil), "serverShop.ResultCount")
	proto.RegisterType((*ReqSearchGoods)(nil), "serverShop.ReqSearchGoods")
	proto.RegisterType((*SearchGoods)(nil), "serverShop.SearchGoods")
	proto.RegisterType((*SaveCoShopGoods)(nil), "serverShop.SaveCoShopGoods")
	proto.RegisterType((*ShopGoodsPure)(nil), "serverShop.ShopGoodsPure")
	proto.RegisterType((*ElectronicCoupon)(nil), "serverShop.ElectronicCoupon")
	proto.RegisterType((*GoodsDistributionStock)(nil), "serverShop.GoodsDistributionStock")
	proto.RegisterType((*SkuStock)(nil), "serverShop.SkuStock")
	proto.RegisterType((*ResShopGoodsSave)(nil), "serverShop.ResShopGoodsSave")
	proto.RegisterType((*ResShopGoodsSave_GoodsDataInfo)(nil), "serverShop.ResShopGoodsSave.GoodsDataInfo")
	proto.RegisterType((*ShopGoodsSave)(nil), "serverShop.ShopGoodsSave")
	proto.RegisterType((*ShopGoodsSave_GoodsDataInfo)(nil), "serverShop.ShopGoodsSave.GoodsDataInfo")
	proto.RegisterType((*GoodsStockDisCount)(nil), "serverShop.GoodsStockDisCount")
	proto.RegisterType((*ReqGoodsRule)(nil), "serverShop.ReqGoodsRule")
	proto.RegisterType((*GoodsAsset)(nil), "serverShop.GoodsAsset")
	proto.RegisterType((*GoodsStock)(nil), "serverShop.GoodsStock")
	proto.RegisterType((*GoodsDiscount)(nil), "serverShop.GoodsDiscount")
	proto.RegisterType((*GoodsRuleInfo)(nil), "serverShop.GoodsRuleInfo")
	proto.RegisterType((*IdArray)(nil), "serverShop.IdArray")
	proto.RegisterType((*ReqCoShopGoodsOperate)(nil), "serverShop.ReqCoShopGoodsOperate")
	proto.RegisterType((*MemberPrice)(nil), "serverShop.MemberPrice")
	proto.RegisterType((*DiscountType)(nil), "serverShop.DiscountType")
	proto.RegisterType((*GoodsCount)(nil), "serverShop.GoodsCount")
	proto.RegisterType((*FeatureList)(nil), "serverShop.FeatureList")
	proto.RegisterType((*GoodsNameChange)(nil), "serverShop.GoodsNameChange")
	proto.RegisterType((*ReqFrontSearchInfo)(nil), "serverShop.ReqFrontSearchInfo")
	proto.RegisterType((*ResFrontSearchInfo)(nil), "serverShop.ResFrontSearchInfo")
	proto.RegisterType((*ResFrontGoodsList)(nil), "serverShop.ResFrontGoodsList")
	proto.RegisterType((*Faker)(nil), "serverShop.Faker")
	proto.RegisterType((*CoShopGoods)(nil), "serverShop.CoShopGoods")
	proto.RegisterMapType((map[int32]*GoodsRuleList)(nil), "serverShop.CoShopGoods.GoodsRuleEntry")
	proto.RegisterType((*CoShopGoodsAfterSale)(nil), "serverShop.CoShopGoodsAfterSale")
	proto.RegisterType((*CoShopGoodsPayLimit)(nil), "serverShop.CoShopGoodsPayLimit")
	proto.RegisterType((*CoShopGoodsPayLimitSpecific)(nil), "serverShop.CoShopGoodsPayLimitSpecific")
	proto.RegisterType((*CoShopGoodsData)(nil), "serverShop.CoShopGoodsData")
	proto.RegisterType((*ShopGoodsDataWords)(nil), "serverShop.ShopGoodsDataWords")
	proto.RegisterType((*ShopGoodsDataSpecialRules)(nil), "serverShop.ShopGoodsDataSpecialRules")
	proto.RegisterType((*ShopGoodsDataSpecialRulesGoodsReal)(nil), "serverShop.ShopGoodsDataSpecialRulesGoodsReal")
	proto.RegisterType((*ShopGoodsDataSpecialRulesGoodsCard)(nil), "serverShop.ShopGoodsDataSpecialRulesGoodsCard")
	proto.RegisterType((*ShopGoodsDataSpecialRulesGoodsCake)(nil), "serverShop.ShopGoodsDataSpecialRulesGoodsCake")
	proto.RegisterType((*GoodsRuleList)(nil), "serverShop.GoodsRuleList")
	proto.RegisterType((*GoodsPriceName)(nil), "serverShop.GoodsPriceName")
	proto.RegisterType((*GoodsPriceStock)(nil), "serverShop.GoodsPriceStock")
	proto.RegisterType((*GoodsDiscountInfo)(nil), "serverShop.GoodsDiscountInfo")
	proto.RegisterType((*GoodsRuleListInfo)(nil), "serverShop.GoodsRuleListInfo")
}

func init() { proto.RegisterFile("serverShop_sys.proto", fileDescriptor_85cf8f0646c68213) }

var fileDescriptor_85cf8f0646c68213 = []byte{
	// 4633 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0x4d, 0x8c, 0x24, 0x57,
	0x52, 0x56, 0x56, 0xd6, 0x6f, 0x54, 0xf5, 0x5f, 0x76, 0xcf, 0x74, 0x4d, 0xcd, 0x8c, 0xa7, 0x9d,
	0x66, 0x77, 0x86, 0xf5, 0x7a, 0x6c, 0x1a, 0xc4, 0xda, 0x63, 0x9b, 0xa5, 0xa7, 0xbb, 0x6d, 0xf7,
	0x78, 0x7e, 0xda, 0x59, 0xb6, 0x87, 0x15, 0x5a, 0xa5, 0xb2, 0x2b, 0x5f, 0x77, 0xe7, 0x76, 0x55,
	0x66, 0x75, 0xfe, 0xf4, 0x4c, 0x21, 0x40, 0xda, 0x15, 0x87, 0xe5, 0x02, 0x82, 0x03, 0x07, 0xb4,
	0x27, 0x24, 0x96, 0x0b, 0x12, 0x88, 0x1f, 0x89, 0x13, 0x47, 0xce, 0xdc, 0x40, 0x08, 0xa4, 0x3d,
	0x70, 0xe4, 0xb2, 0x17, 0x0e, 0x08, 0x24, 0x14, 0xf1, 0x5e, 0x66, 0xbe, 0xcc, 0xca, 0xcc, 0xee,
	0x1e, 0x5b, 0xf6, 0xae, 0xe4, 0x53, 0xbf, 0xdf, 0xc8, 0x78, 0xf1, 0x22, 0xbe, 0x17, 0x11, 0xef,
	0x55, 0xc3, 0x5a, 0xc0, 0xfc, 0x33, 0xe6, 0x0f, 0x8f, 0xbd, 0xa9, 0x19, 0xcc, 0x82, 0xbb, 0x53,
	0xdf, 0x0b, 0x3d, 0x0d, 0xd2, 0x56, 0x7d, 0x01, 0xba, 0x06, 0x0b, 0xa2, 0x71, 0xb8, 0x3b, 0x99,
	0x86, 0x33, 0xfd, 0x53, 0x68, 0xef, 0x5b, 0x47, 0x6c, 0xcf, 0x3d, 0xf4, 0x34, 0x0d, 0xea, 0x53,
	0xeb, 0x88, 0xf5, 0x95, 0x0d, 0xe5, 0x4e, 0xc3, 0xa0, 0xb2, 0x36, 0x80, 0x36, 0xfe, 0x1d, 0x3a,
	0xbf, 0xc5, 0xfa, 0x35, 0x6a, 0x4f, 0xea, 0xd8, 0xe7, 0xf9, 0x36, 0xf3, 0x3f, 0x64, 0xb3, 0xbe,
	0xba, 0xa1, 0xdc, 0xe9, 0x18, 0x49, 0x5d, 0xff, 0x7b, 0x05, 0x9a, 0xfc, 0x3b, 0x48, 0x76, 0xe4,
	0xd9, 0x09, 0x59, 0x2c, 0x6b, 0xcb, 0xa0, 0x4e, 0x82, 0x23, 0xa2, 0xd8, 0x31, 0xb0, 0xa8, 0xfd,
	0x2a, 0x34, 0x8f, 0x99, 0x65, 0x33, 0xbf, 0xaf, 0x6e, 0xa8, 0x77, 0xba, 0x9b, 0x2f, 0xdd, 0x4d,
	0x99, 0xbe, 0xcb, 0x29, 0xdd, 0xfd, 0x80, 0x06, 0xec, 0xba, 0xa1, 0x3f, 0x33, 0xc4, 0x68, 0xa4,
	0x7e, 0xe0, 0xd9, 0xb3, 0x7e, 0x7d, 0x43, 0xb9, 0xd3, 0x33, 0xa8, 0x3c, 0x78, 0x0b, 0xba, 0xd2,
	0x50, 0xfc, 0xd8, 0x09, 0x9b, 0xd1, 0xf7, 0x3b, 0x06, 0x16, 0xb5, 0x35, 0x68, 0x9c, 0x59, 0xe3,
	0x88, 0x09, 0x06, 0x78, 0xe5, 0x5e, 0xed, 0x4d, 0x45, 0x7f, 0x15, 0xd4, 0x4f, 0x1c, 0x1b, 0xa7,
	0x44, 0x8e, 0x4d, 0x53, 0x54, 0x03, 0x8b, 0x7c, 0x15, 0x8e, 0x4d, 0x33, 0x54, 0x83, 0xca, 0xfa,
	0x3a, 0x34, 0x0c, 0x76, 0xba, 0x67, 0x6b, 0x8b, 0x50, 0x4b, 0x46, 0xd7, 0x1c, 0x5b, 0xff, 0x4d,
	0xe8, 0x19, 0x2c, 0x40, 0xd6, 0xdf, 0xf7, 0x3c, 0x3b, 0xd0, 0xae, 0x41, 0xfb, 0x08, 0x0b, 0x66,
	0x32, 0xaa, 0x45, 0xf5, 0x3d, 0x5b, 0x5b, 0x87, 0x96, 0x1f, 0x8d, 0x99, 0x99, 0x90, 0x6e, 0x62,
	0x95, 0x77, 0xd8, 0x56, 0x68, 0x61, 0x87, 0xca, 0x3b, 0xb0, 0xba, 0x67, 0xeb, 0x3f, 0xad, 0x21,
	0xf5, 0xd3, 0x94, 0x7a, 0xcc, 0x9a, 0x92, 0xb2, 0x46, 0x5f, 0xf4, 0xbd, 0x68, 0x9a, 0xd2, 0x6d,
	0x51, 0x7d, 0x8f, 0x56, 0xe2, 0x5a, 0x13, 0x26, 0xb6, 0x8c, 0xca, 0x28, 0x90, 0xd0, 0x09, 0xc7,
	0x8c, 0xc4, 0xd8, 0x31, 0x78, 0x05, 0x47, 0x86, 0xb3, 0x29, 0xeb, 0x37, 0xf8, 0xce, 0x61, 0x19,
	0x09, 0x07, 0xa1, 0x37, 0x3a, 0x41, 0xc2, 0x4d, 0x4e, 0x98, 0xea, 0x7b, 0xb6, 0x76, 0x13, 0x80,
	0x77, 0xd1, 0xa4, 0x16, 0x4d, 0xea, 0x50, 0xcb, 0xc7, 0x38, 0x93, 0xba, 0x2d, 0x3f, 0x34, 0x43,
	0x67, 0xc2, 0xfa, 0xed, 0xb8, 0xdb, 0xf2, 0xc3, 0x8f, 0x9d, 0x09, 0x11, 0x66, 0xae, 0xcd, 0x3b,
	0x3b, 0xd4, 0xd9, 0x62, 0xae, 0x4d, 0x5d, 0x6b, 0xd0, 0x08, 0x42, 0x2b, 0x64, 0x7d, 0xa0, 0x76,
	0x5e, 0xd1, 0x7e, 0x05, 0x80, 0x0b, 0x15, 0x05, 0xd6, 0xef, 0x6e, 0x28, 0x77, 0xba, 0x9b, 0x57,
	0x64, 0xad, 0x21, 0xe9, 0x18, 0xd1, 0x98, 0x19, 0x9d, 0xa3, 0xb8, 0x98, 0xce, 0x42, 0x69, 0xf6,
	0x7b, 0x25, 0xb3, 0x76, 0xac, 0xd0, 0x12, 0xb3, 0xb0, 0xa8, 0xff, 0x93, 0x02, 0xed, 0xfb, 0xd1,
	0xec, 0xa1, 0x33, 0x71, 0x42, 0xed, 0x0a, 0x34, 0x9d, 0xc0, 0x3c, 0x73, 0xa6, 0x42, 0xa5, 0x1b,
	0x4e, 0xf0, 0xa9, 0x33, 0xd5, 0xae, 0x43, 0xc7, 0x09, 0xcc, 0xa9, 0xe7, 0xb8, 0x61, 0x10, 0xdb,
	0x8a, 0x13, 0xec, 0x53, 0x1d, 0x17, 0x3f, 0xb1, 0x9e, 0xc7, 0xbd, 0x2a, 0x5f, 0xfc, 0xc4, 0x7a,
	0x2e, 0xba, 0x51, 0xaa, 0xd6, 0x98, 0x99, 0x13, 0xc7, 0xa5, 0x2d, 0x68, 0x18, 0x2d, 0xac, 0x3f,
	0x72, 0xdc, 0xb4, 0xcb, 0x7a, 0x2e, 0x36, 0x82, 0x77, 0x59, 0xcf, 0x51, 0x2e, 0xa7, 0x91, 0x17,
	0x5a, 0xb4, 0x11, 0x0d, 0x83, 0x57, 0x90, 0x0f, 0x2a, 0x98, 0x6e, 0x34, 0x11, 0xbb, 0xd0, 0xa6,
	0x86, 0xc7, 0xd1, 0x44, 0xff, 0xfd, 0x1a, 0x74, 0x12, 0xb9, 0x90, 0xc5, 0x3b, 0xa3, 0xa0, 0xaf,
	0x6c, 0xa8, 0xa8, 0x0a, 0x58, 0xd6, 0x5e, 0x83, 0x3a, 0x09, 0xb4, 0x46, 0x66, 0x78, 0x6d, 0x4e,
	0x34, 0xc3, 0x29, 0x1b, 0x91, 0x50, 0x69, 0x18, 0xed, 0xcd, 0x94, 0x8d, 0x02, 0xa1, 0x4e, 0xbc,
	0x92, 0xd1, 0x92, 0x7a, 0x56, 0x4b, 0xae, 0x03, 0xd7, 0x09, 0x62, 0xaf, 0x41, 0x7d, 0x7c, 0xec,
	0xe3, 0x68, 0x82, 0xd4, 0xa6, 0xbe, 0x33, 0x62, 0xf1, 0x8a, 0xa8, 0x82, 0x53, 0xa8, 0x60, 0xda,
	0x5e, 0x18, 0xaf, 0x88, 0x1a, 0x76, 0xbc, 0x10, 0x25, 0xcb, 0x3b, 0x47, 0x5e, 0x10, 0xc6, 0x6a,
	0x45, 0x2d, 0xdb, 0x5e, 0x10, 0xa6, 0xa6, 0xe7, 0x7a, 0xa4, 0x56, 0x1d, 0x61, 0x7a, 0x8f, 0x3d,
	0xfd, 0x8f, 0x15, 0x21, 0x0b, 0xdc, 0x62, 0x34, 0xf9, 0xa9, 0x33, 0x12, 0xa2, 0xc0, 0x22, 0xa1,
	0x84, 0x63, 0x33, 0x2f, 0x41, 0x09, 0xac, 0xd0, 0x82, 0x8f, 0x2d, 0x9f, 0x25, 0x0b, 0xc6, 0x0a,
	0x4a, 0xf2, 0x99, 0xe7, 0xdb, 0x31, 0x0c, 0x61, 0x99, 0x84, 0x10, 0x1d, 0x98, 0x64, 0x6c, 0x0d,
	0xfe, 0xe9, 0x20, 0x3a, 0x78, 0x8c, 0xf6, 0xd6, 0x87, 0xd6, 0xc8, 0x73, 0x43, 0xe6, 0x86, 0xb4,
	0xd2, 0x8e, 0x11, 0x57, 0xf5, 0x3f, 0x57, 0x08, 0x3b, 0x52, 0xbe, 0x72, 0xd8, 0x12, 0xf3, 0x29,
	0xa0, 0x33, 0xc3, 0xa7, 0x5a, 0xc8, 0x67, 0xbd, 0x88, 0x4f, 0xce, 0xcf, 0x3c, 0x9f, 0xcd, 0x52,
	0x3e, 0x5b, 0x59, 0x3e, 0xff, 0x40, 0x81, 0xfa, 0x53, 0x9c, 0x1d, 0xc3, 0x89, 0x22, 0xc1, 0x49,
	0x0c, 0x1c, 0x35, 0x09, 0x38, 0x36, 0xa0, 0xe7, 0x04, 0xe6, 0x24, 0x1a, 0x87, 0x8e, 0xe9, 0x7b,
	0xcf, 0x84, 0x0d, 0x80, 0x13, 0x3c, 0xc2, 0x26, 0xc3, 0x7b, 0xa6, 0xdd, 0x82, 0xae, 0x13, 0x98,
	0x3e, 0x3b, 0x8d, 0x1c, 0x9f, 0xd9, 0xc2, 0x0e, 0xc0, 0x09, 0x0c, 0xd1, 0x22, 0x2c, 0x2c, 0x70,
	0xdc, 0xa3, 0x71, 0x0c, 0x4a, 0x6d, 0x27, 0x18, 0x52, 0x5d, 0x7f, 0x1b, 0x16, 0x32, 0xfa, 0x59,
	0xc8, 0xd8, 0x55, 0x68, 0x12, 0xd6, 0x07, 0xa4, 0xde, 0x1d, 0x43, 0xd4, 0xf4, 0xff, 0x6c, 0x42,
	0x27, 0x05, 0xd4, 0xbc, 0xc8, 0x6f, 0x02, 0x8c, 0x7c, 0x66, 0x85, 0xcc, 0x36, 0xad, 0x50, 0x2c,
	0xaa, 0x23, 0x5a, 0xb6, 0x48, 0x03, 0xa3, 0xa9, 0x1d, 0x77, 0x0b, 0xdb, 0x16, 0x2d, 0x5b, 0x61,
	0x02, 0xcf, 0xf5, 0x12, 0x78, 0x6e, 0x14, 0xc3, 0x73, 0xb3, 0x08, 0x9e, 0x5b, 0x45, 0xf0, 0xdc,
	0x96, 0xa4, 0xbc, 0x06, 0x8d, 0x91, 0x77, 0xc6, 0x7c, 0xa1, 0xeb, 0xbc, 0x92, 0x31, 0x47, 0xa8,
	0x02, 0xed, 0x6e, 0x1e, 0xb4, 0x33, 0xd6, 0xda, 0xcb, 0x59, 0x6b, 0x0a, 0x84, 0x0b, 0xa5, 0x40,
	0xb8, 0x58, 0x09, 0x84, 0x4b, 0x44, 0x51, 0x02, 0xc2, 0x04, 0x00, 0x96, 0x4b, 0x01, 0x60, 0xa5,
	0x12, 0x00, 0xb4, 0x2a, 0x00, 0x58, 0xcd, 0x00, 0x40, 0x06, 0x75, 0xd7, 0xca, 0x51, 0xf7, 0x4a,
	0x09, 0xea, 0x5e, 0x2d, 0x45, 0xdd, 0x75, 0x2e, 0xa8, 0x18, 0x75, 0x73, 0x47, 0x5f, 0x9f, 0x2f,
	0xba, 0xf8, 0xe8, 0xbb, 0xc6, 0xb7, 0x67, 0xee, 0xe8, 0x1b, 0xc8, 0x47, 0x5f, 0x8c, 0xd1, 0xd7,
	0xe7, 0x31, 0x3a, 0xd1, 0x62, 0x09, 0xa3, 0x5f, 0x83, 0x3a, 0x9d, 0x76, 0x37, 0xe8, 0xb4, 0x2b,
	0x1e, 0x4e, 0x27, 0x1e, 0x0d, 0xd3, 0x5e, 0x85, 0x06, 0x29, 0x63, 0xff, 0xe6, 0xfc, 0xe9, 0x48,
	0xe3, 0xb1, 0xd3, 0xe0, 0x63, 0x70, 0x30, 0xe9, 0x43, 0xff, 0xa5, 0xe2, 0xc1, 0x43, 0xec, 0x34,
	0xf8, 0x18, 0xfd, 0xc7, 0x0a, 0x2c, 0x64, 0xbe, 0xf8, 0xb3, 0x8a, 0x6e, 0x3f, 0xa9, 0x49, 0x8c,
	0x12, 0x9a, 0x7c, 0xbe, 0x98, 0x20, 0x3b, 0x84, 0xf5, 0xac, 0x43, 0x28, 0xdb, 0x6a, 0xa3, 0xe2,
	0xe8, 0x6c, 0xe6, 0x8c, 0xf1, 0x3a, 0x74, 0xac, 0x51, 0x68, 0x92, 0x56, 0xd1, 0x72, 0x54, 0xa3,
	0x6d, 0x8d, 0xc2, 0x21, 0xd6, 0xd1, 0x99, 0xc4, 0x4e, 0xe6, 0xda, 0x84, 0x16, 0xaa, 0xd1, 0xb4,
	0x46, 0xe1, 0xae, 0x6b, 0xa7, 0xf6, 0xd6, 0x91, 0xed, 0x2d, 0x6b, 0x52, 0x50, 0x65, 0x52, 0xdd,
	0xac, 0x49, 0x25, 0xee, 0x40, 0x4f, 0x76, 0x07, 0x34, 0xa8, 0x07, 0x9e, 0x1f, 0x12, 0x4c, 0xa8,
	0x06, 0x95, 0xf5, 0x7f, 0x55, 0x38, 0xe4, 0x92, 0x82, 0x7c, 0x01, 0x90, 0x5b, 0xe4, 0xcc, 0x2e,
	0x83, 0x6a, 0x25, 0x7e, 0x2c, 0x16, 0x13, 0xf4, 0x6d, 0x65, 0xd1, 0xd7, 0xf5, 0x42, 0x16, 0x90,
	0xe8, 0x3a, 0x06, 0xaf, 0xa0, 0x10, 0xac, 0x28, 0xf4, 0x68, 0x2f, 0x3a, 0x7c, 0x9f, 0xb0, 0x8e,
	0x4e, 0xd6, 0x73, 0xae, 0x3c, 0xb4, 0xb2, 0x6d, 0xcb, 0x9f, 0x8b, 0x0f, 0x32, 0x7b, 0x5c, 0xcb,
	0xee, 0x31, 0xb2, 0x6e, 0xf9, 0x76, 0xec, 0x9d, 0x63, 0x99, 0x07, 0x66, 0x41, 0x20, 0x74, 0x9d,
	0xca, 0x29, 0x30, 0x34, 0x24, 0x60, 0xd0, 0xbf, 0x2f, 0x84, 0x4a, 0x26, 0xfa, 0xc5, 0x08, 0x55,
	0x72, 0x6f, 0xa8, 0x2c, 0x3c, 0x98, 0xd3, 0x2f, 0x99, 0x0d, 0xf4, 0x26, 0xb8, 0x92, 0x8e, 0xbc,
	0x48, 0xb8, 0x59, 0x0d, 0x83, 0xfb, 0xfe, 0xdb, 0xd8, 0xa2, 0xff, 0x5f, 0x03, 0x00, 0x99, 0xdc,
	0xf6, 0xa2, 0xa9, 0xe7, 0x7e, 0x49, 0x1a, 0x58, 0x74, 0xda, 0x5f, 0x85, 0xa6, 0xcf, 0x26, 0x96,
	0x7f, 0x22, 0xb4, 0x50, 0xd4, 0x34, 0x1d, 0x16, 0xa2, 0x80, 0x99, 0x5c, 0x73, 0x4e, 0xc3, 0x99,
	0x30, 0xe5, 0x6e, 0x14, 0x30, 0x52, 0xb5, 0x8f, 0xc2, 0x19, 0x6a, 0x56, 0x14, 0x30, 0x9b, 0xba,
	0x85, 0x56, 0x62, 0x3d, 0xed, 0xe2, 0xe7, 0x3c, 0x37, 0x69, 0xec, 0xa2, 0x53, 0xfe, 0x65, 0xe8,
	0x45, 0xe8, 0x56, 0x99, 0xd6, 0x84, 0x84, 0x85, 0x46, 0xad, 0x20, 0x61, 0xc7, 0x3d, 0xda, 0xa2,
	0xa6, 0x78, 0xf6, 0x04, 0x23, 0xf9, 0x5e, 0x32, 0xfb, 0x11, 0x06, 0xf3, 0xeb, 0x80, 0x45, 0xd3,
	0xb6, 0x66, 0xc2, 0x0f, 0x68, 0x46, 0x01, 0xdb, 0xb1, 0x66, 0x28, 0x23, 0x27, 0x30, 0xd1, 0x03,
	0x19, 0x5b, 0x33, 0xe1, 0x09, 0x74, 0x9c, 0xe0, 0x09, 0x6f, 0x88, 0xfd, 0x84, 0xe8, 0x60, 0xec,
	0x8c, 0xc8, 0x13, 0xe0, 0x7e, 0x02, 0xd5, 0x85, 0x33, 0x88, 0xb0, 0x6e, 0x1d, 0x8c, 0x63, 0x77,
	0x00, 0x9c, 0x60, 0x28, 0x5a, 0xb4, 0x97, 0x68, 0xc0, 0xb1, 0xe5, 0xda, 0x66, 0xc0, 0xc6, 0xc2,
	0x2b, 0xe8, 0x38, 0xc1, 0x07, 0x96, 0x6b, 0x0f, 0xd9, 0x58, 0xbb, 0x03, 0xcb, 0x4e, 0x60, 0xb2,
	0xe7, 0x53, 0xc7, 0x67, 0xa6, 0xeb, 0x85, 0x08, 0x72, 0xdc, 0x39, 0x58, 0x74, 0x82, 0x5d, 0x6a,
	0x7e, 0x4c, 0xad, 0xda, 0x37, 0x41, 0xcb, 0x0c, 0xc3, 0x95, 0x04, 0xe4, 0x2b, 0x34, 0x8c, 0x65,
	0x26, 0x8d, 0xdc, 0xb1, 0x66, 0xe4, 0xc0, 0x8c, 0x31, 0x0c, 0xe4, 0x82, 0xe4, 0x6e, 0x43, 0x87,
	0x5a, 0x62, 0x87, 0x89, 0x77, 0x23, 0x2e, 0x70, 0xcf, 0xa1, 0x4d, 0x0d, 0xf3, 0x7e, 0xc0, 0xd5,
	0x2a, 0x3f, 0x60, 0xbd, 0xc4, 0x0f, 0xe8, 0xcb, 0x7e, 0xc0, 0xdb, 0xd0, 0x1d, 0x91, 0xf6, 0xf2,
	0x68, 0xf6, 0x1a, 0x1d, 0xc1, 0x83, 0xfc, 0x11, 0xcc, 0x15, 0x9c, 0x0e, 0x78, 0x18, 0x25, 0x65,
	0xfd, 0x37, 0x60, 0x45, 0x24, 0x29, 0xf8, 0x80, 0x87, 0x4e, 0x10, 0xa2, 0xab, 0x30, 0x76, 0x82,
	0x90, 0xc2, 0xa0, 0x9c, 0xab, 0x90, 0x19, 0x6c, 0xd0, 0x30, 0xee, 0x6e, 0xa2, 0xc6, 0x70, 0xfb,
	0xe0, 0x15, 0xfd, 0xa7, 0x2d, 0x58, 0xc8, 0x8c, 0xfe, 0xca, 0xb8, 0xbe, 0x32, 0xae, 0x9f, 0x3b,
	0xe3, 0x7a, 0x58, 0x64, 0x5c, 0xaf, 0x96, 0x5a, 0x44, 0xb6, 0x96, 0xb7, 0xb6, 0xc1, 0x7f, 0x28,
	0x39, 0x73, 0x2b, 0x74, 0x7f, 0xaf, 0x43, 0x07, 0x77, 0x9b, 0x4e, 0x29, 0xe1, 0x04, 0xa3, 0x66,
	0x24, 0x59, 0x44, 0xec, 0x24, 0xcf, 0x9f, 0xbb, 0x07, 0xa8, 0x1a, 0xe4, 0x9d, 0xbe, 0x01, 0x6b,
	0x5c, 0x30, 0x07, 0xcc, 0x65, 0x87, 0x4e, 0x68, 0x4e, 0xd8, 0xe4, 0x80, 0xf9, 0xc2, 0x63, 0xd0,
	0xa8, 0xef, 0x3e, 0xef, 0x7a, 0x44, 0x3d, 0xda, 0x06, 0x74, 0x6d, 0x16, 0x8c, 0x7c, 0x67, 0x1a,
	0x3a, 0x9e, 0x2b, 0x4e, 0x4e, 0xb9, 0x09, 0x77, 0x8e, 0xd3, 0x1c, 0xb3, 0x33, 0x36, 0x8e, 0x29,
	0x72, 0x5b, 0x5a, 0xa6, 0x9e, 0x87, 0xd8, 0xc1, 0xe9, 0xe9, 0xff, 0xa2, 0xa0, 0xcd, 0x9f, 0xf2,
	0xb5, 0xed, 0x5b, 0x47, 0x4c, 0xbb, 0x23, 0xa5, 0x93, 0xbb, 0x9b, 0x6b, 0xb2, 0xe0, 0xe2, 0x94,
	0xb3, 0x48, 0x32, 0xbf, 0x05, 0xaa, 0xcf, 0x4e, 0x69, 0xbd, 0xdd, 0xcd, 0xdb, 0x59, 0x09, 0x4b,
	0x14, 0xef, 0x0a, 0xaf, 0x42, 0x20, 0x10, 0xce, 0x19, 0x58, 0xf4, 0x55, 0x09, 0x69, 0x8a, 0xa2,
	0xfe, 0x64, 0x7f, 0x6b, 0xf2, 0xfe, 0xc6, 0x88, 0xa1, 0x66, 0x11, 0x23, 0x8f, 0x2c, 0xfa, 0xbf,
	0x29, 0xb0, 0x78, 0xb9, 0x6d, 0x53, 0xd1, 0xf7, 0xfe, 0x6c, 0xdb, 0x86, 0x24, 0x3e, 0xdf, 0x6d,
	0x43, 0x8a, 0xf3, 0xdb, 0xf6, 0x27, 0x99, 0xc5, 0x15, 0x3a, 0xab, 0x05, 0x99, 0xef, 0x38, 0x3f,
	0xae, 0xa6, 0xf9, 0xf1, 0xac, 0xf5, 0xd5, 0xab, 0xac, 0xaf, 0x51, 0x62, 0x7d, 0x4d, 0xd9, 0x93,
	0xfd, 0x67, 0xc1, 0x18, 0xc9, 0x70, 0x2b, 0x08, 0x58, 0xf8, 0xc5, 0x85, 0x60, 0x3a, 0x2c, 0xa4,
	0x99, 0xe5, 0x34, 0x0e, 0xeb, 0x26, 0x59, 0xe4, 0xf3, 0x62, 0x31, 0x5c, 0x92, 0x35, 0x66, 0x81,
	0x88, 0xc3, 0x78, 0x45, 0xff, 0x08, 0x11, 0xe0, 0x94, 0x16, 0x44, 0x8e, 0xf1, 0x36, 0x4a, 0xf2,
	0xe2, 0x56, 0x52, 0x74, 0x03, 0xf1, 0x21, 0x2c, 0x65, 0x48, 0xee, 0x5d, 0x86, 0x20, 0x97, 0x67,
	0x2d, 0xb9, 0xb5, 0xd8, 0xa7, 0x53, 0x3b, 0x25, 0xa6, 0xfd, 0x62, 0xc6, 0x19, 0x28, 0xc9, 0x03,
	0x54, 0x39, 0x02, 0x0c, 0x96, 0x33, 0xec, 0x3d, 0x39, 0xf8, 0xde, 0x25, 0xf8, 0xbb, 0x2d, 0xc3,
	0x42, 0xc9, 0xd7, 0x71, 0x84, 0xfe, 0x94, 0xa0, 0x35, 0xfd, 0x0c, 0x79, 0x32, 0xdf, 0xcc, 0x30,
	0xdf, 0xcf, 0xa1, 0xca, 0x65, 0xf8, 0x4f, 0xd4, 0xf0, 0x92, 0xb0, 0x76, 0x0e, 0xff, 0xa4, 0x4c,
	0xc4, 0xff, 0x10, 0x3f, 0x93, 0x5e, 0x17, 0x11, 0xfb, 0xe7, 0xc9, 0x9e, 0x66, 0x57, 0xf1, 0x1e,
	0xc0, 0x15, 0x99, 0xe8, 0x03, 0xcf, 0x71, 0x9f, 0x84, 0xc7, 0xcc, 0xa7, 0xf4, 0x0e, 0x01, 0x95,
	0x52, 0xc5, 0x18, 0x1f, 0x93, 0xf8, 0x83, 0xb5, 0x8a, 0x4c, 0x13, 0x92, 0xe6, 0xac, 0xe8, 0xef,
	0x48, 0x69, 0x13, 0x6c, 0xbe, 0xd4, 0xc7, 0xf4, 0x57, 0xe2, 0xbb, 0x49, 0x0a, 0xd0, 0xd2, 0x75,
	0x71, 0x93, 0x17, 0xeb, 0x0a, 0x61, 0x11, 0xf7, 0x84, 0x59, 0xfe, 0xe8, 0x98, 0x03, 0xec, 0xc5,
	0x77, 0xe4, 0x4d, 0xe8, 0x06, 0x34, 0xd1, 0x74, 0xdc, 0x43, 0x4f, 0xec, 0xcc, 0x7a, 0x86, 0xa7,
	0x94, 0xae, 0x01, 0x7c, 0x2c, 0xce, 0xd7, 0xff, 0xa8, 0x06, 0x5d, 0xf9, 0x9b, 0x72, 0x02, 0x57,
	0x29, 0x4e, 0xe0, 0xd6, 0x0a, 0x12, 0xe2, 0xf2, 0x59, 0x93, 0xcd, 0xbc, 0xd6, 0xf3, 0x99, 0xd7,
	0x5b, 0xd0, 0xe5, 0x39, 0x18, 0x9e, 0xd1, 0xe1, 0x7e, 0x2d, 0x4f, 0xcb, 0xf0, 0x9c, 0x4e, 0x92,
	0x14, 0x65, 0xae, 0x2d, 0xb0, 0x93, 0x27, 0x45, 0x77, 0xdd, 0x3c, 0x1c, 0xb7, 0xaa, 0xe0, 0xb8,
	0x5d, 0x02, 0xc7, 0x9d, 0xdc, 0x61, 0x49, 0xe0, 0x03, 0x12, 0xf8, 0xfc, 0xa5, 0x02, 0x4b, 0x43,
	0xeb, 0x8c, 0x6d, 0x7b, 0x69, 0xea, 0xfc, 0x35, 0xa8, 0x93, 0x68, 0x95, 0x8a, 0x54, 0xe3, 0x7e,
	0xe4, 0x33, 0x83, 0x86, 0xe5, 0xee, 0xf0, 0x6a, 0x2f, 0x74, 0x87, 0xa7, 0x5e, 0xf0, 0x0e, 0xef,
	0xbf, 0xeb, 0x92, 0x72, 0x22, 0x0f, 0x5f, 0xe5, 0xf9, 0xbf, 0xca, 0xf3, 0x7f, 0xbe, 0x79, 0xfe,
	0xc2, 0x6c, 0xbd, 0xfe, 0x57, 0x35, 0x58, 0xde, 0x1d, 0xb3, 0x51, 0xe8, 0x7b, 0xae, 0x33, 0x12,
	0x7e, 0xea, 0x5d, 0x58, 0x3d, 0xb3, 0xc6, 0x8e, 0xed, 0x84, 0x33, 0x53, 0xb2, 0x54, 0xae, 0x8c,
	0x2b, 0x71, 0xd7, 0x30, 0xb1, 0xd8, 0x6f, 0x40, 0xd2, 0x68, 0x26, 0xa6, 0xcb, 0xcf, 0xee, 0xa5,
	0xb8, 0x63, 0x57, 0x98, 0xf0, 0x26, 0x5c, 0xc1, 0xe8, 0xcd, 0x1b, 0x3b, 0x18, 0x6c, 0x99, 0xd6,
	0x99, 0xe5, 0x8c, 0x29, 0xd0, 0xe3, 0x3a, 0xbb, 0xea, 0x04, 0x1f, 0x88, 0xbe, 0xad, 0xb8, 0x0b,
	0xe9, 0x63, 0x48, 0x18, 0x4d, 0xa7, 0x9e, 0x1f, 0x9a, 0x06, 0x3b, 0x8c, 0xdc, 0xf8, 0x0a, 0x6e,
	0xc9, 0x09, 0x86, 0xbc, 0x9d, 0x37, 0x6b, 0xaf, 0xc3, 0x9a, 0x13, 0x98, 0x63, 0xcf, 0x3d, 0x22,
	0x36, 0xe2, 0x59, 0x02, 0xa3, 0x56, 0x9c, 0xe0, 0xa1, 0xe7, 0x1e, 0x21, 0x27, 0x62, 0x1a, 0x2e,
	0xd6, 0xa7, 0xa9, 0x14, 0xaf, 0xda, 0x11, 0xe3, 0xec, 0x73, 0xb7, 0x69, 0x85, 0x77, 0x3d, 0xe1,
	0x3d, 0x38, 0x4d, 0xff, 0x0b, 0x05, 0xae, 0x72, 0x1b, 0x76, 0x82, 0xd0, 0x77, 0x0e, 0x22, 0xf4,
	0x6c, 0x8b, 0x13, 0xc5, 0x45, 0xde, 0x69, 0x46, 0x99, 0xd5, 0x9c, 0x32, 0xe3, 0x8e, 0x7b, 0x63,
	0x9b, 0xfa, 0xe2, 0xab, 0x69, 0x6f, 0x6c, 0x63, 0xd7, 0x2f, 0x41, 0x27, 0x38, 0x89, 0x78, 0x0e,
	0xa0, 0xdf, 0xa0, 0x13, 0x2f, 0x73, 0x9a, 0x0c, 0x4f, 0x22, 0x7e, 0x9d, 0xd1, 0x0e, 0x44, 0x49,
	0xff, 0x0e, 0xb4, 0xe3, 0x56, 0x34, 0x13, 0x9c, 0x9e, 0xb0, 0xd7, 0x08, 0x4e, 0xa2, 0xbc, 0xa7,
	0x58, 0xab, 0xe0, 0x46, 0xcd, 0x70, 0xa3, 0xff, 0xa8, 0x9e, 0x75, 0x0b, 0x10, 0x6a, 0x2f, 0x8b,
	0xaf, 0xef, 0x16, 0xe0, 0xeb, 0x4b, 0xf3, 0x57, 0xfa, 0xc8, 0xcd, 0x8e, 0xc3, 0xf3, 0xa2, 0x32,
	0xd0, 0xee, 0x15, 0x00, 0xed, 0x37, 0x0a, 0x22, 0xe0, 0x84, 0xbf, 0x14, 0x79, 0xe9, 0xd4, 0x4d,
	0xd1, 0x57, 0x7b, 0x00, 0x4b, 0x82, 0x14, 0xaa, 0x19, 0x49, 0xb8, 0x4e, 0xf4, 0xf4, 0x79, 0xe0,
	0xce, 0x6f, 0xba, 0xc1, 0xdd, 0xf1, 0x1d, 0x87, 0x73, 0x3a, 0xf8, 0x41, 0x4d, 0xdc, 0xf5, 0xc6,
	0x1f, 0x4a, 0x2f, 0xef, 0x95, 0xcf, 0x7a, 0x79, 0xdf, 0xf9, 0x0c, 0x97, 0xf7, 0xb4, 0xd5, 0x88,
	0x26, 0xd2, 0xa1, 0x4b, 0xf0, 0x42, 0x56, 0xc9, 0x2f, 0xc0, 0x83, 0x63, 0xef, 0x99, 0xe9, 0xb3,
	0xe4, 0xa9, 0x02, 0x65, 0x5d, 0xbc, 0x67, 0x06, 0x0b, 0x42, 0xed, 0x55, 0x58, 0x61, 0x09, 0x4e,
	0x98, 0x3c, 0x79, 0x20, 0x00, 0x7e, 0x99, 0xe5, 0x00, 0x44, 0xff, 0x1f, 0x55, 0x3a, 0xce, 0xbe,
	0x04, 0xdd, 0x78, 0xaf, 0x40, 0x37, 0x6e, 0x17, 0x7e, 0xb3, 0x52, 0x31, 0x06, 0x7f, 0x53, 0xbe,
	0x99, 0x2f, 0xf4, 0x12, 0xe3, 0x17, 0x92, 0xcd, 0x44, 0xfb, 0x5d, 0x96, 0x39, 0x7a, 0xea, 0xf9,
	0xf6, 0x97, 0xb8, 0xbd, 0x7b, 0x65, 0xdb, 0xdb, 0xdd, 0xbc, 0x21, 0xb3, 0x99, 0x3f, 0x2b, 0x0a,
	0x36, 0xff, 0x6f, 0x15, 0xd0, 0xe6, 0xb7, 0xe7, 0x42, 0xe0, 0xf8, 0xeb, 0xb1, 0x21, 0x52, 0x70,
	0x4b, 0xce, 0xbd, 0x5a, 0x18, 0x22, 0xa5, 0xae, 0xd7, 0x42, 0xb2, 0xeb, 0x14, 0x9a, 0x7c, 0x2b,
	0xbe, 0x59, 0xb1, 0x30, 0x2c, 0x17, 0x66, 0x7c, 0x75, 0x4e, 0x73, 0x28, 0x68, 0x17, 0x37, 0x2e,
	0x54, 0xd6, 0xff, 0x97, 0xdf, 0x0c, 0x95, 0x5f, 0xaa, 0xa6, 0x08, 0x5a, 0x93, 0x11, 0x34, 0xf9,
	0x20, 0xc7, 0x0d, 0xb5, 0xe4, 0x83, 0x1c, 0x2b, 0xf8, 0x07, 0x39, 0x22, 0xef, 0xc1, 0x6a, 0x02,
	0x3a, 0x14, 0x3d, 0xf0, 0xf5, 0xd6, 0x4b, 0x9e, 0x36, 0xed, 0x88, 0x51, 0xc6, 0xca, 0x91, 0x5c,
	0xa5, 0x45, 0x6f, 0x65, 0xc4, 0x46, 0x76, 0xd6, 0x28, 0x21, 0x43, 0x19, 0x02, 0xd4, 0xf2, 0x54,
	0x6e, 0x14, 0x43, 0x98, 0x00, 0x52, 0x36, 0xa3, 0xe2, 0x4d, 0xe0, 0x8b, 0x9e, 0x18, 0xff, 0xae,
	0x88, 0x2f, 0x14, 0x1f, 0x95, 0x15, 0xb7, 0x8e, 0x89, 0x3b, 0xa6, 0x96, 0xba, 0x63, 0xf5, 0x4a,
	0x77, 0xac, 0x51, 0xe5, 0x8e, 0x35, 0xb3, 0xee, 0x58, 0x66, 0x79, 0xad, 0x8a, 0xe5, 0xb5, 0xb3,
	0xcb, 0xfb, 0xa1, 0x12, 0x23, 0x85, 0xd8, 0x98, 0xa2, 0x3c, 0xdc, 0x81, 0x83, 0xce, 0x51, 0xfc,
	0xf8, 0x48, 0x35, 0xda, 0xd8, 0x40, 0x2e, 0xee, 0x2b, 0xb0, 0x90, 0xa8, 0x41, 0x12, 0x8c, 0xa9,
	0x46, 0x2f, 0x6e, 0xa4, 0x41, 0x5f, 0x83, 0xc5, 0x64, 0x10, 0x7f, 0x22, 0xca, 0x7d, 0x84, 0x64,
	0xea, 0xa7, 0xd8, 0xa8, 0x7f, 0x57, 0x70, 0x12, 0xef, 0x6d, 0x91, 0xe5, 0x55, 0x06, 0x81, 0x6a,
	0xea, 0xc7, 0xa7, 0x9f, 0x89, 0x5f, 0xa2, 0xea, 0x37, 0xa0, 0xb5, 0x67, 0x6f, 0xf9, 0xbe, 0x35,
	0xd3, 0x56, 0xa0, 0xee, 0xd8, 0x26, 0x7f, 0xa2, 0xa7, 0x1a, 0xaa, 0x63, 0x0f, 0xf5, 0x3f, 0x55,
	0x30, 0xb4, 0x3f, 0x95, 0xc2, 0xae, 0x27, 0x53, 0xe6, 0xcb, 0x51, 0x9a, 0x52, 0x70, 0x31, 0x52,
	0xcb, 0x86, 0x9e, 0x7c, 0x73, 0x12, 0xf3, 0x57, 0x05, 0x24, 0x93, 0xae, 0xdf, 0x83, 0xde, 0x21,
	0xb3, 0xc2, 0xc8, 0x67, 0xb1, 0xbd, 0xcc, 0xc5, 0xc9, 0xef, 0xf1, 0x7e, 0x1c, 0x6e, 0x74, 0x0f,
	0xd3, 0x8a, 0xfe, 0xbb, 0xd0, 0xe5, 0xa9, 0xc5, 0x7d, 0x52, 0xa1, 0x0a, 0x2d, 0x2f, 0x31, 0xf6,
	0x77, 0xe7, 0xb7, 0x69, 0x0e, 0x9d, 0x76, 0xa4, 0x2d, 0xcb, 0x6e, 0x20, 0x2a, 0x49, 0x4f, 0xee,
	0xd6, 0xee, 0xc0, 0x32, 0xcf, 0x84, 0x7a, 0x7e, 0x9c, 0x66, 0x15, 0xef, 0x36, 0x17, 0xa9, 0xfd,
	0x89, 0x2f, 0x32, 0xac, 0xda, 0x6d, 0x58, 0x4a, 0xbe, 0x3c, 0x61, 0xe1, 0xb1, 0x67, 0x0b, 0xa1,
	0x25, 0x2a, 0xf1, 0x88, 0x5a, 0x0b, 0x94, 0x04, 0x79, 0x6c, 0xe4, 0x95, 0xe4, 0xb1, 0xb0, 0xc6,
	0xed, 0xf8, 0x8e, 0xa7, 0x4c, 0x12, 0xf3, 0xf4, 0x6a, 0x1b, 0xea, 0x1d, 0x25, 0x4f, 0xef, 0xef,
	0x6a, 0xd0, 0x95, 0xe4, 0x5e, 0x95, 0x83, 0xb8, 0x06, 0x6d, 0x32, 0xa2, 0x54, 0x05, 0x5b, 0x68,
	0x44, 0x16, 0x0f, 0xfd, 0x5d, 0xf6, 0xcc, 0x94, 0x9e, 0x00, 0xb7, 0x5c, 0xf6, 0x8c, 0xba, 0xce,
	0xc9, 0xe1, 0x26, 0x01, 0x51, 0xa3, 0x34, 0x20, 0x6a, 0x66, 0x9f, 0x9b, 0x4a, 0x91, 0x63, 0x4b,
	0x8e, 0x1c, 0x5f, 0x87, 0xa6, 0xc8, 0x4b, 0xb7, 0x69, 0x73, 0x33, 0xaa, 0x25, 0xa9, 0x8f, 0x21,
	0x86, 0x69, 0xf7, 0x62, 0x85, 0x25, 0xb6, 0xf9, 0x99, 0x79, 0x7d, 0x0e, 0x78, 0x71, 0x11, 0xdb,
	0xc7, 0x96, 0x7b, 0x14, 0x67, 0x0b, 0xb0, 0x41, 0xb7, 0x61, 0x29, 0xd7, 0x8b, 0x3c, 0x23, 0x21,
	0x33, 0xc9, 0xb0, 0x75, 0x8c, 0x36, 0x36, 0xc4, 0x62, 0xbd, 0xbc, 0xec, 0xf4, 0xef, 0x2b, 0xa0,
	0x19, 0xec, 0xf4, 0x3d, 0xdf, 0x73, 0xc3, 0x61, 0x92, 0x37, 0xc2, 0x90, 0x62, 0x6a, 0x1d, 0x89,
	0x03, 0xa3, 0x2a, 0x41, 0x45, 0xcf, 0xea, 0x69, 0xca, 0x8b, 0x27, 0xa9, 0x7e, 0x5c, 0x43, 0x1e,
	0x82, 0x3c, 0x0f, 0x05, 0xe7, 0x40, 0xc5, 0xdb, 0x70, 0x02, 0x10, 0xb5, 0xe0, 0x71, 0x45, 0xbd,
	0x28, 0x51, 0xd1, 0x90, 0x13, 0x15, 0xc5, 0xaf, 0x77, 0x13, 0xe7, 0xad, 0x25, 0x3b, 0x6f, 0xc2,
	0xc9, 0x6b, 0xa7, 0x1e, 0x7b, 0xe6, 0x58, 0xe8, 0xcc, 0x67, 0xd4, 0x79, 0xbe, 0x03, 0xe4, 0x7c,
	0x47, 0xe6, 0x80, 0xea, 0xe6, 0x0e, 0x28, 0xf9, 0x24, 0xe9, 0x65, 0x4f, 0x92, 0xef, 0x52, 0xc2,
	0x98, 0xe4, 0x94, 0x66, 0x5c, 0x37, 0x33, 0x19, 0xd7, 0xfc, 0xef, 0x0f, 0x72, 0x42, 0xad, 0x4c,
	0xbd, 0xae, 0x43, 0xe3, 0x3d, 0xeb, 0x84, 0xf9, 0x92, 0xe4, 0x1b, 0x94, 0x61, 0xff, 0x87, 0x26,
	0x74, 0xe5, 0x6c, 0x59, 0xc1, 0xa9, 0x31, 0x87, 0xd5, 0x17, 0x7f, 0xae, 0x5f, 0x91, 0x6c, 0xba,
	0x05, 0xdd, 0xc0, 0xb5, 0xa6, 0xc1, 0xb1, 0x17, 0xa6, 0x0f, 0xf7, 0x21, 0x6e, 0xe2, 0x2e, 0x87,
	0xcf, 0x42, 0xcb, 0x19, 0x63, 0xb7, 0x38, 0x93, 0x79, 0x03, 0xf7, 0x0e, 0xb8, 0xf0, 0xdb, 0x65,
	0xc9, 0xa6, 0x4e, 0x55, 0xb2, 0x09, 0xf2, 0xc9, 0xa6, 0x14, 0x15, 0xba, 0xa5, 0xf9, 0xa4, 0x5e,
	0x65, 0x3e, 0x69, 0x21, 0x9f, 0x4f, 0xca, 0x68, 0xc2, 0x62, 0x4e, 0x13, 0xf2, 0xae, 0xf9, 0xd2,
	0x9c, 0x6b, 0x9e, 0xf1, 0xec, 0x97, 0x73, 0x9e, 0xfd, 0xb7, 0x01, 0xac, 0xc3, 0x90, 0xf9, 0x26,
	0xb6, 0x50, 0x5a, 0xaa, 0xbb, 0xb9, 0x21, 0xab, 0x87, 0xb4, 0xa5, 0x5b, 0x38, 0x70, 0x68, 0x8d,
	0x99, 0xd1, 0xb1, 0xe2, 0xa2, 0xf6, 0x0e, 0x82, 0xc0, 0xcc, 0xa4, 0xcb, 0x37, 0x4a, 0x5c, 0x75,
	0x37, 0x6f, 0x95, 0xcc, 0xdf, 0xb7, 0xf8, 0x8f, 0x0c, 0x10, 0x0f, 0xc4, 0xcf, 0x0d, 0xee, 0x65,
	0x02, 0xad, 0xd5, 0x79, 0xec, 0x93, 0xa6, 0xe7, 0x72, 0x9e, 0xda, 0x6e, 0x26, 0xc6, 0x5b, 0x23,
	0xcd, 0xfe, 0x7a, 0xc9, 0xdc, 0xd4, 0x79, 0xe5, 0xbf, 0xb0, 0x91, 0x62, 0xbd, 0x24, 0xaf, 0x75,
	0xa5, 0x28, 0x27, 0x7c, 0x2d, 0x05, 0x8b, 0xc1, 0x53, 0x58, 0xcc, 0x92, 0x91, 0x7f, 0x7d, 0xd3,
	0xe0, 0xbf, 0xbe, 0x79, 0x5d, 0xfe, 0xf5, 0x4d, 0x99, 0x03, 0x4d, 0x9e, 0x85, 0xf4, 0xc3, 0x9c,
	0xff, 0x52, 0x60, 0xad, 0x48, 0xce, 0x78, 0x78, 0x1e, 0x44, 0x33, 0xe6, 0x9b, 0xec, 0xf9, 0x88,
	0xd0, 0x9d, 0x3e, 0xd5, 0x36, 0x16, 0xa8, 0x75, 0x57, 0x34, 0xa2, 0x1b, 0xc0, 0x87, 0x05, 0xec,
	0x8c, 0xb9, 0xfc, 0x15, 0x42, 0x8d, 0x06, 0xf2, 0xe9, 0x43, 0x6c, 0xa6, 0x37, 0x08, 0x6f, 0xc0,
	0x9a, 0x18, 0x39, 0x65, 0xcc, 0x4e, 0xc9, 0xaa, 0x34, 0x5a, 0xe3, 0xa3, 0xb1, 0x2b, 0xa1, 0xfd,
	0x32, 0xf4, 0xf8, 0x0c, 0x3f, 0x4d, 0x9b, 0xb5, 0x8d, 0x2e, 0xb5, 0x89, 0x94, 0xd9, 0x5d, 0x58,
	0x95, 0x87, 0x88, 0xa7, 0x13, 0x71, 0xc6, 0x4c, 0x1a, 0xc9, 0x1f, 0x4f, 0xe8, 0x3f, 0x51, 0x60,
	0xb5, 0x40, 0x2d, 0x34, 0x1d, 0x16, 0xf8, 0xed, 0x2e, 0x2a, 0xd4, 0xc4, 0x71, 0x85, 0x5c, 0xbb,
	0xd4, 0xb8, 0x6f, 0xcd, 0x1e, 0x39, 0xae, 0xf6, 0x75, 0x58, 0x4a, 0xc7, 0xf0, 0x13, 0x9b, 0x03,
	0xca, 0x42, 0x3c, 0xea, 0x23, 0x3a, 0xb9, 0x5f, 0x83, 0xd5, 0xdc, 0xb8, 0x24, 0xa8, 0x68, 0x88,
	0xab, 0xe2, 0x78, 0x2c, 0x42, 0xf0, 0x63, 0x58, 0xe4, 0xc3, 0x83, 0x29, 0x1b, 0x39, 0x87, 0xce,
	0x48, 0xc4, 0x51, 0xb7, 0xcf, 0x51, 0xe5, 0xa1, 0x18, 0x2e, 0x3e, 0x1f, 0x57, 0xf5, 0x21, 0x5c,
	0xaf, 0x18, 0x9d, 0xf5, 0xe5, 0xf9, 0x2a, 0x53, 0x5f, 0x7e, 0x1d, 0x5a, 0xd4, 0x49, 0x27, 0x18,
	0x7a, 0xaf, 0x4d, 0xac, 0xee, 0xd9, 0xfa, 0xef, 0xd5, 0x60, 0x29, 0x67, 0x0f, 0xe9, 0x01, 0xa4,
	0x14, 0x1c, 0x40, 0xb5, 0x4c, 0x96, 0xa1, 0x20, 0x9f, 0x20, 0x67, 0x0a, 0xea, 0xd9, 0x4c, 0xc1,
	0x03, 0x58, 0x20, 0x59, 0x58, 0x63, 0xb2, 0xaf, 0x80, 0xb6, 0xb3, 0xbb, 0xf9, 0xb5, 0xd2, 0x07,
	0xd6, 0x43, 0x3e, 0x1a, 0xf5, 0x3b, 0x30, 0x7a, 0x81, 0x54, 0xc3, 0xd3, 0x87, 0xd2, 0x16, 0xcd,
	0xf9, 0xd3, 0x27, 0x43, 0xe2, 0xa9, 0xe7, 0xdb, 0x81, 0x48, 0x62, 0x94, 0xbf, 0x5f, 0xfe, 0x91,
	0x02, 0xda, 0xfc, 0xb4, 0x9f, 0x99, 0xdf, 0x6a, 0xfc, 0xb0, 0x06, 0xd7, 0x4a, 0x05, 0xa3, 0x3d,
	0x4a, 0x40, 0x8b, 0x59, 0x63, 0xe1, 0x34, 0xdd, 0xbd, 0x90, 0x4c, 0x39, 0x7a, 0x30, 0x6b, 0x1c,
	0x83, 0x17, 0xb3, 0xc6, 0x29, 0xb9, 0x91, 0x75, 0x12, 0x63, 0xce, 0x25, 0xc8, 0x6d, 0x5b, 0x27,
	0xb1, 0x3b, 0x89, 0x45, 0x99, 0x9c, 0x78, 0xa6, 0x7b, 0x49, 0x72, 0xbe, 0x9d, 0x90, 0xf3, 0x6d,
	0xfd, 0x0f, 0x15, 0xd0, 0xcf, 0x5f, 0x0f, 0x05, 0xaf, 0x6c, 0xec, 0x9c, 0x31, 0x7f, 0x16, 0x5b,
	0x04, 0x46, 0x1c, 0xbd, 0xb8, 0x31, 0x8e, 0x70, 0x0f, 0x7d, 0xe6, 0x1c, 0x1d, 0x87, 0x26, 0xf7,
	0xc3, 0xf8, 0x9e, 0xf6, 0x44, 0x23, 0x8f, 0xc8, 0x6e, 0x41, 0x37, 0x1e, 0x14, 0x4e, 0xc7, 0xf1,
	0xd6, 0x8a, 0xa6, 0x8f, 0xa7, 0x63, 0xfd, 0x1f, 0x6b, 0xe7, 0x71, 0x44, 0xcf, 0x44, 0x5e, 0x81,
	0x85, 0xe4, 0x42, 0x62, 0x92, 0xfe, 0xbe, 0xb3, 0x17, 0x37, 0xd2, 0xeb, 0x35, 0x79, 0x90, 0xa4,
	0x65, 0xc9, 0xa0, 0xf8, 0x81, 0x5c, 0x32, 0xc8, 0xb6, 0x66, 0x82, 0xa5, 0x6e, 0xdc, 0xb6, 0x63,
	0xcd, 0xca, 0x6e, 0x4b, 0xb8, 0xda, 0x5d, 0xf4, 0xb6, 0x84, 0x6b, 0xe1, 0xc5, 0x6f, 0x4b, 0x9a,
	0xe5, 0xb7, 0x25, 0xe2, 0xc1, 0x0f, 0x7f, 0x16, 0xde, 0x4a, 0xde, 0x69, 0x3d, 0xc6, 0xba, 0xfe,
	0xd7, 0xca, 0xf9, 0x02, 0x3c, 0x21, 0xd9, 0x58, 0x21, 0x4f, 0x74, 0x33, 0xd3, 0xb1, 0xe3, 0x10,
	0xbf, 0x97, 0x34, 0xee, 0xd9, 0x01, 0xe2, 0x3d, 0xf7, 0xa4, 0xa2, 0xa9, 0x7c, 0xe5, 0xd3, 0xa5,
	0xc6, 0x4f, 0xa6, 0xb4, 0x80, 0x1b, 0xd0, 0x49, 0xe6, 0x90, 0xf0, 0x7a, 0x46, 0xda, 0x30, 0xaf,
	0x39, 0xf5, 0x79, 0xcd, 0xd1, 0xff, 0xac, 0x26, 0x25, 0x34, 0xc8, 0x1b, 0xde, 0x81, 0x65, 0xae,
	0xe6, 0xdc, 0xad, 0x4a, 0x60, 0x23, 0xf7, 0xbe, 0x94, 0x63, 0x37, 0x0e, 0x41, 0x44, 0x34, 0x16,
	0x8f, 0x32, 0x75, 0xed, 0x7d, 0x58, 0x91, 0xa9, 0xf0, 0xfc, 0x5d, 0xad, 0x24, 0x7c, 0xdb, 0xe7,
	0x77, 0xdb, 0xde, 0xe8, 0xc4, 0x58, 0x3a, 0xca, 0x36, 0x68, 0x3b, 0xb0, 0x98, 0xcd, 0xe4, 0x89,
	0xb4, 0xc0, 0xcd, 0xd2, 0x24, 0x9e, 0x94, 0x81, 0x4b, 0xf2, 0x45, 0xef, 0xc4, 0xb6, 0x4b, 0x91,
	0x55, 0xbd, 0x84, 0x42, 0x2c, 0x03, 0x29, 0x53, 0x4d, 0xe1, 0xd5, 0xef, 0x08, 0xdf, 0x26, 0x5d,
	0x5e, 0x12, 0xf0, 0x28, 0xa5, 0x69, 0xb3, 0x5a, 0x65, 0xda, 0x4c, 0xad, 0x4a, 0x9b, 0xd5, 0xb3,
	0x3f, 0x57, 0x8c, 0xe3, 0x58, 0x49, 0x2a, 0xb2, 0x0b, 0xae, 0x54, 0xfc, 0x56, 0xe4, 0x12, 0x39,
	0xc4, 0xdf, 0x86, 0x95, 0x39, 0x31, 0xce, 0x9f, 0xc5, 0x95, 0x79, 0xb5, 0xda, 0x85, 0xf2, 0x6a,
	0x6a, 0x51, 0x5e, 0xed, 0x23, 0xf1, 0x75, 0x79, 0x0b, 0xce, 0x3d, 0xb5, 0xe6, 0x72, 0x69, 0xaa,
	0x94, 0x4b, 0xdb, 0xfc, 0xc1, 0x12, 0xb4, 0x82, 0x63, 0x6f, 0x3a, 0x9c, 0x05, 0xda, 0x03, 0x41,
	0xfe, 0xbe, 0x15, 0x8e, 0x8e, 0xe3, 0xa4, 0xd9, 0xcb, 0x73, 0x0f, 0x0e, 0xf3, 0x79, 0xb5, 0x81,
	0x36, 0xff, 0x63, 0x74, 0xed, 0x1d, 0xe8, 0x72, 0x41, 0x51, 0x94, 0xa4, 0x2d, 0xc9, 0x43, 0x3e,
	0x71, 0xec, 0xc1, 0x8d, 0xaa, 0x7b, 0x32, 0x6d, 0x1f, 0xd6, 0xe7, 0xee, 0xba, 0x04, 0xa5, 0x95,
	0x1c, 0x3f, 0x7b, 0xf6, 0xe0, 0x02, 0x77, 0x64, 0xda, 0x3e, 0xac, 0x26, 0xb1, 0x2c, 0x8f, 0x53,
	0xe9, 0xb9, 0xd2, 0x20, 0xff, 0xf0, 0x29, 0xcd, 0x1d, 0x0c, 0x6e, 0x16, 0xc5, 0xb8, 0x69, 0x40,
	0xfc, 0x1d, 0xe8, 0x27, 0x15, 0x29, 0xfc, 0x25, 0xb2, 0xb9, 0xf0, 0x38, 0x9f, 0xf7, 0x38, 0x8f,
	0xf4, 0x36, 0x2c, 0x53, 0x85, 0x9a, 0xcb, 0xd7, 0x5d, 0x2d, 0xc3, 0x77, 0xc5, 0x05, 0x18, 0xc6,
	0xb8, 0xd4, 0x50, 0xfc, 0x46, 0x6c, 0x50, 0xdc, 0xac, 0x7d, 0x08, 0x4b, 0xc9, 0x6b, 0xb1, 0xfb,
	0x33, 0x7a, 0x8c, 0x77, 0xb3, 0xe8, 0x0a, 0x24, 0x79, 0xab, 0x37, 0xc8, 0x3f, 0x87, 0x97, 0x9e,
	0xca, 0x19, 0xb0, 0x9a, 0x23, 0x46, 0x62, 0xba, 0x51, 0x4a, 0xf0, 0xc9, 0xc1, 0xf7, 0xe6, 0x84,
	0x94, 0x7b, 0xc1, 0xf6, 0x2e, 0x74, 0xa9, 0xb2, 0xc3, 0xc6, 0x2c, 0x2c, 0x5d, 0xdd, 0xfa, 0xbc,
	0x6e, 0xf2, 0x84, 0xe3, 0xdb, 0xb0, 0x94, 0x8c, 0x2a, 0x17, 0x71, 0x89, 0x70, 0xde, 0x84, 0x36,
	0xa9, 0xd5, 0x96, 0x6d, 0x6b, 0xc5, 0xbf, 0xe9, 0x1b, 0x14, 0x37, 0x6b, 0x6f, 0x41, 0x87, 0x0a,
	0xbb, 0xb6, 0x13, 0x5e, 0x72, 0xea, 0x9b, 0xd0, 0xe5, 0xf7, 0x59, 0x25, 0x0b, 0xe6, 0x93, 0x8b,
	0x8c, 0xf1, 0x5b, 0xc9, 0xcc, 0x0b, 0xaf, 0x93, 0x7f, 0xf2, 0xd7, 0xa0, 0xb7, 0xed, 0xf1, 0x4b,
	0x35, 0x52, 0xa1, 0xab, 0xc5, 0x3f, 0x9e, 0x18, 0x94, 0xb4, 0x6b, 0xf7, 0x70, 0x3e, 0xbd, 0x0b,
	0xe6, 0x3c, 0x97, 0xcd, 0x2f, 0x46, 0x90, 0x64, 0x6e, 0x19, 0xd7, 0xe5, 0x3f, 0xc0, 0xd0, 0x1e,
	0xc0, 0x62, 0xfa, 0xbb, 0x0d, 0x52, 0xb6, 0x6b, 0xa5, 0x2f, 0xa7, 0xe7, 0x34, 0x2d, 0xf7, 0xab,
	0x8f, 0xf7, 0x61, 0x21, 0x7d, 0x00, 0x8c, 0x5b, 0x5e, 0xf2, 0x1b, 0x12, 0xec, 0x1e, 0x54, 0xf4,
	0x69, 0x1f, 0xc4, 0x4c, 0x61, 0x8d, 0x34, 0xe0, 0x45, 0x29, 0xdd, 0x87, 0xe5, 0xb4, 0x26, 0x84,
	0x5b, 0x45, 0xab, 0x48, 0xc0, 0x5b, 0x59, 0x1a, 0x65, 0x42, 0xae, 0x62, 0x63, 0x07, 0x7a, 0xc9,
	0xcf, 0xf8, 0x50, 0x30, 0xd7, 0x0a, 0xd5, 0x88, 0x38, 0x28, 0xef, 0xd2, 0x76, 0x61, 0x21, 0xa9,
	0x90, 0x54, 0x5e, 0x94, 0xcc, 0x52, 0x52, 0x11, 0x22, 0xa9, 0x20, 0x54, 0x0a, 0x0c, 0xdf, 0xce,
	0x90, 0xb9, 0x90, 0xea, 0x65, 0xf9, 0x78, 0x03, 0xda, 0x94, 0xdf, 0xbc, 0x1f, 0xcd, 0xb2, 0x33,
	0xa9, 0x75, 0x30, 0xdf, 0x74, 0xd0, 0xa4, 0x7f, 0x44, 0xf3, 0xcb, 0xff, 0x1f, 0x00, 0x00, 0xff,
	0xff, 0x7d, 0x3b, 0x1c, 0xbc, 0xa0, 0x46, 0x00, 0x00,
}

// This following code was generated by tarsrpc
// Gernerated from serverShop_sys.proto
type ShopSys struct {
	s model.Servant
}

//SetServant is required by the servant interface.
func (obj *ShopSys) SetServant(s model.Servant) {
	obj.s = s
}

//AddServant is required by the servant interface
func (obj *ShopSys) AddServant(imp impShopSys, objStr string) {
	tars.AddServant(obj, imp, objStr)
}

////AddServant adds servant  for the service with context
func (obj *ShopSys) AddServantWithContext(imp impShopSysWithContext, objStr string) {
	tars.AddServantWithContext(obj, imp, objStr)
}

//TarsSetTimeout is required by the servant interface. t is the timeout in ms.
func (obj *ShopSys) TarsSetTimeout(t int) {
	obj.s.TarsSetTimeout(t)
}

//TarsSetProtocol is required by the servant interface. t is the protocol.
func (obj *ShopSys) TarsSetProtocol(p model.Protocol) {
	obj.s.TarsSetProtocol(p)
}

type impShopSys interface {
	GoodsBatchOperate(input ReqCoShopGoodsOperate) (output Result, err error)
	GoodsDetail(input Uid) (output ResShopGoodsSave, err error)
	GoodsDistributionDetail(input ReqId) (output GoodsDistributionStock, err error)
	GoodsListSearchPage(input ReqSearchGoods) (output ResFrontGoodsList, err error)
	GoodsListFrontSearchPage(input ReqFrontSearchInfo) (output ResFrontGoodsList, err error)
	GoodsFrontDetail(input ReqId) (output ResShopGoodsSave, err error)
	ShopGroupSave(input ShopGroup) (output ShopGroup, err error)
	GroupListByCoid(input ReqGoodsGroupCoid) (output ResGoodsGroup, err error)
	GroupListByCoidPage(input ReqGoodsGroupObj) (output ResGoodsGroupList, err error)
	GroupDelete(input ShopGroup) (output ResultCount, err error)
	ShopGroupDetail(input ReqId) (output ShopGroup, err error)
	StockAdd(input ShopStock) (output ShopStock, err error)
	StockEdit(input ShopStock) (output ShopStock, err error)
	StockDelete(input ShopStock) (output Result, err error)
	StockDetail(input ReqId) (output ShopStock, err error)
	CoCouponSave(input ShopCoupon) (output ShopCoupon, err error)
	CouponDelete(input ShopCoupon) (output Result, err error)
	CouponDetail(input ReqId) (output ResShopCoupon, err error)
	CouponListPage(input ReqCouponPage) (output ResShopCouponList, err error)
	CouponCardAdd(input ShopCouponCard) (output ShopCouponCard, err error)
	CouponCardEdit(input ShopCouponCard) (output ShopCouponCard, err error)
	CouponCardDelete(input ShopCouponCard) (output Result, err error)
	CouponCardDetail(input ReqId) (output ShopCouponCard, err error)
	StockCardAdd(input ShopStockCard) (output ShopStockCard, err error)
	StockCardEdit(input ShopStockCard) (output ShopStockCard, err error)
	StockCardDelete(input ShopStockCard) (output ResultCount, err error)
	StockCardDetail(input ReqId) (output ShopStockCard, err error)
	FakerBuy(input Faker) (output Faker, err error)
}

type impShopSysWithContext interface {
	GoodsBatchOperate(ctx context.Context, input ReqCoShopGoodsOperate) (output Result, err error)
	GoodsDetail(ctx context.Context, input Uid) (output ResShopGoodsSave, err error)
	GoodsDistributionDetail(ctx context.Context, input ReqId) (output GoodsDistributionStock, err error)
	GoodsListSearchPage(ctx context.Context, input ReqSearchGoods) (output ResFrontGoodsList, err error)
	GoodsListFrontSearchPage(ctx context.Context, input ReqFrontSearchInfo) (output ResFrontGoodsList, err error)
	GoodsFrontDetail(ctx context.Context, input ReqId) (output ResShopGoodsSave, err error)
	ShopGroupSave(ctx context.Context, input ShopGroup) (output ShopGroup, err error)
	GroupListByCoid(ctx context.Context, input ReqGoodsGroupCoid) (output ResGoodsGroup, err error)
	GroupListByCoidPage(ctx context.Context, input ReqGoodsGroupObj) (output ResGoodsGroupList, err error)
	GroupDelete(ctx context.Context, input ShopGroup) (output ResultCount, err error)
	ShopGroupDetail(ctx context.Context, input ReqId) (output ShopGroup, err error)
	StockAdd(ctx context.Context, input ShopStock) (output ShopStock, err error)
	StockEdit(ctx context.Context, input ShopStock) (output ShopStock, err error)
	StockDelete(ctx context.Context, input ShopStock) (output Result, err error)
	StockDetail(ctx context.Context, input ReqId) (output ShopStock, err error)
	CoCouponSave(ctx context.Context, input ShopCoupon) (output ShopCoupon, err error)
	CouponDelete(ctx context.Context, input ShopCoupon) (output Result, err error)
	CouponDetail(ctx context.Context, input ReqId) (output ResShopCoupon, err error)
	CouponListPage(ctx context.Context, input ReqCouponPage) (output ResShopCouponList, err error)
	CouponCardAdd(ctx context.Context, input ShopCouponCard) (output ShopCouponCard, err error)
	CouponCardEdit(ctx context.Context, input ShopCouponCard) (output ShopCouponCard, err error)
	CouponCardDelete(ctx context.Context, input ShopCouponCard) (output Result, err error)
	CouponCardDetail(ctx context.Context, input ReqId) (output ShopCouponCard, err error)
	StockCardAdd(ctx context.Context, input ShopStockCard) (output ShopStockCard, err error)
	StockCardEdit(ctx context.Context, input ShopStockCard) (output ShopStockCard, err error)
	StockCardDelete(ctx context.Context, input ShopStockCard) (output ResultCount, err error)
	StockCardDetail(ctx context.Context, input ReqId) (output ShopStockCard, err error)
	FakerBuy(ctx context.Context, input Faker) (output Faker, err error)
}

//Dispatch is used to call the user implement of the defined method.
func (obj *ShopSys) Dispatch(ctx context.Context, val interface{}, req *requestf.RequestPacket, resp *requestf.ResponsePacket, withContext bool) (err error) {
	input := tools.Int8ToByte(req.SBuffer)
	var output []byte
	funcName := req.SFuncName
	switch funcName {

	case "GoodsBatchOperate":
		inputDefine := ReqCoShopGoodsOperate{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsBatchOperate(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsBatchOperate(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsDetail":
		inputDefine := Uid{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResShopGoodsSave
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsDistributionDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res GoodsDistributionStock
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsDistributionDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsDistributionDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsListSearchPage":
		inputDefine := ReqSearchGoods{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResFrontGoodsList
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsListSearchPage(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsListSearchPage(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsListFrontSearchPage":
		inputDefine := ReqFrontSearchInfo{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResFrontGoodsList
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsListFrontSearchPage(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsListFrontSearchPage(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsFrontDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResShopGoodsSave
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsFrontDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsFrontDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "ShopGroupSave":
		inputDefine := ShopGroup{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopGroup
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.ShopGroupSave(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.ShopGroupSave(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GroupListByCoid":
		inputDefine := ReqGoodsGroupCoid{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResGoodsGroup
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GroupListByCoid(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GroupListByCoid(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GroupListByCoidPage":
		inputDefine := ReqGoodsGroupObj{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResGoodsGroupList
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GroupListByCoidPage(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GroupListByCoidPage(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GroupDelete":
		inputDefine := ShopGroup{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResultCount
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GroupDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GroupDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "ShopGroupDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopGroup
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.ShopGroupDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.ShopGroupDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockAdd":
		inputDefine := ShopStock{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStock
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockAdd(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockAdd(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockEdit":
		inputDefine := ShopStock{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStock
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockEdit(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockEdit(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockDelete":
		inputDefine := ShopStock{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStock
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CoCouponSave":
		inputDefine := ShopCoupon{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopCoupon
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CoCouponSave(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CoCouponSave(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponDelete":
		inputDefine := ShopCoupon{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResShopCoupon
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponListPage":
		inputDefine := ReqCouponPage{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResShopCouponList
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponListPage(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponListPage(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponCardAdd":
		inputDefine := ShopCouponCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopCouponCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponCardAdd(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponCardAdd(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponCardEdit":
		inputDefine := ShopCouponCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopCouponCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponCardEdit(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponCardEdit(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponCardDelete":
		inputDefine := ShopCouponCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponCardDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponCardDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponCardDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopCouponCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponCardDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponCardDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockCardAdd":
		inputDefine := ShopStockCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStockCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockCardAdd(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockCardAdd(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockCardEdit":
		inputDefine := ShopStockCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStockCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockCardEdit(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockCardEdit(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockCardDelete":
		inputDefine := ShopStockCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResultCount
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockCardDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockCardDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockCardDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStockCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockCardDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockCardDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "FakerBuy":
		inputDefine := Faker{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Faker
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.FakerBuy(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.FakerBuy(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	default:
		return fmt.Errorf("func mismatch")
	}
	var _status map[string]string
	s, ok := current.GetResponseStatus(ctx)
	if ok && s != nil {
		_status = s
	}
	var _context map[string]string
	c, ok := current.GetResponseContext(ctx)
	if ok && c != nil {
		_context = c
	}
	*resp = requestf.ResponsePacket{
		IVersion:     1,
		CPacketType:  0,
		IRequestId:   req.IRequestId,
		IMessageType: 0,
		IRet:         0,
		SBuffer:      tools.ByteToInt8(output),
		Status:       _status,
		SResultDesc:  "",
		Context:      _context,
	}
	return nil
}

// GoodsBatchOperate is client rpc method as defined
func (obj *ShopSys) GoodsBatchOperate(input ReqCoShopGoodsOperate, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.GoodsBatchOperateWithContext(ctx, input, _opt...)
}

// GoodsBatchOperateWithContext is client rpc method as defined
func (obj *ShopSys) GoodsBatchOperateWithContext(ctx context.Context, input ReqCoShopGoodsOperate, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsBatchOperate", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsDetail is client rpc method as defined
func (obj *ShopSys) GoodsDetail(input Uid, _opt ...map[string]string) (output ResShopGoodsSave, err error) {
	ctx := context.Background()
	return obj.GoodsDetailWithContext(ctx, input, _opt...)
}

// GoodsDetailWithContext is client rpc method as defined
func (obj *ShopSys) GoodsDetailWithContext(ctx context.Context, input Uid, _opt ...map[string]string) (output ResShopGoodsSave, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsDistributionDetail is client rpc method as defined
func (obj *ShopSys) GoodsDistributionDetail(input ReqId, _opt ...map[string]string) (output GoodsDistributionStock, err error) {
	ctx := context.Background()
	return obj.GoodsDistributionDetailWithContext(ctx, input, _opt...)
}

// GoodsDistributionDetailWithContext is client rpc method as defined
func (obj *ShopSys) GoodsDistributionDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output GoodsDistributionStock, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsDistributionDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsListSearchPage is client rpc method as defined
func (obj *ShopSys) GoodsListSearchPage(input ReqSearchGoods, _opt ...map[string]string) (output ResFrontGoodsList, err error) {
	ctx := context.Background()
	return obj.GoodsListSearchPageWithContext(ctx, input, _opt...)
}

// GoodsListSearchPageWithContext is client rpc method as defined
func (obj *ShopSys) GoodsListSearchPageWithContext(ctx context.Context, input ReqSearchGoods, _opt ...map[string]string) (output ResFrontGoodsList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsListSearchPage", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsListFrontSearchPage is client rpc method as defined
func (obj *ShopSys) GoodsListFrontSearchPage(input ReqFrontSearchInfo, _opt ...map[string]string) (output ResFrontGoodsList, err error) {
	ctx := context.Background()
	return obj.GoodsListFrontSearchPageWithContext(ctx, input, _opt...)
}

// GoodsListFrontSearchPageWithContext is client rpc method as defined
func (obj *ShopSys) GoodsListFrontSearchPageWithContext(ctx context.Context, input ReqFrontSearchInfo, _opt ...map[string]string) (output ResFrontGoodsList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsListFrontSearchPage", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsFrontDetail is client rpc method as defined
func (obj *ShopSys) GoodsFrontDetail(input ReqId, _opt ...map[string]string) (output ResShopGoodsSave, err error) {
	ctx := context.Background()
	return obj.GoodsFrontDetailWithContext(ctx, input, _opt...)
}

// GoodsFrontDetailWithContext is client rpc method as defined
func (obj *ShopSys) GoodsFrontDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ResShopGoodsSave, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsFrontDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// ShopGroupSave is client rpc method as defined
func (obj *ShopSys) ShopGroupSave(input ShopGroup, _opt ...map[string]string) (output ShopGroup, err error) {
	ctx := context.Background()
	return obj.ShopGroupSaveWithContext(ctx, input, _opt...)
}

// ShopGroupSaveWithContext is client rpc method as defined
func (obj *ShopSys) ShopGroupSaveWithContext(ctx context.Context, input ShopGroup, _opt ...map[string]string) (output ShopGroup, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "ShopGroupSave", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GroupListByCoid is client rpc method as defined
func (obj *ShopSys) GroupListByCoid(input ReqGoodsGroupCoid, _opt ...map[string]string) (output ResGoodsGroup, err error) {
	ctx := context.Background()
	return obj.GroupListByCoidWithContext(ctx, input, _opt...)
}

// GroupListByCoidWithContext is client rpc method as defined
func (obj *ShopSys) GroupListByCoidWithContext(ctx context.Context, input ReqGoodsGroupCoid, _opt ...map[string]string) (output ResGoodsGroup, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GroupListByCoid", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GroupListByCoidPage is client rpc method as defined
func (obj *ShopSys) GroupListByCoidPage(input ReqGoodsGroupObj, _opt ...map[string]string) (output ResGoodsGroupList, err error) {
	ctx := context.Background()
	return obj.GroupListByCoidPageWithContext(ctx, input, _opt...)
}

// GroupListByCoidPageWithContext is client rpc method as defined
func (obj *ShopSys) GroupListByCoidPageWithContext(ctx context.Context, input ReqGoodsGroupObj, _opt ...map[string]string) (output ResGoodsGroupList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GroupListByCoidPage", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GroupDelete is client rpc method as defined
func (obj *ShopSys) GroupDelete(input ShopGroup, _opt ...map[string]string) (output ResultCount, err error) {
	ctx := context.Background()
	return obj.GroupDeleteWithContext(ctx, input, _opt...)
}

// GroupDeleteWithContext is client rpc method as defined
func (obj *ShopSys) GroupDeleteWithContext(ctx context.Context, input ShopGroup, _opt ...map[string]string) (output ResultCount, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GroupDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// ShopGroupDetail is client rpc method as defined
func (obj *ShopSys) ShopGroupDetail(input ReqId, _opt ...map[string]string) (output ShopGroup, err error) {
	ctx := context.Background()
	return obj.ShopGroupDetailWithContext(ctx, input, _opt...)
}

// ShopGroupDetailWithContext is client rpc method as defined
func (obj *ShopSys) ShopGroupDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ShopGroup, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "ShopGroupDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockAdd is client rpc method as defined
func (obj *ShopSys) StockAdd(input ShopStock, _opt ...map[string]string) (output ShopStock, err error) {
	ctx := context.Background()
	return obj.StockAddWithContext(ctx, input, _opt...)
}

// StockAddWithContext is client rpc method as defined
func (obj *ShopSys) StockAddWithContext(ctx context.Context, input ShopStock, _opt ...map[string]string) (output ShopStock, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockAdd", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockEdit is client rpc method as defined
func (obj *ShopSys) StockEdit(input ShopStock, _opt ...map[string]string) (output ShopStock, err error) {
	ctx := context.Background()
	return obj.StockEditWithContext(ctx, input, _opt...)
}

// StockEditWithContext is client rpc method as defined
func (obj *ShopSys) StockEditWithContext(ctx context.Context, input ShopStock, _opt ...map[string]string) (output ShopStock, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockEdit", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockDelete is client rpc method as defined
func (obj *ShopSys) StockDelete(input ShopStock, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.StockDeleteWithContext(ctx, input, _opt...)
}

// StockDeleteWithContext is client rpc method as defined
func (obj *ShopSys) StockDeleteWithContext(ctx context.Context, input ShopStock, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockDetail is client rpc method as defined
func (obj *ShopSys) StockDetail(input ReqId, _opt ...map[string]string) (output ShopStock, err error) {
	ctx := context.Background()
	return obj.StockDetailWithContext(ctx, input, _opt...)
}

// StockDetailWithContext is client rpc method as defined
func (obj *ShopSys) StockDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ShopStock, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CoCouponSave is client rpc method as defined
func (obj *ShopSys) CoCouponSave(input ShopCoupon, _opt ...map[string]string) (output ShopCoupon, err error) {
	ctx := context.Background()
	return obj.CoCouponSaveWithContext(ctx, input, _opt...)
}

// CoCouponSaveWithContext is client rpc method as defined
func (obj *ShopSys) CoCouponSaveWithContext(ctx context.Context, input ShopCoupon, _opt ...map[string]string) (output ShopCoupon, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CoCouponSave", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponDelete is client rpc method as defined
func (obj *ShopSys) CouponDelete(input ShopCoupon, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.CouponDeleteWithContext(ctx, input, _opt...)
}

// CouponDeleteWithContext is client rpc method as defined
func (obj *ShopSys) CouponDeleteWithContext(ctx context.Context, input ShopCoupon, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponDetail is client rpc method as defined
func (obj *ShopSys) CouponDetail(input ReqId, _opt ...map[string]string) (output ResShopCoupon, err error) {
	ctx := context.Background()
	return obj.CouponDetailWithContext(ctx, input, _opt...)
}

// CouponDetailWithContext is client rpc method as defined
func (obj *ShopSys) CouponDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ResShopCoupon, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponListPage is client rpc method as defined
func (obj *ShopSys) CouponListPage(input ReqCouponPage, _opt ...map[string]string) (output ResShopCouponList, err error) {
	ctx := context.Background()
	return obj.CouponListPageWithContext(ctx, input, _opt...)
}

// CouponListPageWithContext is client rpc method as defined
func (obj *ShopSys) CouponListPageWithContext(ctx context.Context, input ReqCouponPage, _opt ...map[string]string) (output ResShopCouponList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponListPage", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponCardAdd is client rpc method as defined
func (obj *ShopSys) CouponCardAdd(input ShopCouponCard, _opt ...map[string]string) (output ShopCouponCard, err error) {
	ctx := context.Background()
	return obj.CouponCardAddWithContext(ctx, input, _opt...)
}

// CouponCardAddWithContext is client rpc method as defined
func (obj *ShopSys) CouponCardAddWithContext(ctx context.Context, input ShopCouponCard, _opt ...map[string]string) (output ShopCouponCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponCardAdd", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponCardEdit is client rpc method as defined
func (obj *ShopSys) CouponCardEdit(input ShopCouponCard, _opt ...map[string]string) (output ShopCouponCard, err error) {
	ctx := context.Background()
	return obj.CouponCardEditWithContext(ctx, input, _opt...)
}

// CouponCardEditWithContext is client rpc method as defined
func (obj *ShopSys) CouponCardEditWithContext(ctx context.Context, input ShopCouponCard, _opt ...map[string]string) (output ShopCouponCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponCardEdit", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponCardDelete is client rpc method as defined
func (obj *ShopSys) CouponCardDelete(input ShopCouponCard, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.CouponCardDeleteWithContext(ctx, input, _opt...)
}

// CouponCardDeleteWithContext is client rpc method as defined
func (obj *ShopSys) CouponCardDeleteWithContext(ctx context.Context, input ShopCouponCard, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponCardDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponCardDetail is client rpc method as defined
func (obj *ShopSys) CouponCardDetail(input ReqId, _opt ...map[string]string) (output ShopCouponCard, err error) {
	ctx := context.Background()
	return obj.CouponCardDetailWithContext(ctx, input, _opt...)
}

// CouponCardDetailWithContext is client rpc method as defined
func (obj *ShopSys) CouponCardDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ShopCouponCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponCardDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockCardAdd is client rpc method as defined
func (obj *ShopSys) StockCardAdd(input ShopStockCard, _opt ...map[string]string) (output ShopStockCard, err error) {
	ctx := context.Background()
	return obj.StockCardAddWithContext(ctx, input, _opt...)
}

// StockCardAddWithContext is client rpc method as defined
func (obj *ShopSys) StockCardAddWithContext(ctx context.Context, input ShopStockCard, _opt ...map[string]string) (output ShopStockCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockCardAdd", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockCardEdit is client rpc method as defined
func (obj *ShopSys) StockCardEdit(input ShopStockCard, _opt ...map[string]string) (output ShopStockCard, err error) {
	ctx := context.Background()
	return obj.StockCardEditWithContext(ctx, input, _opt...)
}

// StockCardEditWithContext is client rpc method as defined
func (obj *ShopSys) StockCardEditWithContext(ctx context.Context, input ShopStockCard, _opt ...map[string]string) (output ShopStockCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockCardEdit", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockCardDelete is client rpc method as defined
func (obj *ShopSys) StockCardDelete(input ShopStockCard, _opt ...map[string]string) (output ResultCount, err error) {
	ctx := context.Background()
	return obj.StockCardDeleteWithContext(ctx, input, _opt...)
}

// StockCardDeleteWithContext is client rpc method as defined
func (obj *ShopSys) StockCardDeleteWithContext(ctx context.Context, input ShopStockCard, _opt ...map[string]string) (output ResultCount, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockCardDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockCardDetail is client rpc method as defined
func (obj *ShopSys) StockCardDetail(input ReqId, _opt ...map[string]string) (output ShopStockCard, err error) {
	ctx := context.Background()
	return obj.StockCardDetailWithContext(ctx, input, _opt...)
}

// StockCardDetailWithContext is client rpc method as defined
func (obj *ShopSys) StockCardDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ShopStockCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockCardDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// FakerBuy is client rpc method as defined
func (obj *ShopSys) FakerBuy(input Faker, _opt ...map[string]string) (output Faker, err error) {
	ctx := context.Background()
	return obj.FakerBuyWithContext(ctx, input, _opt...)
}

// FakerBuyWithContext is client rpc method as defined
func (obj *ShopSys) FakerBuyWithContext(ctx context.Context, input Faker, _opt ...map[string]string) (output Faker, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "FakerBuy", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// This following code was generated by tarsrpc
// Gernerated from serverShop_sys.proto
type ShopSys struct {
	s model.Servant
}

//SetServant is required by the servant interface.
func (obj *ShopSys) SetServant(s model.Servant) {
	obj.s = s
}

//AddServant is required by the servant interface
func (obj *ShopSys) AddServant(imp impShopSys, objStr string) {
	tars.AddServant(obj, imp, objStr)
}

////AddServant adds servant  for the service with context
func (obj *ShopSys) AddServantWithContext(imp impShopSysWithContext, objStr string) {
	tars.AddServantWithContext(obj, imp, objStr)
}

//TarsSetTimeout is required by the servant interface. t is the timeout in ms.
func (obj *ShopSys) TarsSetTimeout(t int) {
	obj.s.TarsSetTimeout(t)
}

//TarsSetProtocol is required by the servant interface. t is the protocol.
func (obj *ShopSys) TarsSetProtocol(p model.Protocol) {
	obj.s.TarsSetProtocol(p)
}

type impShopSys interface {
	GoodsBatchOperate(input ReqCoShopGoodsOperate) (output Result, err error)
	GoodsDetail(input Uid) (output ResShopGoodsSave, err error)
	GoodsDistributionDetail(input ReqId) (output GoodsDistributionStock, err error)
	GoodsListSearchPage(input ReqSearchGoods) (output ResFrontGoodsList, err error)
	GoodsListFrontSearchPage(input ReqFrontSearchInfo) (output ResFrontGoodsList, err error)
	GoodsFrontDetail(input ReqId) (output ResShopGoodsSave, err error)
	ShopGroupSave(input ShopGroup) (output ShopGroup, err error)
	GroupListByCoid(input ReqGoodsGroupCoid) (output ResGoodsGroup, err error)
	GroupListByCoidPage(input ReqGoodsGroupObj) (output ResGoodsGroupList, err error)
	GroupDelete(input ShopGroup) (output ResultCount, err error)
	ShopGroupDetail(input ReqId) (output ShopGroup, err error)
	StockAdd(input ShopStock) (output ShopStock, err error)
	StockEdit(input ShopStock) (output ShopStock, err error)
	StockDelete(input ShopStock) (output Result, err error)
	StockDetail(input ReqId) (output ShopStock, err error)
	CoCouponSave(input ShopCoupon) (output ShopCoupon, err error)
	CouponDelete(input ShopCoupon) (output Result, err error)
	CouponDetail(input ReqId) (output ResShopCoupon, err error)
	CouponListPage(input ReqCouponPage) (output ResShopCouponList, err error)
	CouponCardAdd(input ShopCouponCard) (output ShopCouponCard, err error)
	CouponCardEdit(input ShopCouponCard) (output ShopCouponCard, err error)
	CouponCardDelete(input ShopCouponCard) (output Result, err error)
	CouponCardDetail(input ReqId) (output ShopCouponCard, err error)
	StockCardAdd(input ShopStockCard) (output ShopStockCard, err error)
	StockCardEdit(input ShopStockCard) (output ShopStockCard, err error)
	StockCardDelete(input ShopStockCard) (output ResultCount, err error)
	StockCardDetail(input ReqId) (output ShopStockCard, err error)
	FakerBuy(input Faker) (output Faker, err error)
}

type impShopSysWithContext interface {
	GoodsBatchOperate(ctx context.Context, input ReqCoShopGoodsOperate) (output Result, err error)
	GoodsDetail(ctx context.Context, input Uid) (output ResShopGoodsSave, err error)
	GoodsDistributionDetail(ctx context.Context, input ReqId) (output GoodsDistributionStock, err error)
	GoodsListSearchPage(ctx context.Context, input ReqSearchGoods) (output ResFrontGoodsList, err error)
	GoodsListFrontSearchPage(ctx context.Context, input ReqFrontSearchInfo) (output ResFrontGoodsList, err error)
	GoodsFrontDetail(ctx context.Context, input ReqId) (output ResShopGoodsSave, err error)
	ShopGroupSave(ctx context.Context, input ShopGroup) (output ShopGroup, err error)
	GroupListByCoid(ctx context.Context, input ReqGoodsGroupCoid) (output ResGoodsGroup, err error)
	GroupListByCoidPage(ctx context.Context, input ReqGoodsGroupObj) (output ResGoodsGroupList, err error)
	GroupDelete(ctx context.Context, input ShopGroup) (output ResultCount, err error)
	ShopGroupDetail(ctx context.Context, input ReqId) (output ShopGroup, err error)
	StockAdd(ctx context.Context, input ShopStock) (output ShopStock, err error)
	StockEdit(ctx context.Context, input ShopStock) (output ShopStock, err error)
	StockDelete(ctx context.Context, input ShopStock) (output Result, err error)
	StockDetail(ctx context.Context, input ReqId) (output ShopStock, err error)
	CoCouponSave(ctx context.Context, input ShopCoupon) (output ShopCoupon, err error)
	CouponDelete(ctx context.Context, input ShopCoupon) (output Result, err error)
	CouponDetail(ctx context.Context, input ReqId) (output ResShopCoupon, err error)
	CouponListPage(ctx context.Context, input ReqCouponPage) (output ResShopCouponList, err error)
	CouponCardAdd(ctx context.Context, input ShopCouponCard) (output ShopCouponCard, err error)
	CouponCardEdit(ctx context.Context, input ShopCouponCard) (output ShopCouponCard, err error)
	CouponCardDelete(ctx context.Context, input ShopCouponCard) (output Result, err error)
	CouponCardDetail(ctx context.Context, input ReqId) (output ShopCouponCard, err error)
	StockCardAdd(ctx context.Context, input ShopStockCard) (output ShopStockCard, err error)
	StockCardEdit(ctx context.Context, input ShopStockCard) (output ShopStockCard, err error)
	StockCardDelete(ctx context.Context, input ShopStockCard) (output ResultCount, err error)
	StockCardDetail(ctx context.Context, input ReqId) (output ShopStockCard, err error)
	FakerBuy(ctx context.Context, input Faker) (output Faker, err error)
}

//Dispatch is used to call the user implement of the defined method.
func (obj *ShopSys) Dispatch(ctx context.Context, val interface{}, req *requestf.RequestPacket, resp *requestf.ResponsePacket, withContext bool) (err error) {
	input := tools.Int8ToByte(req.SBuffer)
	var output []byte
	funcName := req.SFuncName
	switch funcName {

	case "GoodsBatchOperate":
		inputDefine := ReqCoShopGoodsOperate{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsBatchOperate(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsBatchOperate(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsDetail":
		inputDefine := Uid{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResShopGoodsSave
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsDistributionDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res GoodsDistributionStock
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsDistributionDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsDistributionDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsListSearchPage":
		inputDefine := ReqSearchGoods{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResFrontGoodsList
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsListSearchPage(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsListSearchPage(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsListFrontSearchPage":
		inputDefine := ReqFrontSearchInfo{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResFrontGoodsList
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsListFrontSearchPage(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsListFrontSearchPage(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GoodsFrontDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResShopGoodsSave
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GoodsFrontDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GoodsFrontDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "ShopGroupSave":
		inputDefine := ShopGroup{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopGroup
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.ShopGroupSave(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.ShopGroupSave(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GroupListByCoid":
		inputDefine := ReqGoodsGroupCoid{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResGoodsGroup
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GroupListByCoid(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GroupListByCoid(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GroupListByCoidPage":
		inputDefine := ReqGoodsGroupObj{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResGoodsGroupList
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GroupListByCoidPage(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GroupListByCoidPage(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "GroupDelete":
		inputDefine := ShopGroup{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResultCount
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.GroupDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.GroupDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "ShopGroupDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopGroup
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.ShopGroupDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.ShopGroupDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockAdd":
		inputDefine := ShopStock{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStock
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockAdd(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockAdd(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockEdit":
		inputDefine := ShopStock{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStock
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockEdit(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockEdit(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockDelete":
		inputDefine := ShopStock{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStock
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CoCouponSave":
		inputDefine := ShopCoupon{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopCoupon
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CoCouponSave(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CoCouponSave(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponDelete":
		inputDefine := ShopCoupon{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResShopCoupon
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponListPage":
		inputDefine := ReqCouponPage{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResShopCouponList
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponListPage(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponListPage(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponCardAdd":
		inputDefine := ShopCouponCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopCouponCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponCardAdd(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponCardAdd(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponCardEdit":
		inputDefine := ShopCouponCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopCouponCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponCardEdit(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponCardEdit(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponCardDelete":
		inputDefine := ShopCouponCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponCardDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponCardDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "CouponCardDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopCouponCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.CouponCardDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.CouponCardDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockCardAdd":
		inputDefine := ShopStockCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStockCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockCardAdd(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockCardAdd(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockCardEdit":
		inputDefine := ShopStockCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStockCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockCardEdit(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockCardEdit(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockCardDelete":
		inputDefine := ShopStockCard{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResultCount
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockCardDelete(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockCardDelete(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "StockCardDetail":
		inputDefine := ReqId{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ShopStockCard
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.StockCardDetail(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.StockCardDetail(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "FakerBuy":
		inputDefine := Faker{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Faker
		if withContext == false {
			imp := val.(impShopSys)
			res, err = imp.FakerBuy(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impShopSysWithContext)
			res, err = imp.FakerBuy(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	default:
		return fmt.Errorf("func mismatch")
	}
	var _status map[string]string
	s, ok := current.GetResponseStatus(ctx)
	if ok && s != nil {
		_status = s
	}
	var _context map[string]string
	c, ok := current.GetResponseContext(ctx)
	if ok && c != nil {
		_context = c
	}
	*resp = requestf.ResponsePacket{
		IVersion:     1,
		CPacketType:  0,
		IRequestId:   req.IRequestId,
		IMessageType: 0,
		IRet:         0,
		SBuffer:      tools.ByteToInt8(output),
		Status:       _status,
		SResultDesc:  "",
		Context:      _context,
	}
	return nil
}

// GoodsBatchOperate is client rpc method as defined
func (obj *ShopSys) GoodsBatchOperate(input ReqCoShopGoodsOperate, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.GoodsBatchOperateWithContext(ctx, input, _opt...)
}

// GoodsBatchOperateWithContext is client rpc method as defined
func (obj *ShopSys) GoodsBatchOperateWithContext(ctx context.Context, input ReqCoShopGoodsOperate, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsBatchOperate", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsDetail is client rpc method as defined
func (obj *ShopSys) GoodsDetail(input Uid, _opt ...map[string]string) (output ResShopGoodsSave, err error) {
	ctx := context.Background()
	return obj.GoodsDetailWithContext(ctx, input, _opt...)
}

// GoodsDetailWithContext is client rpc method as defined
func (obj *ShopSys) GoodsDetailWithContext(ctx context.Context, input Uid, _opt ...map[string]string) (output ResShopGoodsSave, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsDistributionDetail is client rpc method as defined
func (obj *ShopSys) GoodsDistributionDetail(input ReqId, _opt ...map[string]string) (output GoodsDistributionStock, err error) {
	ctx := context.Background()
	return obj.GoodsDistributionDetailWithContext(ctx, input, _opt...)
}

// GoodsDistributionDetailWithContext is client rpc method as defined
func (obj *ShopSys) GoodsDistributionDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output GoodsDistributionStock, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsDistributionDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsListSearchPage is client rpc method as defined
func (obj *ShopSys) GoodsListSearchPage(input ReqSearchGoods, _opt ...map[string]string) (output ResFrontGoodsList, err error) {
	ctx := context.Background()
	return obj.GoodsListSearchPageWithContext(ctx, input, _opt...)
}

// GoodsListSearchPageWithContext is client rpc method as defined
func (obj *ShopSys) GoodsListSearchPageWithContext(ctx context.Context, input ReqSearchGoods, _opt ...map[string]string) (output ResFrontGoodsList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsListSearchPage", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsListFrontSearchPage is client rpc method as defined
func (obj *ShopSys) GoodsListFrontSearchPage(input ReqFrontSearchInfo, _opt ...map[string]string) (output ResFrontGoodsList, err error) {
	ctx := context.Background()
	return obj.GoodsListFrontSearchPageWithContext(ctx, input, _opt...)
}

// GoodsListFrontSearchPageWithContext is client rpc method as defined
func (obj *ShopSys) GoodsListFrontSearchPageWithContext(ctx context.Context, input ReqFrontSearchInfo, _opt ...map[string]string) (output ResFrontGoodsList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsListFrontSearchPage", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GoodsFrontDetail is client rpc method as defined
func (obj *ShopSys) GoodsFrontDetail(input ReqId, _opt ...map[string]string) (output ResShopGoodsSave, err error) {
	ctx := context.Background()
	return obj.GoodsFrontDetailWithContext(ctx, input, _opt...)
}

// GoodsFrontDetailWithContext is client rpc method as defined
func (obj *ShopSys) GoodsFrontDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ResShopGoodsSave, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GoodsFrontDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// ShopGroupSave is client rpc method as defined
func (obj *ShopSys) ShopGroupSave(input ShopGroup, _opt ...map[string]string) (output ShopGroup, err error) {
	ctx := context.Background()
	return obj.ShopGroupSaveWithContext(ctx, input, _opt...)
}

// ShopGroupSaveWithContext is client rpc method as defined
func (obj *ShopSys) ShopGroupSaveWithContext(ctx context.Context, input ShopGroup, _opt ...map[string]string) (output ShopGroup, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "ShopGroupSave", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GroupListByCoid is client rpc method as defined
func (obj *ShopSys) GroupListByCoid(input ReqGoodsGroupCoid, _opt ...map[string]string) (output ResGoodsGroup, err error) {
	ctx := context.Background()
	return obj.GroupListByCoidWithContext(ctx, input, _opt...)
}

// GroupListByCoidWithContext is client rpc method as defined
func (obj *ShopSys) GroupListByCoidWithContext(ctx context.Context, input ReqGoodsGroupCoid, _opt ...map[string]string) (output ResGoodsGroup, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GroupListByCoid", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GroupListByCoidPage is client rpc method as defined
func (obj *ShopSys) GroupListByCoidPage(input ReqGoodsGroupObj, _opt ...map[string]string) (output ResGoodsGroupList, err error) {
	ctx := context.Background()
	return obj.GroupListByCoidPageWithContext(ctx, input, _opt...)
}

// GroupListByCoidPageWithContext is client rpc method as defined
func (obj *ShopSys) GroupListByCoidPageWithContext(ctx context.Context, input ReqGoodsGroupObj, _opt ...map[string]string) (output ResGoodsGroupList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GroupListByCoidPage", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// GroupDelete is client rpc method as defined
func (obj *ShopSys) GroupDelete(input ShopGroup, _opt ...map[string]string) (output ResultCount, err error) {
	ctx := context.Background()
	return obj.GroupDeleteWithContext(ctx, input, _opt...)
}

// GroupDeleteWithContext is client rpc method as defined
func (obj *ShopSys) GroupDeleteWithContext(ctx context.Context, input ShopGroup, _opt ...map[string]string) (output ResultCount, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "GroupDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// ShopGroupDetail is client rpc method as defined
func (obj *ShopSys) ShopGroupDetail(input ReqId, _opt ...map[string]string) (output ShopGroup, err error) {
	ctx := context.Background()
	return obj.ShopGroupDetailWithContext(ctx, input, _opt...)
}

// ShopGroupDetailWithContext is client rpc method as defined
func (obj *ShopSys) ShopGroupDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ShopGroup, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "ShopGroupDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockAdd is client rpc method as defined
func (obj *ShopSys) StockAdd(input ShopStock, _opt ...map[string]string) (output ShopStock, err error) {
	ctx := context.Background()
	return obj.StockAddWithContext(ctx, input, _opt...)
}

// StockAddWithContext is client rpc method as defined
func (obj *ShopSys) StockAddWithContext(ctx context.Context, input ShopStock, _opt ...map[string]string) (output ShopStock, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockAdd", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockEdit is client rpc method as defined
func (obj *ShopSys) StockEdit(input ShopStock, _opt ...map[string]string) (output ShopStock, err error) {
	ctx := context.Background()
	return obj.StockEditWithContext(ctx, input, _opt...)
}

// StockEditWithContext is client rpc method as defined
func (obj *ShopSys) StockEditWithContext(ctx context.Context, input ShopStock, _opt ...map[string]string) (output ShopStock, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockEdit", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockDelete is client rpc method as defined
func (obj *ShopSys) StockDelete(input ShopStock, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.StockDeleteWithContext(ctx, input, _opt...)
}

// StockDeleteWithContext is client rpc method as defined
func (obj *ShopSys) StockDeleteWithContext(ctx context.Context, input ShopStock, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockDetail is client rpc method as defined
func (obj *ShopSys) StockDetail(input ReqId, _opt ...map[string]string) (output ShopStock, err error) {
	ctx := context.Background()
	return obj.StockDetailWithContext(ctx, input, _opt...)
}

// StockDetailWithContext is client rpc method as defined
func (obj *ShopSys) StockDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ShopStock, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CoCouponSave is client rpc method as defined
func (obj *ShopSys) CoCouponSave(input ShopCoupon, _opt ...map[string]string) (output ShopCoupon, err error) {
	ctx := context.Background()
	return obj.CoCouponSaveWithContext(ctx, input, _opt...)
}

// CoCouponSaveWithContext is client rpc method as defined
func (obj *ShopSys) CoCouponSaveWithContext(ctx context.Context, input ShopCoupon, _opt ...map[string]string) (output ShopCoupon, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CoCouponSave", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponDelete is client rpc method as defined
func (obj *ShopSys) CouponDelete(input ShopCoupon, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.CouponDeleteWithContext(ctx, input, _opt...)
}

// CouponDeleteWithContext is client rpc method as defined
func (obj *ShopSys) CouponDeleteWithContext(ctx context.Context, input ShopCoupon, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponDetail is client rpc method as defined
func (obj *ShopSys) CouponDetail(input ReqId, _opt ...map[string]string) (output ResShopCoupon, err error) {
	ctx := context.Background()
	return obj.CouponDetailWithContext(ctx, input, _opt...)
}

// CouponDetailWithContext is client rpc method as defined
func (obj *ShopSys) CouponDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ResShopCoupon, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponListPage is client rpc method as defined
func (obj *ShopSys) CouponListPage(input ReqCouponPage, _opt ...map[string]string) (output ResShopCouponList, err error) {
	ctx := context.Background()
	return obj.CouponListPageWithContext(ctx, input, _opt...)
}

// CouponListPageWithContext is client rpc method as defined
func (obj *ShopSys) CouponListPageWithContext(ctx context.Context, input ReqCouponPage, _opt ...map[string]string) (output ResShopCouponList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponListPage", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponCardAdd is client rpc method as defined
func (obj *ShopSys) CouponCardAdd(input ShopCouponCard, _opt ...map[string]string) (output ShopCouponCard, err error) {
	ctx := context.Background()
	return obj.CouponCardAddWithContext(ctx, input, _opt...)
}

// CouponCardAddWithContext is client rpc method as defined
func (obj *ShopSys) CouponCardAddWithContext(ctx context.Context, input ShopCouponCard, _opt ...map[string]string) (output ShopCouponCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponCardAdd", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponCardEdit is client rpc method as defined
func (obj *ShopSys) CouponCardEdit(input ShopCouponCard, _opt ...map[string]string) (output ShopCouponCard, err error) {
	ctx := context.Background()
	return obj.CouponCardEditWithContext(ctx, input, _opt...)
}

// CouponCardEditWithContext is client rpc method as defined
func (obj *ShopSys) CouponCardEditWithContext(ctx context.Context, input ShopCouponCard, _opt ...map[string]string) (output ShopCouponCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponCardEdit", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponCardDelete is client rpc method as defined
func (obj *ShopSys) CouponCardDelete(input ShopCouponCard, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.CouponCardDeleteWithContext(ctx, input, _opt...)
}

// CouponCardDeleteWithContext is client rpc method as defined
func (obj *ShopSys) CouponCardDeleteWithContext(ctx context.Context, input ShopCouponCard, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponCardDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// CouponCardDetail is client rpc method as defined
func (obj *ShopSys) CouponCardDetail(input ReqId, _opt ...map[string]string) (output ShopCouponCard, err error) {
	ctx := context.Background()
	return obj.CouponCardDetailWithContext(ctx, input, _opt...)
}

// CouponCardDetailWithContext is client rpc method as defined
func (obj *ShopSys) CouponCardDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ShopCouponCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "CouponCardDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockCardAdd is client rpc method as defined
func (obj *ShopSys) StockCardAdd(input ShopStockCard, _opt ...map[string]string) (output ShopStockCard, err error) {
	ctx := context.Background()
	return obj.StockCardAddWithContext(ctx, input, _opt...)
}

// StockCardAddWithContext is client rpc method as defined
func (obj *ShopSys) StockCardAddWithContext(ctx context.Context, input ShopStockCard, _opt ...map[string]string) (output ShopStockCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockCardAdd", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockCardEdit is client rpc method as defined
func (obj *ShopSys) StockCardEdit(input ShopStockCard, _opt ...map[string]string) (output ShopStockCard, err error) {
	ctx := context.Background()
	return obj.StockCardEditWithContext(ctx, input, _opt...)
}

// StockCardEditWithContext is client rpc method as defined
func (obj *ShopSys) StockCardEditWithContext(ctx context.Context, input ShopStockCard, _opt ...map[string]string) (output ShopStockCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockCardEdit", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockCardDelete is client rpc method as defined
func (obj *ShopSys) StockCardDelete(input ShopStockCard, _opt ...map[string]string) (output ResultCount, err error) {
	ctx := context.Background()
	return obj.StockCardDeleteWithContext(ctx, input, _opt...)
}

// StockCardDeleteWithContext is client rpc method as defined
func (obj *ShopSys) StockCardDeleteWithContext(ctx context.Context, input ShopStockCard, _opt ...map[string]string) (output ResultCount, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockCardDelete", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// StockCardDetail is client rpc method as defined
func (obj *ShopSys) StockCardDetail(input ReqId, _opt ...map[string]string) (output ShopStockCard, err error) {
	ctx := context.Background()
	return obj.StockCardDetailWithContext(ctx, input, _opt...)
}

// StockCardDetailWithContext is client rpc method as defined
func (obj *ShopSys) StockCardDetailWithContext(ctx context.Context, input ReqId, _opt ...map[string]string) (output ShopStockCard, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "StockCardDetail", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// FakerBuy is client rpc method as defined
func (obj *ShopSys) FakerBuy(input Faker, _opt ...map[string]string) (output Faker, err error) {
	ctx := context.Background()
	return obj.FakerBuyWithContext(ctx, input, _opt...)
}

// FakerBuyWithContext is client rpc method as defined
func (obj *ShopSys) FakerBuyWithContext(ctx context.Context, input Faker, _opt ...map[string]string) (output Faker, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "FakerBuy", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}
