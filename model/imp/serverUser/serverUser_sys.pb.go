// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serverUser_sys.proto

package serverUser

import (
	context "context"
	fmt "fmt"
	tars "github.com/TarsCloud/TarsGo/tars"
	model "github.com/TarsCloud/TarsGo/tars/model"
	requestf "github.com/TarsCloud/TarsGo/tars/protocol/res/requestf"
	current "github.com/TarsCloud/TarsGo/tars/util/current"
	tools "github.com/TarsCloud/TarsGo/tars/util/tools"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User_Status int32

const (
	User_NORMAL User_Status = 0
	User_LOCK   User_Status = 1
)

var User_Status_name = map[int32]string{
	0: "NORMAL",
	1: "LOCK",
}

var User_Status_value = map[string]int32{
	"NORMAL": 0,
	"LOCK":   1,
}

func (x User_Status) String() string {
	return proto.EnumName(User_Status_name, int32(x))
}

func (User_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{5, 0}
}

type ResultEmpty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultEmpty) Reset()         { *m = ResultEmpty{} }
func (m *ResultEmpty) String() string { return proto.CompactTextString(m) }
func (*ResultEmpty) ProtoMessage()    {}
func (*ResultEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{0}
}

func (m *ResultEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultEmpty.Unmarshal(m, b)
}
func (m *ResultEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultEmpty.Marshal(b, m, deterministic)
}
func (m *ResultEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultEmpty.Merge(m, src)
}
func (m *ResultEmpty) XXX_Size() int {
	return xxx_messageInfo_ResultEmpty.Size(m)
}
func (m *ResultEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_ResultEmpty proto.InternalMessageInfo

// TODO: 公共部分  -----------------------------------------------------------
// 分页
type PageInfo struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	OrderKey             string   `protobuf:"bytes,3,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageInfo) Reset()         { *m = PageInfo{} }
func (m *PageInfo) String() string { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()    {}
func (*PageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{1}
}

func (m *PageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInfo.Unmarshal(m, b)
}
func (m *PageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInfo.Marshal(b, m, deterministic)
}
func (m *PageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInfo.Merge(m, src)
}
func (m *PageInfo) XXX_Size() int {
	return xxx_messageInfo_PageInfo.Size(m)
}
func (m *PageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PageInfo proto.InternalMessageInfo

func (m *PageInfo) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PageInfo) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PageInfo) GetOrderKey() string {
	if m != nil {
		return m.OrderKey
	}
	return ""
}

// 默认输出
type Result struct {
	Code                 int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Header               map[string]string `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{2}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Result) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Result) GetHeader() map[string]string {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Result) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// ID
type ReqId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqId) Reset()         { *m = ReqId{} }
func (m *ReqId) String() string { return proto.CompactTextString(m) }
func (*ReqId) ProtoMessage()    {}
func (*ReqId) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{3}
}

func (m *ReqId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqId.Unmarshal(m, b)
}
func (m *ReqId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqId.Marshal(b, m, deterministic)
}
func (m *ReqId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqId.Merge(m, src)
}
func (m *ReqId) XXX_Size() int {
	return xxx_messageInfo_ReqId.Size(m)
}
func (m *ReqId) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqId.DiscardUnknown(m)
}

var xxx_messageInfo_ReqId proto.InternalMessageInfo

func (m *ReqId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// TODO: 用户基础操作部分
type ReqPass struct {
	Password             string    `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	UserList             *UserList `protobuf:"bytes,2,opt,name=userList,proto3" json:"userList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReqPass) Reset()         { *m = ReqPass{} }
func (m *ReqPass) String() string { return proto.CompactTextString(m) }
func (*ReqPass) ProtoMessage()    {}
func (*ReqPass) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{4}
}

func (m *ReqPass) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqPass.Unmarshal(m, b)
}
func (m *ReqPass) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqPass.Marshal(b, m, deterministic)
}
func (m *ReqPass) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqPass.Merge(m, src)
}
func (m *ReqPass) XXX_Size() int {
	return xxx_messageInfo_ReqPass.Size(m)
}
func (m *ReqPass) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqPass.DiscardUnknown(m)
}

var xxx_messageInfo_ReqPass proto.InternalMessageInfo

func (m *ReqPass) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ReqPass) GetUserList() *UserList {
	if m != nil {
		return m.UserList
	}
	return nil
}

// 登录用户
type User struct {
	Id                   int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32       `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32       `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Pass                 string      `protobuf:"bytes,4,opt,name=pass,proto3" json:"pass,omitempty"`
	Encrypt              string      `protobuf:"bytes,5,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	IsReal               int32       `protobuf:"varint,6,opt,name=is_real,json=isReal,proto3" json:"is_real,omitempty"`
	State                User_Status `protobuf:"varint,7,opt,name=state,proto3,enum=serverUser.User_Status" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{5}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *User) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *User) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

func (m *User) GetEncrypt() string {
	if m != nil {
		return m.Encrypt
	}
	return ""
}

func (m *User) GetIsReal() int32 {
	if m != nil {
		return m.IsReal
	}
	return 0
}

func (m *User) GetState() User_Status {
	if m != nil {
		return m.State
	}
	return User_NORMAL
}

// 用户资料
type UserData struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Avatar               string   `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Sex                  bool     `protobuf:"varint,3,opt,name=sex,proto3" json:"sex,omitempty"`
	Source               string   `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	NickName             string   `protobuf:"bytes,5,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	RealName             string   `protobuf:"bytes,6,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	IdCard               string   `protobuf:"bytes,7,opt,name=id_card,json=idCard,proto3" json:"id_card,omitempty"`
	RealType             int32    `protobuf:"varint,8,opt,name=real_type,json=realType,proto3" json:"real_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserData) Reset()         { *m = UserData{} }
func (m *UserData) String() string { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()    {}
func (*UserData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{6}
}

func (m *UserData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserData.Unmarshal(m, b)
}
func (m *UserData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserData.Marshal(b, m, deterministic)
}
func (m *UserData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserData.Merge(m, src)
}
func (m *UserData) XXX_Size() int {
	return xxx_messageInfo_UserData.Size(m)
}
func (m *UserData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserData.DiscardUnknown(m)
}

var xxx_messageInfo_UserData proto.InternalMessageInfo

func (m *UserData) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserData) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *UserData) GetSex() bool {
	if m != nil {
		return m.Sex
	}
	return false
}

func (m *UserData) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *UserData) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *UserData) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *UserData) GetIdCard() string {
	if m != nil {
		return m.IdCard
	}
	return ""
}

func (m *UserData) GetRealType() int32 {
	if m != nil {
		return m.RealType
	}
	return 0
}

// 登录用户
type UserList struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Uid                  int64    `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Type                 int32    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	User                 string   `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{7}
}

func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (m *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(m, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserList) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UserList) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *UserList) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserList) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UserList) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

// 用户登录记录
type UserLogin struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Uid                  int64    `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Platform             string   `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	Device               string   `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`
	Ip                   string   `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	Token                string   `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLogin) Reset()         { *m = UserLogin{} }
func (m *UserLogin) String() string { return proto.CompactTextString(m) }
func (*UserLogin) ProtoMessage()    {}
func (*UserLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{8}
}

func (m *UserLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLogin.Unmarshal(m, b)
}
func (m *UserLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLogin.Marshal(b, m, deterministic)
}
func (m *UserLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLogin.Merge(m, src)
}
func (m *UserLogin) XXX_Size() int {
	return xxx_messageInfo_UserLogin.Size(m)
}
func (m *UserLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLogin.DiscardUnknown(m)
}

var xxx_messageInfo_UserLogin proto.InternalMessageInfo

func (m *UserLogin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserLogin) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UserLogin) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *UserLogin) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserLogin) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *UserLogin) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *UserLogin) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *UserLogin) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ResUserLogin struct {
	List                 []*UserLogin `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count                int32        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResUserLogin) Reset()         { *m = ResUserLogin{} }
func (m *ResUserLogin) String() string { return proto.CompactTextString(m) }
func (*ResUserLogin) ProtoMessage()    {}
func (*ResUserLogin) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{9}
}

func (m *ResUserLogin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResUserLogin.Unmarshal(m, b)
}
func (m *ResUserLogin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResUserLogin.Marshal(b, m, deterministic)
}
func (m *ResUserLogin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResUserLogin.Merge(m, src)
}
func (m *ResUserLogin) XXX_Size() int {
	return xxx_messageInfo_ResUserLogin.Size(m)
}
func (m *ResUserLogin) XXX_DiscardUnknown() {
	xxx_messageInfo_ResUserLogin.DiscardUnknown(m)
}

var xxx_messageInfo_ResUserLogin proto.InternalMessageInfo

func (m *ResUserLogin) GetList() []*UserLogin {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ResUserLogin) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// 用户邮寄地址
type UserMailing struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Default              int32    `protobuf:"varint,4,opt,name=default,proto3" json:"default,omitempty"`
	Province             int32    `protobuf:"varint,5,opt,name=province,proto3" json:"province,omitempty"`
	City                 int32    `protobuf:"varint,6,opt,name=city,proto3" json:"city,omitempty"`
	County               int32    `protobuf:"varint,7,opt,name=county,proto3" json:"county,omitempty"`
	Address              string   `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	Name                 string   `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Mobile               string   `protobuf:"bytes,10,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMailing) Reset()         { *m = UserMailing{} }
func (m *UserMailing) String() string { return proto.CompactTextString(m) }
func (*UserMailing) ProtoMessage()    {}
func (*UserMailing) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{10}
}

func (m *UserMailing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMailing.Unmarshal(m, b)
}
func (m *UserMailing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMailing.Marshal(b, m, deterministic)
}
func (m *UserMailing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMailing.Merge(m, src)
}
func (m *UserMailing) XXX_Size() int {
	return xxx_messageInfo_UserMailing.Size(m)
}
func (m *UserMailing) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMailing.DiscardUnknown(m)
}

var xxx_messageInfo_UserMailing proto.InternalMessageInfo

func (m *UserMailing) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserMailing) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UserMailing) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *UserMailing) GetDefault() int32 {
	if m != nil {
		return m.Default
	}
	return 0
}

func (m *UserMailing) GetProvince() int32 {
	if m != nil {
		return m.Province
	}
	return 0
}

func (m *UserMailing) GetCity() int32 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *UserMailing) GetCounty() int32 {
	if m != nil {
		return m.County
	}
	return 0
}

func (m *UserMailing) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UserMailing) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserMailing) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

type ResUserMailing struct {
	List                 []*UserMailing `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count                int32          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResUserMailing) Reset()         { *m = ResUserMailing{} }
func (m *ResUserMailing) String() string { return proto.CompactTextString(m) }
func (*ResUserMailing) ProtoMessage()    {}
func (*ResUserMailing) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{11}
}

func (m *ResUserMailing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResUserMailing.Unmarshal(m, b)
}
func (m *ResUserMailing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResUserMailing.Marshal(b, m, deterministic)
}
func (m *ResUserMailing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResUserMailing.Merge(m, src)
}
func (m *ResUserMailing) XXX_Size() int {
	return xxx_messageInfo_ResUserMailing.Size(m)
}
func (m *ResUserMailing) XXX_DiscardUnknown() {
	xxx_messageInfo_ResUserMailing.DiscardUnknown(m)
}

var xxx_messageInfo_ResUserMailing proto.InternalMessageInfo

func (m *ResUserMailing) GetList() []*UserMailing {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ResUserMailing) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// TODO: 地址库操作
// 中国 区域查询
type UserRegion struct {
	Id                   int32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId             int32     `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Name                 string    `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Loc                  []float64 `protobuf:"fixed64,6,rep,packed,name=loc,proto3" json:"loc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserRegion) Reset()         { *m = UserRegion{} }
func (m *UserRegion) String() string { return proto.CompactTextString(m) }
func (*UserRegion) ProtoMessage()    {}
func (*UserRegion) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{12}
}

func (m *UserRegion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRegion.Unmarshal(m, b)
}
func (m *UserRegion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRegion.Marshal(b, m, deterministic)
}
func (m *UserRegion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRegion.Merge(m, src)
}
func (m *UserRegion) XXX_Size() int {
	return xxx_messageInfo_UserRegion.Size(m)
}
func (m *UserRegion) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRegion.DiscardUnknown(m)
}

var xxx_messageInfo_UserRegion proto.InternalMessageInfo

func (m *UserRegion) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserRegion) GetParentId() int32 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *UserRegion) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserRegion) GetLoc() []float64 {
	if m != nil {
		return m.Loc
	}
	return nil
}

type ResUserRegionName struct {
	Province             int32    `protobuf:"varint,1,opt,name=province,proto3" json:"province,omitempty"`
	City                 int32    `protobuf:"varint,2,opt,name=city,proto3" json:"city,omitempty"`
	County               int32    `protobuf:"varint,3,opt,name=county,proto3" json:"county,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResUserRegionName) Reset()         { *m = ResUserRegionName{} }
func (m *ResUserRegionName) String() string { return proto.CompactTextString(m) }
func (*ResUserRegionName) ProtoMessage()    {}
func (*ResUserRegionName) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{13}
}

func (m *ResUserRegionName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResUserRegionName.Unmarshal(m, b)
}
func (m *ResUserRegionName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResUserRegionName.Marshal(b, m, deterministic)
}
func (m *ResUserRegionName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResUserRegionName.Merge(m, src)
}
func (m *ResUserRegionName) XXX_Size() int {
	return xxx_messageInfo_ResUserRegionName.Size(m)
}
func (m *ResUserRegionName) XXX_DiscardUnknown() {
	xxx_messageInfo_ResUserRegionName.DiscardUnknown(m)
}

var xxx_messageInfo_ResUserRegionName proto.InternalMessageInfo

func (m *ResUserRegionName) GetProvince() int32 {
	if m != nil {
		return m.Province
	}
	return 0
}

func (m *ResUserRegionName) GetCity() int32 {
	if m != nil {
		return m.City
	}
	return 0
}

func (m *ResUserRegionName) GetCounty() int32 {
	if m != nil {
		return m.County
	}
	return 0
}

type ResUserRegion struct {
	List                 []*UserRegion `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Count                int32         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ResUserRegion) Reset()         { *m = ResUserRegion{} }
func (m *ResUserRegion) String() string { return proto.CompactTextString(m) }
func (*ResUserRegion) ProtoMessage()    {}
func (*ResUserRegion) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ad7ecb944c8f7c9, []int{14}
}

func (m *ResUserRegion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResUserRegion.Unmarshal(m, b)
}
func (m *ResUserRegion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResUserRegion.Marshal(b, m, deterministic)
}
func (m *ResUserRegion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResUserRegion.Merge(m, src)
}
func (m *ResUserRegion) XXX_Size() int {
	return xxx_messageInfo_ResUserRegion.Size(m)
}
func (m *ResUserRegion) XXX_DiscardUnknown() {
	xxx_messageInfo_ResUserRegion.DiscardUnknown(m)
}

var xxx_messageInfo_ResUserRegion proto.InternalMessageInfo

func (m *ResUserRegion) GetList() []*UserRegion {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ResUserRegion) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterEnum("serverUser.User_Status", User_Status_name, User_Status_value)
	proto.RegisterType((*ResultEmpty)(nil), "serverUser.ResultEmpty")
	proto.RegisterType((*PageInfo)(nil), "serverUser.PageInfo")
	proto.RegisterType((*Result)(nil), "serverUser.Result")
	proto.RegisterMapType((map[string]string)(nil), "serverUser.Result.HeaderEntry")
	proto.RegisterType((*ReqId)(nil), "serverUser.ReqId")
	proto.RegisterType((*ReqPass)(nil), "serverUser.ReqPass")
	proto.RegisterType((*User)(nil), "serverUser.User")
	proto.RegisterType((*UserData)(nil), "serverUser.UserData")
	proto.RegisterType((*UserList)(nil), "serverUser.UserList")
	proto.RegisterType((*UserLogin)(nil), "serverUser.UserLogin")
	proto.RegisterType((*ResUserLogin)(nil), "serverUser.ResUserLogin")
	proto.RegisterType((*UserMailing)(nil), "serverUser.UserMailing")
	proto.RegisterType((*ResUserMailing)(nil), "serverUser.ResUserMailing")
	proto.RegisterType((*UserRegion)(nil), "serverUser.UserRegion")
	proto.RegisterType((*ResUserRegionName)(nil), "serverUser.ResUserRegionName")
	proto.RegisterType((*ResUserRegion)(nil), "serverUser.ResUserRegion")
}

func init() { proto.RegisterFile("serverUser_sys.proto", fileDescriptor_0ad7ecb944c8f7c9) }

var fileDescriptor_0ad7ecb944c8f7c9 = []byte{
	// 1018 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0x23, 0x35,
	0x14, 0xce, 0x64, 0x3a, 0x93, 0xcc, 0xe9, 0x0f, 0xc1, 0x94, 0xed, 0x90, 0xd5, 0xae, 0xa2, 0xb9,
	0x0a, 0x20, 0x2a, 0x54, 0x10, 0x02, 0xb4, 0x5c, 0x94, 0xa5, 0x62, 0xab, 0xed, 0x6e, 0x17, 0x97,
	0x85, 0x0b, 0x2e, 0x22, 0x37, 0x76, 0xc3, 0xa8, 0xc9, 0x4c, 0xd6, 0x76, 0x0a, 0xc3, 0x2d, 0x6f,
	0xc0, 0x53, 0xf0, 0x02, 0x3c, 0x02, 0x77, 0x3c, 0x09, 0x4f, 0x81, 0xce, 0xb1, 0x27, 0x4d, 0x9b,
	0xa4, 0x12, 0x68, 0xb9, 0xca, 0xf9, 0x9b, 0xcf, 0xdf, 0xf9, 0x7c, 0x6c, 0x07, 0x76, 0x8d, 0xd2,
	0x57, 0x4a, 0xbf, 0x34, 0x4a, 0x0f, 0x4c, 0x65, 0xf6, 0xa7, 0xba, 0xb4, 0x25, 0x83, 0xeb, 0x68,
	0xb6, 0x0d, 0x9b, 0x5c, 0x99, 0xd9, 0xd8, 0x1e, 0x4d, 0xa6, 0xb6, 0xca, 0xbe, 0x83, 0xf6, 0x0b,
	0x31, 0x52, 0xc7, 0xc5, 0x45, 0xc9, 0x18, 0x6c, 0x4c, 0xc5, 0x48, 0xa5, 0x41, 0x2f, 0xe8, 0x47,
	0x9c, 0x6c, 0xd6, 0x85, 0x36, 0xfe, 0x9e, 0xe5, 0xbf, 0xa8, 0xb4, 0x49, 0xf1, 0xb9, 0x8f, 0xb9,
	0x52, 0x4b, 0xa5, 0x9f, 0xaa, 0x2a, 0x0d, 0x7b, 0x41, 0x3f, 0xe1, 0x73, 0x3f, 0xfb, 0x23, 0x80,
	0xd8, 0xad, 0x83, 0xb0, 0xc3, 0x52, 0xce, 0x61, 0xd1, 0x66, 0x1d, 0x08, 0x27, 0x66, 0x44, 0x88,
	0x09, 0x47, 0x93, 0x7d, 0x02, 0xf1, 0x8f, 0x4a, 0x48, 0xa5, 0xd3, 0xb0, 0x17, 0xf6, 0x37, 0x0f,
	0x1e, 0xee, 0x5f, 0x93, 0xde, 0x77, 0x48, 0xfb, 0x4f, 0xa8, 0xe0, 0xa8, 0xb0, 0xba, 0xe2, 0xbe,
	0x1a, 0xd1, 0xcf, 0x4b, 0x59, 0xa5, 0x1b, 0xbd, 0xa0, 0xbf, 0xc5, 0xc9, 0xee, 0x7e, 0x06, 0x9b,
	0x0b, 0xa5, 0xb8, 0xd8, 0xa5, 0xaa, 0x68, 0xfd, 0x84, 0xa3, 0xc9, 0x76, 0x21, 0xba, 0x12, 0xe3,
	0x99, 0xf2, 0x04, 0x9c, 0xf3, 0x79, 0xf3, 0xd3, 0x20, 0xdb, 0x83, 0x88, 0xab, 0x57, 0xc7, 0x92,
	0xed, 0x40, 0x33, 0x97, 0xf4, 0x4d, 0xc8, 0x9b, 0xb9, 0xcc, 0xbe, 0x87, 0x16, 0x57, 0xaf, 0x5e,
	0x08, 0x63, 0x9c, 0x26, 0xc6, 0xfc, 0x54, 0x6a, 0xe9, 0x41, 0xe7, 0x3e, 0xfb, 0x10, 0xda, 0x33,
	0xa3, 0xf4, 0x49, 0x6e, 0x2c, 0x81, 0x6f, 0x1e, 0xec, 0x2e, 0x36, 0xf2, 0xd2, 0xe7, 0xf8, 0xbc,
	0x2a, 0xfb, 0x3b, 0x80, 0x0d, 0x0c, 0xdf, 0x5e, 0x91, 0x3d, 0x00, 0x18, 0x6a, 0x25, 0xac, 0x92,
	0x03, 0x61, 0xbd, 0xf8, 0x89, 0x8f, 0x1c, 0x5a, 0x4c, 0xcf, 0xa6, 0xb2, 0x4e, 0x87, 0x2e, 0xed,
	0x23, 0x87, 0xd6, 0x6d, 0xa6, 0x31, 0xa4, 0x4b, 0xc2, 0xc9, 0x66, 0x29, 0xb4, 0x54, 0x31, 0xd4,
	0xd5, 0xd4, 0xa6, 0x11, 0x85, 0x6b, 0x97, 0xed, 0x41, 0x2b, 0x37, 0x03, 0xad, 0xc4, 0x38, 0x8d,
	0x09, 0x29, 0xce, 0x0d, 0x57, 0x62, 0xcc, 0x3e, 0x80, 0xc8, 0x58, 0x61, 0x55, 0xda, 0xea, 0x05,
	0xfd, 0x9d, 0x83, 0xbd, 0xdb, 0xcd, 0xec, 0x9f, 0x59, 0x61, 0x67, 0x86, 0xbb, 0xaa, 0xec, 0x21,
	0xc4, 0x2e, 0xc0, 0x00, 0xe2, 0xe7, 0xa7, 0xfc, 0xd9, 0xe1, 0x49, 0xa7, 0xc1, 0xda, 0xb0, 0x71,
	0x72, 0xfa, 0xf8, 0x69, 0x27, 0xc8, 0xfe, 0x0a, 0xa0, 0x8d, 0x9f, 0x7d, 0x25, 0xac, 0x58, 0x6a,
	0xf8, 0x1e, 0xc4, 0xe2, 0x4a, 0x58, 0xa1, 0xfd, 0xb6, 0x78, 0x0f, 0xf7, 0xcf, 0xa8, 0x9f, 0xa9,
	0xc5, 0x36, 0x47, 0x13, 0x2b, 0x4d, 0x39, 0xd3, 0x43, 0xe5, 0xdb, 0xf3, 0x1e, 0xbb, 0x0f, 0x49,
	0x91, 0x0f, 0x2f, 0x07, 0x85, 0x98, 0x28, 0xdf, 0x62, 0x1b, 0x03, 0xcf, 0xc5, 0x84, 0x92, 0xd8,
	0xa0, 0x4b, 0xc6, 0x2e, 0x89, 0x01, 0x4a, 0xa2, 0x00, 0x72, 0x30, 0x14, 0x5a, 0x52, 0xa7, 0x09,
	0x8f, 0x73, 0xf9, 0x58, 0x68, 0x39, 0xff, 0xca, 0x56, 0x53, 0x95, 0xb6, 0xdd, 0x09, 0xc0, 0xc0,
	0xb7, 0xd5, 0x54, 0x65, 0xbf, 0xf9, 0x76, 0x70, 0x23, 0x5f, 0xf3, 0xfe, 0x75, 0x20, 0x9c, 0xe5,
	0x92, 0xfa, 0x0b, 0x39, 0x9a, 0xb8, 0xa3, 0x44, 0x22, 0x72, 0xe7, 0x08, 0x6d, 0x8c, 0xe1, 0x20,
	0xf9, 0x76, 0xc8, 0xce, 0xfe, 0x0c, 0x20, 0x21, 0x52, 0xe5, 0x28, 0x2f, 0xfe, 0x77, 0x56, 0x78,
	0x18, 0xc6, 0xc2, 0x5e, 0x94, 0x7a, 0x52, 0x2b, 0x5e, 0xfb, 0xb8, 0x4d, 0x52, 0x5d, 0xe5, 0xc3,
	0x5a, 0x6e, 0xef, 0x11, 0xa7, 0xa9, 0xd7, 0xb9, 0x99, 0x4f, 0xf1, 0x38, 0xda, 0xf2, 0x52, 0x15,
	0xa4, 0x6f, 0xc2, 0x9d, 0x93, 0x9d, 0xc2, 0x16, 0x57, 0xe6, 0xba, 0x93, 0x77, 0x61, 0x63, 0x8c,
	0xc7, 0x2a, 0xa0, 0xfb, 0xe1, 0xed, 0xa5, 0x63, 0x85, 0x45, 0x9c, 0x4a, 0x10, 0x70, 0x58, 0xce,
	0x8a, 0xba, 0x3f, 0xe7, 0x64, 0xbf, 0x36, 0x61, 0x13, 0x2b, 0x9f, 0x89, 0x7c, 0x9c, 0x17, 0xa3,
	0xd7, 0x2c, 0x4d, 0x0a, 0x2d, 0xa9, 0x2e, 0xc4, 0x6c, 0x6c, 0x49, 0x9e, 0x88, 0xd7, 0x2e, 0x49,
	0xa4, 0xcb, 0xab, 0xbc, 0x18, 0xd6, 0x9b, 0x37, 0xf7, 0xe9, 0x72, 0xcc, 0x6d, 0xe5, 0x4f, 0x1d,
	0xd9, 0x28, 0x1b, 0x11, 0xae, 0x48, 0xa2, 0x88, 0x7b, 0x0f, 0x57, 0x10, 0x52, 0x6a, 0x65, 0x8c,
	0x17, 0xaa, 0x76, 0x11, 0x85, 0xa6, 0x3a, 0x71, 0x63, 0x80, 0x36, 0xa2, 0x4c, 0xca, 0xf3, 0x7c,
	0xac, 0x52, 0x70, 0xe2, 0x3b, 0x2f, 0x3b, 0x83, 0x1d, 0x2f, 0x6b, 0xad, 0xc3, 0xfb, 0x37, 0x84,
	0x5d, 0x3a, 0xe2, 0xbe, 0xec, 0x4e, 0x69, 0x07, 0x00, 0x58, 0xca, 0xd5, 0x28, 0x2f, 0x17, 0x67,
	0x2e, 0x22, 0x61, 0xef, 0x43, 0x32, 0x15, 0x5a, 0x15, 0x76, 0xe0, 0x67, 0x87, 0x5e, 0x11, 0x0c,
	0x1c, 0xcb, 0x39, 0xf7, 0x68, 0x81, 0x7b, 0x07, 0xc2, 0x71, 0x39, 0x4c, 0xe3, 0x5e, 0xd8, 0x0f,
	0x38, 0x9a, 0xd9, 0x0f, 0xf0, 0xa6, 0x67, 0xed, 0xd6, 0xa0, 0x43, 0xbb, 0x28, 0x6c, 0xb0, 0x46,
	0xd8, 0xe6, 0x4a, 0x61, 0xc3, 0x45, 0x61, 0xb3, 0x6f, 0x60, 0xfb, 0x06, 0x38, 0x7b, 0xef, 0x86,
	0x22, 0xf7, 0x6e, 0x2b, 0xe2, 0xaa, 0xee, 0x12, 0xe4, 0xe0, 0xf7, 0x18, 0x5a, 0x78, 0x1a, 0xcf,
	0x2a, 0xc3, 0x3e, 0x86, 0xc8, 0x4d, 0xf0, 0x5b, 0x37, 0xdf, 0x34, 0x7a, 0x4d, 0xba, 0x4b, 0xef,
	0x03, 0xde, 0x8d, 0x59, 0x83, 0x3d, 0x82, 0x36, 0x7d, 0x75, 0x3a, 0xb3, 0x6c, 0xf5, 0xb0, 0x77,
	0xf7, 0x96, 0xdf, 0x48, 0xf7, 0xaa, 0x37, 0xd8, 0x17, 0x90, 0x50, 0x0d, 0x5d, 0xb4, 0xff, 0xfe,
	0xf3, 0x47, 0xb0, 0x55, 0x53, 0x21, 0x84, 0x95, 0x24, 0xef, 0xa0, 0xbe, 0x55, 0xdf, 0x8a, 0xab,
	0xbf, 0xc6, 0x4c, 0x77, 0x65, 0x34, 0x6b, 0xb0, 0x2f, 0x61, 0x7b, 0xce, 0x91, 0x2e, 0xd6, 0x35,
	0xf4, 0xd3, 0x5b, 0xf4, 0xe7, 0x99, 0xac, 0xc1, 0x8e, 0xe0, 0x8d, 0x85, 0xd1, 0x25, 0x12, 0xeb,
	0xe6, 0xba, 0xbb, 0x2e, 0x91, 0x35, 0xd8, 0x93, 0x1b, 0x30, 0x44, 0x66, 0x2d, 0x4c, 0x77, 0x05,
	0x9d, 0x6b, 0xa4, 0x23, 0xd8, 0xb9, 0x9e, 0x1c, 0x02, 0x5a, 0x33, 0x55, 0xdd, 0x77, 0x56, 0xe0,
	0xb8, 0x14, 0x69, 0xb3, 0x00, 0x43, 0x6d, 0xad, 0x83, 0x59, 0x13, 0xbf, 0x4d, 0x85, 0xce, 0xd1,
	0x83, 0xb5, 0x4b, 0x62, 0xba, 0xcb, 0x96, 0xe7, 0x24, 0x6b, 0xb0, 0xaf, 0xa1, 0xb3, 0xd0, 0x51,
	0x31, 0x3a, 0x11, 0xff, 0xad, 0xa7, 0xf3, 0x98, 0xfe, 0xa4, 0x7e, 0xf4, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x63, 0x1d, 0x80, 0xfd, 0xbc, 0x0a, 0x00, 0x00,
}

// This following code was generated by tarsrpc
// Gernerated from serverUser_sys.proto
type UserSys struct {
	s model.Servant
}

//SetServant is required by the servant interface.
func (obj *UserSys) SetServant(s model.Servant) {
	obj.s = s
}

//AddServant is required by the servant interface
func (obj *UserSys) AddServant(imp impUserSys, objStr string) {
	tars.AddServant(obj, imp, objStr)
}

////AddServant adds servant  for the service with context
func (obj *UserSys) AddServantWithContext(imp impUserSysWithContext, objStr string) {
	tars.AddServantWithContext(obj, imp, objStr)
}

//TarsSetTimeout is required by the servant interface. t is the timeout in ms.
func (obj *UserSys) TarsSetTimeout(t int) {
	obj.s.TarsSetTimeout(t)
}

//TarsSetProtocol is required by the servant interface. t is the protocol.
func (obj *UserSys) TarsSetProtocol(p model.Protocol) {
	obj.s.TarsSetProtocol(p)
}

type impUserSys interface {
	Login(input ReqPass) (output UserData, err error)
	LoginOut(input UserLogin) (output ResultEmpty, err error)
	LoginData(input UserLogin) (output ResultEmpty, err error)
	UserDataData(input UserData) (output UserData, err error)
	UserListData(input UserList) (output UserList, err error)
	UserLoginList(input UserLogin) (output ResUserLogin, err error)
	UserMailingData(input UserMailing) (output UserMailing, err error)
	UserMailingList(input UserMailing) (output ResUserMailing, err error)
	UserRegionList(input UserRegion) (output ResUserRegion, err error)
	UserRegionData(input UserRegion) (output UserRegion, err error)
	UserRegionName(input ResUserRegionName) (output Result, err error)
	UserRegionLngLat(input UserRegion) (output ResUserRegion, err error)
}

type impUserSysWithContext interface {
	Login(ctx context.Context, input ReqPass) (output UserData, err error)
	LoginOut(ctx context.Context, input UserLogin) (output ResultEmpty, err error)
	LoginData(ctx context.Context, input UserLogin) (output ResultEmpty, err error)
	UserDataData(ctx context.Context, input UserData) (output UserData, err error)
	UserListData(ctx context.Context, input UserList) (output UserList, err error)
	UserLoginList(ctx context.Context, input UserLogin) (output ResUserLogin, err error)
	UserMailingData(ctx context.Context, input UserMailing) (output UserMailing, err error)
	UserMailingList(ctx context.Context, input UserMailing) (output ResUserMailing, err error)
	UserRegionList(ctx context.Context, input UserRegion) (output ResUserRegion, err error)
	UserRegionData(ctx context.Context, input UserRegion) (output UserRegion, err error)
	UserRegionName(ctx context.Context, input ResUserRegionName) (output Result, err error)
	UserRegionLngLat(ctx context.Context, input UserRegion) (output ResUserRegion, err error)
}

//Dispatch is used to call the user implement of the defined method.
func (obj *UserSys) Dispatch(ctx context.Context, val interface{}, req *requestf.RequestPacket, resp *requestf.ResponsePacket, withContext bool) (err error) {
	input := tools.Int8ToByte(req.SBuffer)
	var output []byte
	funcName := req.SFuncName
	switch funcName {

	case "Login":
		inputDefine := ReqPass{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res UserData
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.Login(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.Login(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "LoginOut":
		inputDefine := UserLogin{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResultEmpty
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.LoginOut(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.LoginOut(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "LoginData":
		inputDefine := UserLogin{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResultEmpty
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.LoginData(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.LoginData(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserDataData":
		inputDefine := UserData{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res UserData
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserDataData(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserDataData(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserListData":
		inputDefine := UserList{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res UserList
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserListData(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserListData(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserLoginList":
		inputDefine := UserLogin{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResUserLogin
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserLoginList(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserLoginList(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserMailingData":
		inputDefine := UserMailing{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res UserMailing
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserMailingData(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserMailingData(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserMailingList":
		inputDefine := UserMailing{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResUserMailing
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserMailingList(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserMailingList(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserRegionList":
		inputDefine := UserRegion{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResUserRegion
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserRegionList(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserRegionList(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserRegionData":
		inputDefine := UserRegion{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res UserRegion
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserRegionData(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserRegionData(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserRegionName":
		inputDefine := ResUserRegionName{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res Result
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserRegionName(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserRegionName(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	case "UserRegionLngLat":
		inputDefine := UserRegion{}
		if err = proto.Unmarshal(input, &inputDefine); err != nil {
			return err
		}
		var res ResUserRegion
		if withContext == false {
			imp := val.(impUserSys)
			res, err = imp.UserRegionLngLat(inputDefine)
			if err != nil {
				return err
			}
		} else {
			imp := val.(impUserSysWithContext)
			res, err = imp.UserRegionLngLat(ctx, inputDefine)
			if err != nil {
				return err
			}
		}
		output, err = proto.Marshal(&res)
		if err != nil {
			return err
		}

	default:
		return fmt.Errorf("func mismatch")
	}
	var _status map[string]string
	s, ok := current.GetResponseStatus(ctx)
	if ok && s != nil {
		_status = s
	}
	var _context map[string]string
	c, ok := current.GetResponseContext(ctx)
	if ok && c != nil {
		_context = c
	}
	*resp = requestf.ResponsePacket{
		IVersion:     1,
		CPacketType:  0,
		IRequestId:   req.IRequestId,
		IMessageType: 0,
		IRet:         0,
		SBuffer:      tools.ByteToInt8(output),
		Status:       _status,
		SResultDesc:  "",
		Context:      _context,
	}
	return nil
}

// Login is client rpc method as defined
func (obj *UserSys) Login(input ReqPass, _opt ...map[string]string) (output UserData, err error) {
	ctx := context.Background()
	return obj.LoginWithContext(ctx, input, _opt...)
}

// LoginWithContext is client rpc method as defined
func (obj *UserSys) LoginWithContext(ctx context.Context, input ReqPass, _opt ...map[string]string) (output UserData, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "Login", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// LoginOut is client rpc method as defined
func (obj *UserSys) LoginOut(input UserLogin, _opt ...map[string]string) (output ResultEmpty, err error) {
	ctx := context.Background()
	return obj.LoginOutWithContext(ctx, input, _opt...)
}

// LoginOutWithContext is client rpc method as defined
func (obj *UserSys) LoginOutWithContext(ctx context.Context, input UserLogin, _opt ...map[string]string) (output ResultEmpty, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "LoginOut", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// LoginData is client rpc method as defined
func (obj *UserSys) LoginData(input UserLogin, _opt ...map[string]string) (output ResultEmpty, err error) {
	ctx := context.Background()
	return obj.LoginDataWithContext(ctx, input, _opt...)
}

// LoginDataWithContext is client rpc method as defined
func (obj *UserSys) LoginDataWithContext(ctx context.Context, input UserLogin, _opt ...map[string]string) (output ResultEmpty, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "LoginData", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserDataData is client rpc method as defined
func (obj *UserSys) UserDataData(input UserData, _opt ...map[string]string) (output UserData, err error) {
	ctx := context.Background()
	return obj.UserDataDataWithContext(ctx, input, _opt...)
}

// UserDataDataWithContext is client rpc method as defined
func (obj *UserSys) UserDataDataWithContext(ctx context.Context, input UserData, _opt ...map[string]string) (output UserData, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserDataData", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserListData is client rpc method as defined
func (obj *UserSys) UserListData(input UserList, _opt ...map[string]string) (output UserList, err error) {
	ctx := context.Background()
	return obj.UserListDataWithContext(ctx, input, _opt...)
}

// UserListDataWithContext is client rpc method as defined
func (obj *UserSys) UserListDataWithContext(ctx context.Context, input UserList, _opt ...map[string]string) (output UserList, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserListData", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserLoginList is client rpc method as defined
func (obj *UserSys) UserLoginList(input UserLogin, _opt ...map[string]string) (output ResUserLogin, err error) {
	ctx := context.Background()
	return obj.UserLoginListWithContext(ctx, input, _opt...)
}

// UserLoginListWithContext is client rpc method as defined
func (obj *UserSys) UserLoginListWithContext(ctx context.Context, input UserLogin, _opt ...map[string]string) (output ResUserLogin, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserLoginList", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserMailingData is client rpc method as defined
func (obj *UserSys) UserMailingData(input UserMailing, _opt ...map[string]string) (output UserMailing, err error) {
	ctx := context.Background()
	return obj.UserMailingDataWithContext(ctx, input, _opt...)
}

// UserMailingDataWithContext is client rpc method as defined
func (obj *UserSys) UserMailingDataWithContext(ctx context.Context, input UserMailing, _opt ...map[string]string) (output UserMailing, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserMailingData", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserMailingList is client rpc method as defined
func (obj *UserSys) UserMailingList(input UserMailing, _opt ...map[string]string) (output ResUserMailing, err error) {
	ctx := context.Background()
	return obj.UserMailingListWithContext(ctx, input, _opt...)
}

// UserMailingListWithContext is client rpc method as defined
func (obj *UserSys) UserMailingListWithContext(ctx context.Context, input UserMailing, _opt ...map[string]string) (output ResUserMailing, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserMailingList", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserRegionList is client rpc method as defined
func (obj *UserSys) UserRegionList(input UserRegion, _opt ...map[string]string) (output ResUserRegion, err error) {
	ctx := context.Background()
	return obj.UserRegionListWithContext(ctx, input, _opt...)
}

// UserRegionListWithContext is client rpc method as defined
func (obj *UserSys) UserRegionListWithContext(ctx context.Context, input UserRegion, _opt ...map[string]string) (output ResUserRegion, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserRegionList", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserRegionData is client rpc method as defined
func (obj *UserSys) UserRegionData(input UserRegion, _opt ...map[string]string) (output UserRegion, err error) {
	ctx := context.Background()
	return obj.UserRegionDataWithContext(ctx, input, _opt...)
}

// UserRegionDataWithContext is client rpc method as defined
func (obj *UserSys) UserRegionDataWithContext(ctx context.Context, input UserRegion, _opt ...map[string]string) (output UserRegion, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserRegionData", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserRegionName is client rpc method as defined
func (obj *UserSys) UserRegionName(input ResUserRegionName, _opt ...map[string]string) (output Result, err error) {
	ctx := context.Background()
	return obj.UserRegionNameWithContext(ctx, input, _opt...)
}

// UserRegionNameWithContext is client rpc method as defined
func (obj *UserSys) UserRegionNameWithContext(ctx context.Context, input ResUserRegionName, _opt ...map[string]string) (output Result, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserRegionName", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}

// UserRegionLngLat is client rpc method as defined
func (obj *UserSys) UserRegionLngLat(input UserRegion, _opt ...map[string]string) (output ResUserRegion, err error) {
	ctx := context.Background()
	return obj.UserRegionLngLatWithContext(ctx, input, _opt...)
}

// UserRegionLngLatWithContext is client rpc method as defined
func (obj *UserSys) UserRegionLngLatWithContext(ctx context.Context, input UserRegion, _opt ...map[string]string) (output ResUserRegion, err error) {
	var inputMarshal []byte
	inputMarshal, err = proto.Marshal(&input)
	if err != nil {
		return output, err
	}

	var _status map[string]string
	var _context map[string]string
	if len(_opt) == 1 {
		_context = _opt[0]
	} else if len(_opt) == 2 {
		_context = _opt[0]
		_status = _opt[1]
	}

	resp := new(requestf.ResponsePacket)

	err = obj.s.Tars_invoke(ctx, 0, "UserRegionLngLat", inputMarshal, _status, _context, resp)
	if err != nil {
		return output, err
	}
	if err = proto.Unmarshal(tools.Int8ToByte(resp.SBuffer), &output); err != nil {
		return output, err
	}

	if len(_opt) == 1 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
	} else if len(_opt) == 2 {
		for k := range _context {
			delete(_context, k)
		}
		for k, v := range resp.Context {
			_context[k] = v
		}
		for k := range _status {
			delete(_status, k)
		}
		for k, v := range resp.Status {
			_status[k] = v
		}
	}

	return output, nil
}
